[{"C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\index.js":"1","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\App.js":"2","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\reportWebVitals.js":"3","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Root of equation\\Bisection.js":"4","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Root of equation\\False-position.js":"5","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Root of equation\\One-pointIteration.js":"6","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Root of equation\\Secant.js":"7","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Root of equation\\Newtonraphson.js":"8","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Linear\\Cramerrule.js":"9","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Linear\\GuassElimination.js":"10","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Linear\\GuassJordan.js":"11","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Linear\\LU.js":"12","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Linear\\Cholesky.js":"13","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Linear\\Jacobi.js":"14","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Linear\\Conjugate.js":"15","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Interpolation\\Spline.js":"16","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Interpolation\\Lagrange.js":"17","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Leastsqaures\\PolynomialRegression.js":"18","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Leastsqaures\\LinearRegression.js":"19","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Leastsqaures\\Multiple_LinearRegression.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":5181,"mtime":1617646923584,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":6932,"mtime":1617740437194,"results":"25","hashOfConfig":"22"},{"size":6824,"mtime":1617526722643,"results":"26","hashOfConfig":"22"},{"size":5521,"mtime":1617527654143,"results":"27","hashOfConfig":"22"},{"size":5837,"mtime":1617558447954,"results":"28","hashOfConfig":"22"},{"size":5548,"mtime":1617558428208,"results":"29","hashOfConfig":"22"},{"size":7310,"mtime":1617559700833,"results":"30","hashOfConfig":"22"},{"size":7835,"mtime":1617560132745,"results":"31","hashOfConfig":"22"},{"size":8120,"mtime":1617560588620,"results":"32","hashOfConfig":"22"},{"size":6360,"mtime":1617560961100,"results":"33","hashOfConfig":"22"},{"size":6688,"mtime":1617561208260,"results":"34","hashOfConfig":"22"},{"size":9111,"mtime":1617568592195,"results":"35","hashOfConfig":"22"},{"size":9933,"mtime":1617573628612,"results":"36","hashOfConfig":"22"},{"size":8842,"mtime":1617646204333,"results":"37","hashOfConfig":"22"},{"size":6232,"mtime":1585079282000,"results":"38","hashOfConfig":"22"},{"size":7090,"mtime":1585079282000,"results":"39","hashOfConfig":"22"},{"size":6386,"mtime":1585079282000,"results":"40","hashOfConfig":"22"},{"size":345,"mtime":1585079282000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"538766",{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\index.js",[],["92","93"],"C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\App.js",["94","95","96"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Menu } from 'antd';\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Sider from 'antd/lib/layout/Sider';\nimport Layout, { Content } from 'antd/lib/layout/layout';\nimport Bisection from './code/Root of equation/Bisection';\nimport Falseposition from './code/Root of equation/False-position';\nimport Onepoint from './code/Root of equation/One-pointIteration';\nimport Newton from './code/Root of equation/Newtonraphson';\nimport Secant from './code/Root of equation/Secant';\n\nimport Cramerrule from './code/Linear/Cramerrule';\nimport GuassElimination from './code/Linear/GuassElimination';\nimport GuassJordan from './code/Linear/GuassJordan';\nimport LU from './code/Linear/LU';\nimport Cholesky from './code/Linear/Cholesky';\nimport Jacobi from './code/Linear/Jacobi';\nimport Conjugate from './code/Linear/Conjugate';\n\nimport Lagrange from './code/Interpolation/Lagrange';\nimport Spline from './code/Interpolation/Spline';\n\nimport LinearRegression from './code/Leastsqaures/LinearRegression';\nimport Multiple_LinearRegression from './code/Leastsqaures/Multiple_LinearRegression';\nimport PolynomialRegression from './code/Leastsqaures/PolynomialRegression';\n\n\n\n\nconst { SubMenu } = Menu;\n\nclass App extends React.Component {\n  handleClick = e => {\n    console.log('click ', e);\n  };\n\n  render() {\n    return (\n      <Router>\n      <Layout>\n      <Sider width={250}>\n      <Menu\n        onClick={this.handleClick}\n        style={{ width: 256 }}\n        defaultSelectedKeys={['1']}\n        defaultOpenKeys={['sub1']}\n        mode=\"inline\"\n      >\n      <SubMenu key=\"sub2\" icon={<AppstoreOutlined />} title=\"Root of Eqaution\">\n          <Menu.Item key=\"5\">Bisection <Link to=\"/bisection\"></Link></Menu.Item>\n          <Menu.Item key=\"6\">False-position<Link to=\"/false-position\"></Link></Menu.Item>\n          <Menu.Item key=\"7\">One-point Iteration<Link to=\"/onepoint\"></Link></Menu.Item>\n          <Menu.Item key=\"8\">Newtonraphson<Link to=\"/Newton\"></Link></Menu.Item>\n          <Menu.Item key=\"9\">Secant<Link to=\"/Secant\"></Link></Menu.Item>\n\n        </SubMenu>\n        <SubMenu key=\"sub4\" icon={<SettingOutlined />} title=\"Linear Equation\">\n          <Menu.Item key=\"10\">Cramer's Rule<Link to=\"/Cramerrule\"></Link></Menu.Item>\n          <Menu.Item key=\"11\">Guass Elimination<Link to=\"/GuassElimination\"></Link></Menu.Item>\n          <Menu.Item key=\"12\">GuassJordan<Link to=\"/GuassJordan\"></Link></Menu.Item>\n          <Menu.Item key=\"13\">LU<Link to=\"/LU\"></Link></Menu.Item>\n          <Menu.Item key=\"14\">Cholesky<Link to=\"/Cholesky\"></Link></Menu.Item>\n          <Menu.Item key=\"14\">Jacobi<Link to=\"/Jacobi\"></Link></Menu.Item>\n          <Menu.Item key=\"15\">Conjugate<Link to=\"/Conjugate\"></Link></Menu.Item>\n          \n        </SubMenu>\n\n        <SubMenu key=\"sub3\" icon={<AppstoreOutlined />} title=\"Interpolation\">\n          <Menu.Item key=\"16\">Newton divided-differences<Link to=\"/bisection=\"></Link></Menu.Item>\n          <Menu.Item key=\"17\">Lagrange polynomials<Link to=\"/Lagrange\"></Link></Menu.Item>\n          <Menu.Item key=\"18\">Spline interpolation<Link to=\"/Spline\"></Link></Menu.Item>\n        \n        </SubMenu>\n\n        <SubMenu key=\"sub5\" icon={<AppstoreOutlined />} title=\"Least sqaures Regresstion\">\n          <Menu.Item key=\"16\">Linear Regression<Link to=\"/LinearRegression\"></Link></Menu.Item>\n          <Menu.Item key=\"17\">polynomials Regresstion<Link to=\"/PolynomialRegression\"></Link></Menu.Item>\n          <Menu.Item key=\"18\">Multiple Linear Regression<Link to=\"/Multiple_LinearRegression\"></Link></Menu.Item>\n        \n        </SubMenu>\n      </Menu>\n      </Sider>\n      <Layout>\n        <Content>\n          <Route path=\"/bisection\" component={Bisection}></Route>  \n          <Route path=\"/False-position\" component={Falseposition}></Route>  \n          <Route path=\"/onepoint\" component={Onepoint}></Route>  \n          <Route path=\"/Newton\" component={Newton}></Route>  \n          <Route path=\"/Secant\" component={Secant}></Route>  \n          <Route path=\"/Cramerrule\" component={Cramerrule}></Route>  \n          <Route path=\"/GuassElimination\" component={GuassElimination}></Route>  \n          <Route path=\"/GuassJordan\" component={GuassJordan}></Route>  \n          <Route path=\"/LU\" component={LU}></Route>  \n          <Route path=\"/Cholesky\" component={Cholesky}></Route>  \n          <Route path=\"/Jacobi\" component={Jacobi}></Route>  \n          <Route path=\"/Conjugate\" component={Conjugate}></Route>  \n          <Route path=\"/Lagrange\" component={Lagrange}></Route>  \n          <Route path=\"/Spline\" component={Spline}></Route>  \n          <Route path=\"/LinearRegression\" component={LinearRegression}></Route>  \n          <Route path=\"/Multiple_LinearRegression\" component={Multiple_LinearRegression}></Route>  \n          <Route path=\"/PolynomialRegression\" component={PolynomialRegression}></Route>  \n        </Content>\n      </Layout>\n      </Layout>\n      </Router>\n    );\n  }\n}\n\n\nexport default App;\n","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\reportWebVitals.js",[],"C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Root of equation\\Bisection.js",[],"C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Root of equation\\False-position.js",[],"C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Root of equation\\One-pointIteration.js",[],"C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Root of equation\\Secant.js",[],"C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Root of equation\\Newtonraphson.js",[],"C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Linear\\Cramerrule.js",["97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"import React, { Component } from 'react'\r\n\r\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd';\r\nimport { Carousel } from 'antd';\r\nimport { Layout, Breadcrumb } from 'antd';\r\nimport { range, compile, lusolve, format ,det} from 'mathjs';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst InputStyle = {\r\n    background: \"#f58216\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\nvar A = [], B = [], answer = [], matrixA = [], matrixB = []\r\nclass Cramerrule extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: parseInt(0),\r\n            column: parseInt(0),\r\n            showDimentionForm: true,\r\n            showDimentionButton: true,\r\n            showMatrixForm: false,\r\n            showMatrixButton: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.cramer = this.cramer.bind(this);\r\n\r\n    }\r\n\r\n    cramer() {\r\n        this.initMatrix();\r\n        var counter = 0;\r\n        // eslint-disable-next-line eqeqeq\r\n        while (counter != this.state.row) {\r\n            var transformMatrix = JSON.parse(JSON.stringify(A));//Deep copy\r\n            for (var i = 0; i < this.state.row; i++) {\r\n                for (var j = 0; j < this.state.column; j++) {\r\n                    if (j === counter) {\r\n                        transformMatrix[i][j] = B[i]\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n            counter++;\r\n            answer.push(<h2>X<sub>{counter}</sub>=&nbsp;&nbsp;{Math.round(det(transformMatrix)) / Math.round(det(A))}</h2>)\r\n            answer.push(<br />)\r\n\r\n\r\n\r\n        }\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n\r\n    }\r\n    createMatrix(row, column) {\r\n        for (var i = 1; i <= row; i++) {\r\n            for (var j = 1; j <= column; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\",\r\n                    marginInlineEnd: \"5%\",\r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"black\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }}\r\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\r\n            }\r\n            matrixA.push(<br />)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\",\r\n                marginInlineEnd: \"5%\",\r\n                marginBlockEnd: \"5%\",\r\n                color: \"black\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showDimentionButton: false,\r\n            showMatrixForm: true,\r\n            showMatrixButton: true\r\n        })\r\n\r\n\r\n    }\r\n    initMatrix() {\r\n        for (var i = 0; i < this.state.row; i++) {\r\n            A[i] = []\r\n            for (var j = 0; j < this.state.column; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\r\n        }\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Layout>\r\n                    <Content\r\n                        style={{\r\n                            background: '#FFCC66',\r\n                            padding: 24,\r\n                            margin: 30,\r\n                            minHeight: 280,\r\n                            fontSize: 24\r\n                        }}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        {/*-----------------------------------------ปุ่มINPUTสมการ----------------------------------------------------*/}\r\n                        <Row gutter={[40, 40]}\r\n                            bordered={true}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <Col span={10} offset={7}>\r\n\r\n                                <div>\r\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" ></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" ></Input>\r\n                                </div>\r\n                                {this.state.showDimentionButton &&\r\n                                    <Button id=\"dimention_button\" onClick={\r\n                                        () => this.createMatrix(this.state.row, this.state.column)\r\n                                    }\r\n                                    >\r\n                                        Submit<br></br>\r\n                                    </Button>\r\n                                }\r\n\r\n                                {this.state.showMatrixButton &&\r\n                                    <Button\r\n                                        id=\"matrix_button\"\r\n                                        onClick={()=>this.cramer()}>\r\n                                        Submit\r\n                                    </Button>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[40, 40]}>\r\n                            <Col span={8} offset={4}>\r\n                                <Card\r\n                                    title={<h3>Matrix</h3>}\r\n                                >\r\n                                    {this.state.showMatrixForm && <div>{matrixA}</div>}\r\n                                </Card>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Card\r\n                                    title={<h3>Vector</h3>}\r\n                                >\r\n                                    {this.state.showMatrixForm && <div>{matrixB}</div>}\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <br></br>\r\n                        {/*---------------------------------------------------------------------------------------------*/}\r\n                        <Row gutter={[2, 2]}>\r\n                            <Col span={10} offset={7}>\r\n                                <Card\r\n                                    title={<h3>Outpot</h3>}\r\n                                    bordered={true}\r\n                                    onChange={this.handleChange} id=\"answerCard\">\r\n                                    <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{answer}</p>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Content>\r\n                </Layout>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\nexport default Cramerrule;","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Linear\\GuassElimination.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"import React, { Component } from 'react'\r\n\r\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd';\r\nimport { Carousel } from 'antd';\r\nimport { Layout, Breadcrumb } from 'antd';\r\nimport { range, compile, lusolve, format ,det} from 'mathjs';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst InputStyle = {\r\n    background: \"#f58216\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\nvar A = [], B = [], X, matrixA = [], matrixB = [], output = []\r\nclass Appc3 extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm : true,\r\n            showDimentionButton: true,\r\n            showMatrixForm: false,\r\n            showMatrixButton: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.gauss = this.gauss.bind(this);\r\n    \r\n    }\r\n\r\n    gauss(n) {\r\n        this.initMatrix()\r\n        if (A[0][0] === 0) { //pivoting\r\n            var tempRow = JSON.parse(JSON.stringify(A[0]));\r\n            var tempColumn = B[0];\r\n            A[0] = A[1];\r\n            A[1] = tempRow;\r\n            B[0] = B[1];\r\n            B[1] = tempColumn;\r\n        }\r\n        //Forward eliminated\r\n        for(var k=0 ; k<n ; k++) {\r\n            for(var i=k+1 ; i<n ; i++) {\r\n                var factor = A[i][k] / A[k][k];\r\n                for (var j=k ; j<n ; j++) {\r\n                    A[i][j] = A[i][j] - factor*A[k][j];\r\n                }\r\n                B[i] = B[i] - factor*B[k];\r\n\r\n            }\r\n        }\r\n        alert(A)\r\n        alert(B)\r\n        //Backward Substitution\r\n        X = new Array(n);\r\n        X[n-1] = B[n-1] / A[n-1][n-1]; //find Xn\r\n        for(i=n-2 ; i>=0 ; i--) { //find Xn-1 to X1\r\n            var sum = B[i];\r\n            for (j=i+1 ; j<n ; j++) {\r\n                sum = sum - A[i][j]*X[j];\r\n            }\r\n            X[i] = Math.round(sum / A[i][i]);\r\n        }    \r\n        for (i=0 ; i<n ; i++) {\r\n            output.push(\"x\"+(i+1)+\" = \"+X[i]);\r\n            output.push(<br/>)\r\n        }\r\n\r\n\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n      \r\n    }\r\n    createMatrix(row, column) {\r\n        A = []\r\n        B = []\r\n        X = [] \r\n        matrixA = []\r\n        matrixB = []\r\n        output = []\r\n        for (var i=1 ; i<=row ; i++) {\r\n            for (var j=1 ; j<=column ; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\", \r\n                    marginInlineEnd: \"5%\", \r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"black\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }} \r\n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \r\n            }\r\n            matrixA.push(<br/>)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"black\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\r\n                \r\n            \r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showDimentionButton: false,\r\n            showMatrixForm: true,\r\n            showMatrixButton: true\r\n        })\r\n        \r\n\r\n    }\r\n    initMatrix() {\r\n        for(var i=0 ; i<this.state.row ; i++) {\r\n            A[i] = []\r\n            for(var j=0 ; j<this.state.column ; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Layout>\r\n                    <Content\r\n                        style={{\r\n                            background: '#FFCC66',\r\n                            padding: 24,\r\n                            margin: 30,\r\n                            minHeight: 280,\r\n                            fontSize: 24\r\n                        }}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        {/*-----------------------------------------ปุ่มINPUTสมการ----------------------------------------------------*/}\r\n                        <Row gutter={[40, 40]}\r\n                            bordered={true}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <Col span={10} offset={7}>\r\n\r\n                                <div>\r\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" ></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" ></Input>\r\n                                </div>\r\n                                {this.state.showDimentionButton &&\r\n                                    <Button id=\"dimention_button\" onClick={\r\n                                        ()=>this.createMatrix(this.state.row, this.state.column)\r\n                                    }\r\n                                    >\r\n                                        Submit<br></br>\r\n                                    </Button>\r\n                                }\r\n\r\n                                {this.state.showMatrixButton &&\r\n                                    <Button\r\n                                        id=\"matrix_button\"\r\n                                        onClick={()=>this.gauss(this.state.row)}>\r\n                                        Submit\r\n                                    </Button>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[40, 40]}>\r\n                            <Col span={8} offset={4}>\r\n                                <Card\r\n                                    title={<h3>Matrix</h3>}\r\n                                >\r\n                                    {this.state.showMatrixForm && <div>{matrixA}</div>}\r\n                                </Card>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Card\r\n                                    title={<h3>Vector</h3>}\r\n                                >\r\n                                    {this.state.showMatrixForm && <div>{matrixB}</div>}\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <br></br>\r\n                        {/*---------------------------------------------------------------------------------------------*/}\r\n                        <Row gutter={[2, 2]}>\r\n                            <Col span={10} offset={7}>\r\n                                <Card\r\n                                    title={<h3>Outpot</h3>}\r\n                                    bordered={true}\r\n                                    onChange={this.handleChange} id=\"answerCard\">\r\n                                    <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{output}</p>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Content>\r\n                </Layout>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\nexport default Appc3;","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Linear\\GuassJordan.js",["140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],"import React, { Component } from 'react'\r\n\r\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd';\r\nimport { Carousel } from 'antd';\r\nimport { Layout, Breadcrumb } from 'antd';\r\nimport { range, compile, lusolve, format, det, subtract, multiply, transpose, add,inv,fraction } from 'mathjs';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst InputStyle = {\r\n    background: \"#f58216\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\nvar A = [], B = [], matrixA = [], matrixB = [], output = []\r\n\r\nclass Appc8 extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm : true,\r\n            showDimentionButton: true,\r\n            showMatrixForm: false,\r\n            showMatrixButton: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.jordan = this.jordan.bind(this);\r\n    \r\n    }\r\n\r\n    jordan(n) {\r\n        this.initMatrix();\r\n        if (A[0][0] === 0) { //pivoting\r\n            var tempRow = JSON.parse(JSON.stringify(A[0]));\r\n            var tempColumn = B[0];\r\n            A[0] = A[1];\r\n            A[1] = tempRow;\r\n            B[0] = B[1];\r\n            B[1] = tempColumn;\r\n        }\r\n        //Forward eliminate\r\n        for(var k=0 ; k<n ; k++) {\r\n            for(var i=k+1 ; i<n ; i++) {\r\n                var factor = A[i][k] / A[k][k];\r\n                for (var j=k ; j<n ; j++) {\r\n                    A[i][j] = A[i][j] - factor*A[k][j];\r\n                }\r\n                B[i] = B[i] - factor*B[k];\r\n\r\n            }\r\n        }\r\n        //Backward Substitution\r\n        for (k=n-1 ; k>=0 ; k--) {\r\n            for(i=k ; i>=0 ; i--) {\r\n                \r\n                if (i === k) {//Identity matrix\r\n                    factor = 1 / A[i][k];\r\n            \r\n                    for (j=0 ; j<n ; j++) {\r\n                        A[i][j] = A[i][j] * factor;\r\n                    }\r\n                    B[i] = B[i] * factor;\r\n                \r\n                \r\n                }\r\n                else {\r\n                    factor = A[i][k] / A[k][k];\r\n                    for (j=0 ; j<n ; j++) {\r\n                        A[i][j] = A[i][j] - factor*A[k][j];\r\n                    }\r\n                    B[i] = B[i] - factor*B[k];\r\n                }\r\n            } \r\n        }\r\n        for (i=0 ; i<n ; i++) {\r\n            output.push(B[i]);\r\n            output.push(<br/>)\r\n        }\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n      \r\n    }\r\n    createMatrix(row, column) {\r\n        for (var i=1 ; i<=row ; i++) {\r\n            for (var j=1 ; j<=column ; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\", \r\n                    marginInlineEnd: \"5%\", \r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"black\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }} \r\n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \r\n            }\r\n            matrixA.push(<br/>)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"black\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\r\n                \r\n            \r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showDimentionButton: false,\r\n            showMatrixForm: true,\r\n            showMatrixButton: true\r\n        })\r\n        \r\n\r\n    }\r\n    initMatrix() {\r\n        for(var i=0 ; i<this.state.row ; i++) {\r\n            A[i] = []\r\n            for(var j=0 ; j<this.state.column ; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Layout>\r\n                    <Content\r\n                        style={{\r\n                            background: '#FFCC66',\r\n                            padding: 24,\r\n                            margin: 30,\r\n                            minHeight: 280,\r\n                            fontSize: 24\r\n                        }}\r\n                        onChange={this.handleChange}\r\n                    >\r\n\r\n                        {/*-----------------------------------------ปุ่มINPUTสมการ----------------------------------------------------*/}\r\n                        <Row gutter={[40, 40]}\r\n                            bordered={true}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <Col span={10} offset={7}>\r\n\r\n                                <div>\r\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" ></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" ></Input>\r\n                                </div>\r\n                                {this.state.showDimentionButton &&\r\n                                    <Button id=\"dimention_button\" onClick={\r\n                                        ()=>this.createMatrix(this.state.row, this.state.column)\r\n                                    }\r\n                                    >\r\n                                        Submit<br></br>\r\n                                    </Button>\r\n                                }\r\n\r\n                                {this.state.showMatrixButton &&\r\n                                    <Button\r\n                                        id=\"matrix_button\"\r\n                                        onClick={()=>this.jordan(this.state.row)}>\r\n                                        Submit\r\n                                    </Button>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[40, 40]}>\r\n                            <Col span={8} offset={4}>\r\n                                <Card\r\n                                    title={<h3>Matrix</h3>}\r\n                                >\r\n                                    {this.state.showMatrixForm && <div>{matrixA}</div>}\r\n                                </Card>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Card\r\n                                    title={<h3>Vector</h3>}\r\n                                >\r\n                                    {this.state.showMatrixForm && <div>{matrixB}</div>}\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <br></br>\r\n\r\n                        {/*---------------------------------------------------------------------------------------------*/}\r\n                        <Row gutter={[2, 2]}>\r\n                            <Col span={10} offset={7}>\r\n                                <Card\r\n                                    title={<h3>Outpot</h3>}\r\n                                    bordered={true}\r\n                                    onChange={this.handleChange} id=\"answerCard\">\r\n                                    <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{output}</p>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Content>\r\n                </Layout>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\nexport default Appc8;","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Linear\\LU.js",["168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186"],"import React, { Component } from 'react'\n\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd';\nimport { Carousel } from 'antd';\nimport { Layout, Breadcrumb } from 'antd';\nimport { range, compile, lusolve, format } from 'mathjs';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nconst { Header, Content, Footer, Sider } = Layout;\nconst InputStyle = {\n    background: \"#f58216\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar A = [], B = [], matrixA = [], matrixB = [], output = [], decompose, output2 = [];\nclass LU extends Component {\n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm: true,\n            showDimentionButton: true,\n            showMatrixForm: false,\n            showMatrixButton: false,\n            showOutputCard: true\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.Lu = this.Lu.bind(this);\n\n    }\n\n    Lu(n) {\n        this.initMatrix();\n        decompose = lusolve(A, B)\n        for (var i = 0; i < decompose.length; i++) {\n            output.push(<h2>X<sub>{i}</sub>=&nbsp;&nbsp;{Math.round(decompose[i])}</h2>);\n            output2.push(<h2>X<sub>{i}</sub>=&nbsp;&nbsp;{Math.round(decompose[i])}</h2>);\n            output.push(<br />)\n            output2.push(<br />)\n        }\n        this.setState({\n            showOutputCard: true,\n            showMatrixButton: false\n        });\n\n\n    }\n\n\n\n    printFraction(value) {\n        return format(value, { fraction: 'ratio' })\n    }\n\n\n    createMatrix(row, column) {\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(<Input style={{\n                    width: \"18%\",\n                    height: \"50%\",\n                    marginInlineEnd: \"5%\",\n                    marginBlockEnd: \"5%\",\n                    color: \"black\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }}\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\n            }\n            matrixA.push(<br />)\n            matrixB.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\n\n\n        }\n        this.setState({\n            showDimentionForm: false,\n            showDimentionButton: false,\n            showMatrixForm: true,\n            showMatrixButton: true,\n            showoldMatrixButton: false\n        })\n\n\n    }\n    initMatrix() {\n        var c = [],d = [];\n        for (var i = 0; i < this.state.row; i++) {\n            c[i] = []\n            for (var j = 0; j < this.state.column; j++) {\n                c[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\n            }\n            d.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n        }\n        A = c;\n        B = d;\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return (\n            <Router>\n                <Layout>\n                    <Content\n                        style={{\n                            background: '#FFCC66',\n                            padding: 24,\n                            margin: 30,\n                            minHeight: 280,\n                            fontSize: 24\n                        }}\n                        onChange={this.handleChange}\n                    >\n                        {/*-----------------------------------------ปุ่มINPUTสมการ----------------------------------------------------*/}\n                        <Row gutter={[40, 40]}\n                            bordered={true}\n                            onChange={this.handleChange}\n                        >\n                            <Col span={10} offset={7}>\n\n                                <div>\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" ></Input>\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" ></Input>\n                                </div>\n                                {this.state.showDimentionButton &&\n                                    <Button id=\"dimention_button\" onClick={\n                                        () => this.createMatrix(this.state.row, this.state.column)\n\n                                    }\n                                    >\n                                        Submit<br></br>\n                                    </Button>\n                                }\n\n                                    <Button\n                                        id=\"matrix_button\"\n                                        onClick={() => this.Lu(this.state.row)}>\n                                        Submit\n                                    </Button>\n                            </Col>\n                        </Row>\n                        <Row gutter={[40, 40]}>\n                            <Col span={8} offset={4}>\n                                <Card\n                                    title={<h3>Matrix</h3>}\n                                >\n                                    {this.state.showMatrixForm && <div>{matrixA}</div>}\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card\n                                    title={<h3>Vector</h3>}\n                                >\n                                    {this.state.showMatrixForm && <div>{matrixB}</div>}\n                                </Card>\n                            </Col>\n                        </Row>\n                        <br></br>\n                        {/*---------------------------------------------------------------------------------------------*/}\n                    </Content>\n                </Layout>\n            </Router>\n        );\n    }\n}\nexport default LU;","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Linear\\Cholesky.js",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206"],"import React, { Component } from 'react'\n\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd';\nimport { Carousel } from 'antd';\nimport { Layout, Breadcrumb } from 'antd';\nimport { range, compile, lusolve, format ,det} from 'mathjs';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nconst { Header, Content, Footer, Sider } = Layout;\nconst InputStyle = {\n    background: \"#f58216\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar A = [], B = [], matrixA = [], matrixB = [], output = [], decompose;\nclass Cholesky extends Component {\n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm : true,\n            showDimentionButton: true,\n            showMatrixForm: false,\n            showMatrixButton: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.Lu = this.Lu.bind(this);\n    \n    }\n\n    Lu(n) {\n        this.initMatrix();\n        decompose = lusolve(A, B)\n        for (var i=0 ; i<decompose.length ; i++) {\n            output.push(Math.round(decompose[i]));\n            output.push(<br/>)\n        }\n        this.setState({\n            showOutputCard: true\n        });\n    }\n    \n    printFraction (value) {\n        return format(value, { fraction: 'ratio' })\n    }\n\n    createMatrix(row, column) {\n        for (var i=1 ; i<=row ; i++) {\n            for (var j=1 ; j<=column ; j++) {\n                matrixA.push(<Input style={{\n                    width: \"18%\",\n                    height: \"50%\", \n                    marginInlineEnd: \"5%\", \n                    marginBlockEnd: \"5%\",\n                    color: \"black\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }} \n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \n            }\n            matrixA.push(<br/>)\n            matrixB.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\n                \n            \n        }\n\n        this.setState({\n            showDimentionForm: false,\n            showDimentionButton: false,\n            showMatrixForm: true,\n            showMatrixButton: true\n        })\n        \n\n    }\n    initMatrix() {\n        for(var i=0 ; i<this.state.row ; i++) {\n            A[i] = []\n            for(var j=0 ; j<this.state.column ; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <Router>\n                <Layout>\n                    <Content\n                        style={{\n                            background: '#FFCC66',\n                            padding: 24,\n                            margin: 30,\n                            minHeight: 280,\n                            fontSize: 24\n                        }}\n                        onChange={this.handleChange}\n                    >\n                        {/*-----------------------------------------ปุ่มINPUTสมการ----------------------------------------------------*/}\n                        <Row gutter={[40, 40]}\n                            bordered={true}\n                            onChange={this.handleChange}\n                        >\n                            <Col span={10} offset={7}>\n\n                                <div>\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" ></Input>\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" ></Input>\n                                </div>\n                                {this.state.showDimentionButton &&\n                                    <Button id=\"dimention_button\" onClick={\n                                        ()=>this.createMatrix(this.state.row, this.state.column)\n                                    }\n                                    >\n                                        Submit<br></br>\n                                    </Button>\n                                }\n\n                                {this.state.showMatrixButton &&\n                                    <Button\n                                        id=\"matrix_button\"\n                                        onClick={()=>this.Lu(this.state.row)}>\n                                        Submit\n                                    </Button>\n                                }\n                            </Col>\n                        </Row>\n                        <Row gutter={[40, 40]}>\n                            <Col span={8} offset={4}>\n                                <Card\n                                    title={<h3>Matrix</h3>}\n                                >\n                                    {this.state.showMatrixForm && <div>{matrixA}</div>}\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card\n                                    title={<h3>Vector</h3>}\n                                >\n                                    {this.state.showMatrixForm && <div>{matrixB}</div>}\n                                </Card>\n                            </Col>\n                        </Row>\n                        <br></br>\n                        {/*---------------------------------------------------------------------------------------------*/}\n                        <Row gutter={[2, 2]}>\n                            <Col span={10} offset={7}>\n                                <Card\n                                    title={<h3>Outpot</h3>}\n                                    bordered={true}\n                                    onChange={this.handleChange} id=\"answerCard\">\n                                    <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{output}</p>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Content>\n                </Layout>\n            </Router>\n        );\n    }\n}\nexport default Cholesky;","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Linear\\Jacobi.js",["207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233"],"import React, { Component } from 'react'\n\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd';\nimport { Carousel } from 'antd';\nimport { Layout, Breadcrumb } from 'antd';\nimport { range, compile, lusolve, format, det, subtract, multiply, transpose, add,inv,fraction } from 'mathjs';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nconst { Header, Content, Footer, Sider } = Layout;\nconst InputStyle = {\n    background: \"#f58216\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar A = [], B = [], matrixA = [], matrixB = [], x , epsilon, dataInTable = [], count=1;\nvar columns = [\n    {\n      title: \"Iteration\",\n      dataIndex: \"iteration\",\n      key: \"iteration\"\n    }\n];\n\nclass Jacobi extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm : true,\n            showDimentionButton: true,\n            showMatrixForm: false,\n            showMatrixButton: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.jacobi = this.jacobi.bind(this);\n    \n    }\n\n  \n    jacobi(n) {\n        this.initMatrix();\n        x = new Array(n);\n        var temp;\n        var stop = 0;\n        var xold = new Array(n);\n        epsilon = new Array(n);\n        x.fill(0)\n        xold.fill(0);\n        do {\n            temp = [];\n            xold = x;\n            for (var i=0 ; i<n ; i++) {\n                var sum = 0;\n                for (var j=0 ; j<n ; j++) {\n                    if (i !== j) { //else i == j That is a divide number\n                        sum = sum + A[i][j]*x[j];\n                    }\n                }\n                temp[i] = (B[i] - sum)/A[i][i]; //update x[i]\n                \n            }        \n            x = temp;\n            stop++;\n        } while(this.error(x, xold) && stop<100); //if true , continue next iteration\n        /*\n        \n        for (i=0 ; i<x.length ; i++) {\n                output.push(x[i]);\n                output.push(<br/>);\n        }*/\n        this.setState({\n            showOutputCard: true\n        });\n\n      \n    }\n    error(xnew, xold) {\n        for (var i=0 ; i<xnew.length ; i++) {\n            console.log(Math.abs((xnew[i]-xold[i]) / xnew[i]))\n            if(isNaN(Math.abs((xnew[i]-xold[i]) / xnew[i]))){\n                epsilon[i] = 0\n            }\n            else{\n                epsilon[i] = Math.abs((xnew[i]-xold[i]) / xnew[i])\n            }\n        }\n        \n        this.appendTable(x, epsilon);\n\n        for (i=0 ; i<epsilon.length ; i++) {\n            \n            if (epsilon[i] > 0.000001) {\n                return true;\n            }    \n        }\n        return false;  \n    }   \n    createMatrix(row, column) {\n        for (var i=1 ; i<=row ; i++) {\n            for (var j=1 ; j<=column ; j++) {\n                matrixA.push(<Input style={{\n                    width: \"18%\",\n                    height: \"50%\", \n\n                    marginInlineEnd: \"5%\", \n                    marginBlockEnd: \"5%\",\n                    color: \"black\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }} \n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \n            }\n            matrixA.push(<br/>)\n            matrixB.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\n                \n            \n        }\n\n        this.setState({\n            showDimentionForm: false,\n            showDimentionButton: false,\n            showMatrixForm: true,\n            showMatrixButton: true\n        })\n\n        \n\n    }\n    initMatrix() {\n        for(var i=0 ; i<this.state.row ; i++) {\n            A[i] = []\n            for(var j=0 ; j<this.state.column ; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\n        }\n    }\n    initialSchema(n) {\n        for (var i=1 ; i<=n ; i++) {\n            columns.push({\n                title: \"X\"+i,\n                dataIndex: \"x\"+i,\n                key: \"x\"+i\n            },)\n        }\n        for (i=1 ; i<=n ; i++) {\n            columns.push({\n                title: \"Error\"+i,\n                dataIndex: \"error\"+i,\n                key: \"error\"+i\n            },)\n        }\n    }\n    appendTable(x, error) {\n        var tag = ''\n        tag += '{\"iteration\": ' + (count++) + ',';\n        for (var i=0 ; i<x.length ; i++) {\n            tag += '\"x'+(i+1)+'\": '+x[i].toFixed(8)+', \"error'+(i+1)+'\": ' + error[i].toFixed(8);\n            if (i !== x.length-1) {\n                tag += ','\n            }\n        }\n        tag += '}';\n        console.log(tag)\n        dataInTable.push(JSON.parse(tag));\n        console.log(dataInTable)\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <Router>\n                <Layout>\n                    <Content\n                        style={{\n                            background: '#FFCC66',\n                            padding: 24,\n                            margin: 30,\n                            minHeight: 280,\n                            fontSize: 24\n                        }}\n                        onChange={this.handleChange}\n                    >\n\n                        {/*-----------------------------------------ปุ่มINPUTสมการ----------------------------------------------------*/}\n                        <Row gutter={[40, 40]}\n                            \n                            onChange={this.handleChange}\n                        >\n                            <Col span={10} offset={7}>\n\n                                <div>\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" ></Input>\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" ></Input>\n                                </div>\n                                {this.state.showDimentionButton &&\n                                    <Button id=\"dimention_button\" onClick={\n                                        ()=>{this.createMatrix(this.state.row, this.state.column);this.initialSchema(this.state.row)}\n                                    }\n                                    >\n                                        Submit<br></br>\n                                    </Button>\n                                }\n\n                                {this.state.showMatrixButton &&\n                                    <Button\n                                        id=\"matrix_button\"\n                                        onClick={()=>this.jacobi(parseInt(this.state.row))}>\n                                        Submit\n                                    </Button>\n                                }\n                            </Col>\n                        </Row>\n                        <Row gutter={[40, 40]}>\n                            <Col span={8} offset={4}>\n                                <Card\n                                    title={<h3>Matrix</h3>}\n                                >\n                                    {this.state.showMatrixForm && <div>{matrixA}</div>}\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card\n                                    title={<h3>Vector</h3>}\n                                >\n                                    {this.state.showMatrixForm && <div>{matrixB}</div>}\n                                </Card>\n                            </Col>\n                        </Row>\n                        <br></br>\n\n                        {/*---------------------------------------------------------------------------------------------*/}\n                        <Row gutter={[2, 2]}>\n                            <Col span={10} offset={7}>\n                                <Card\n                                    title={<h3>Outpot</h3>}\n                                    bordered={true}\n                                    onChange={this.handleChange} id=\"answerCard\">\n                                    <Table columns={columns} dataSource={dataInTable} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"black\", overflowX: \"scroll\", border:\"2px solid white\"}}\n                            ></Table>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Content>\n                </Layout>\n            </Router>\n        );\n    }\n}\nexport default Jacobi;","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Linear\\Conjugate.js",["234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254"],"import React, { Component } from 'react'\r\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd';\r\nimport { Carousel } from 'antd';\r\nimport { range, compile, lusolve, format, det ,subtract,multiply,transpose,add} from 'mathjs';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\nimport { Layout, Breadcrumb } from 'antd';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst InputStyle = {\r\n    background: \"#f58216\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\nvar A = [], B = [], matrixA = [], matrixB = [], matrixX = [], x, epsilon, dataInTable = [], count = 1, output\r\nvar columns = [\r\n    {\r\n        title: \"Iteration\",\r\n        dataIndex: \"iteration\",\r\n        key: \"iteration\"\r\n    },\r\n    {\r\n        title: \"λ\",\r\n        dataIndex: \"lambda\",\r\n        key: \"lambda\"\r\n    },\r\n    {\r\n        title: \"{X}\",\r\n        dataIndex: \"X\",\r\n        key: \"X\"\r\n    },\r\n    {\r\n        title: \"Error\",\r\n        dataIndex: \"error\",\r\n        key: \"error\"\r\n    }\r\n];\r\n\r\nclass Conjugate extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm: true,\r\n            showDimentionButton: true,\r\n            showMatrixForm: false,\r\n            showMatrixButton: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.conjugate_gradient = this.conjugate_gradient.bind(this);\r\n\r\n    }\r\n    positive_definite(dimention) {\r\n        var tempMatrix = []\r\n        for (var i = 0; i < dimention; i++) {\r\n            tempMatrix[i] = []\r\n            for (var j = 0; j < dimention; j++) {\r\n                tempMatrix[i][j] = A[i][j];\r\n            }\r\n        }\r\n        if (det(tempMatrix) <= 0) {\r\n            return false;\r\n        }\r\n        if (dimention !== this.state.row - 1) {\r\n            return this.positive_definite(++dimention);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    conjugate_gradient() {\r\n        this.initMatrix();\r\n        if (!this.positive_definite(1)) {\r\n            output = \"This matrix doesn't positive definite\"\r\n            this.setState({\r\n                showOutputCard: true\r\n            });\r\n            return false;\r\n        }\r\n        //find {R0}\r\n        var R = subtract(multiply(A, x), B);\r\n        console.log(R)\r\n        //find D0\r\n        var D = multiply(R, -1);\r\n        console.log(D)\r\n        do {\r\n            //find λ\r\n            var λ = (multiply(multiply(transpose(D), R), -1)) /\r\n                (multiply(multiply(transpose(D), A), D))\r\n            console.log(λ)\r\n            /*------------------------------------------------------------------*/\r\n\r\n            //find new {X}\r\n            x = add(x, multiply(λ, D));\r\n            console.log(x)\r\n            //find new {R}\r\n            R = subtract(multiply(A, x), B);\r\n            console.log(R)\r\n            //find epsilon\r\n            epsilon = Math.sqrt(multiply(transpose(R), R)).toFixed(8);\r\n            this.appendTable(λ, JSON.stringify(x).split(',').join(\",\\n\"), epsilon);\r\n            console.log(epsilon)\r\n            var α = (multiply(multiply(transpose(R), A), D)) /\r\n                multiply(transpose(D), multiply(A, D)).toFixed(8);\r\n            console.log(α)\r\n            D = add(multiply(R, -1),multiply(α, D))\r\n            console.log(D)\r\n        } while (epsilon > 0.000001);\r\n\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n\r\n    }\r\n    createMatrix(row, column) {\r\n        A = []\r\n        B = []\r\n        matrixA = []\r\n        matrixB = []\r\n        matrixX = []\r\n        x = []\r\n        dataInTable = []\r\n        for (var i = 1; i <= row; i++) {\r\n            for (var j = 1; j <= column; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\",\r\n                    marginInlineEnd: \"5%\",\r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"black\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }}\r\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\r\n            }\r\n            matrixA.push(<br />)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\",\r\n                marginInlineEnd: \"5%\",\r\n                marginBlockEnd: \"5%\",\r\n                color: \"black\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\r\n            matrixX.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\",\r\n                marginInlineEnd: \"5%\",\r\n                marginBlockEnd: \"5%\",\r\n                color: \"black\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n                id={\"x\" + i} key={\"x\" + i} placeholder={\"x\" + i} />)\r\n\r\n\r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showDimentionButton: false,\r\n            showMatrixForm: true,\r\n            showMatrixButton: true\r\n        })\r\n\r\n\r\n\r\n    }\r\n    initMatrix() {\r\n        for (var i = 0; i < this.state.row; i++) {\r\n            A[i] = []\r\n            for (var j = 0; j < this.state.column; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\r\n            x.push(parseFloat(document.getElementById(\"x\" + (i + 1)).value));\r\n        }\r\n    }\r\n    appendTable(lambda, x, error) {\r\n        dataInTable.push({\r\n            iteration: count++,\r\n            lambda: lambda,\r\n            X: x,\r\n            error: error\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Layout>\r\n                    <Content\r\n                        style={{\r\n                            background: '#FFCC66',\r\n                            padding: 24,\r\n                            margin: 30,\r\n                            minHeight: 280,\r\n                            fontSize: 24\r\n                        }}\r\n                        onChange={this.handleChange}\r\n                    >\r\n\r\n                        {/*-----------------------------------------ปุ่มINPUTสมการ----------------------------------------------------*/}\r\n                        <Row gutter={[40, 40]}\r\n                            bordered={true}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <Col span={10} offset={7}>\r\n\r\n                                <div>\r\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" ></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" ></Input>\r\n                                </div>\r\n                                {this.state.showDimentionButton &&\r\n                                    <Button id=\"dimention_button\" onClick={\r\n                                        () => { this.createMatrix(this.state.row, this.state.column) }\r\n                                    }\r\n                                    >\r\n                                        Submit<br></br>\r\n                                    </Button>\r\n                                }\r\n\r\n                                {this.state.showMatrixButton &&\r\n                                    <Button\r\n                                        id=\"matrix_button\"\r\n                                        onClick={()=>this.conjugate_gradient(parseInt(this.state.row))}>\r\n                                        Submit\r\n                                    </Button>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={[40, 40]}>\r\n                            <Col span={8} offset={4}>\r\n                                <Card\r\n                                    title={<h3>Matrix</h3>}\r\n                                >\r\n                                    {this.state.showMatrixForm && <div>{matrixA}</div>}\r\n                                </Card>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Card\r\n                                    title={<h3>Vector</h3>}\r\n                                >\r\n                                    {this.state.showMatrixForm && <div>{matrixB}</div>}\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <br></br>\r\n\r\n                        {/*---------------------------------------------------------------------------------------------*/}\r\n                        <Row gutter={[2, 2]}>\r\n                            <Col span={10} offset={7}>\r\n                                <Card\r\n                                    title={<h3>Outpot</h3>}\r\n                                    bordered={true}\r\n                                    onChange={this.handleChange} id=\"answerCard\">\r\n                                    <Table columns={columns} dataSource={dataInTable} bordered={true} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\", overflowX: \"scroll\" }}\r\n                                    ></Table>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Content>\r\n                </Layout>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\nexport default Conjugate;","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Interpolation\\Spline.js",["255","256","257","258","259","260","261","262"],"import React, { Component } from 'react';\nimport { Card, Input, Button, Row, Col, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport { compile } from 'mathjs';\nimport { Layout, Breadcrumb } from 'antd';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nconst { Header, Content, Footer, Sider } = Layout;\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar columns = [\n    {\n        title: \"No.\",\n        dataIndex: \"no\",\n        key: \"no\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    }\n];\nvar x = [], y = [], tableTag = [], answer\n\nclass Appc extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            nPoints: 0,\n            X: 0,\n            showInputForm: true,\n            showInputButton: true,\n            showTableInput: false,\n            showTableButton: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n\n\n    createTableInput(n) {\n        for (var i = 1; i <= n; i++) {\n            x.push(<Input style={{\n                width: \"100%\",\n                height: \"50%\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"x\" + i} key={\"x\" + i} placeholder={\"x\" + i} />);\n            y.push(<Input style={{\n                width: \"100%\",\n                height: \"50%\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"y\" + i} key={\"y\" + i} placeholder={\"y\" + i} />);\n            tableTag.push({\n                no: i,\n                x: x[i - 1],\n                y: y[i - 1]\n            });\n        }\n\n\n        this.setState({\n            showInputForm: false,\n            showInputButton: false,\n            showTableInput: true,\n            showTableButton: true\n        })\n    }\n    initialValue(X) {\n        x = []\n        y = []\n        for (var i = 0; i < this.state.nPoints; i++) {\n            x[i] = parseFloat(document.getElementById(\"x\" + (i + 1)).value);\n            y[i] = parseFloat(document.getElementById(\"y\" + (i + 1)).value);\n        }\n        answer = this.spline(X, x, y)\n    }\n    spline(x, xs, ys) {\n        var ks = xs.map(function () { return 0 })\n        ks = this.getNaturalKs(xs, ys, ks)\n        var i = 1;\n        while (xs[i] < x) i++;\n        var t = (x - xs[i - 1]) / (xs[i] - xs[i - 1]);\n        var a = ks[i - 1] * (xs[i] - xs[i - 1]) - (ys[i] - ys[i - 1]);\n        var b = -ks[i] * (xs[i] - xs[i - 1]) + (ys[i] - ys[i - 1]);\n        var q = (1 - t) * ys[i - 1] + t * ys[i] + t * (1 - t) * (a * (1 - t) + b * t);\n        console.log(q)\n        this.setState({\n            showOutputCard: true\n        })\n\n        return q;\n    }\n\n    getNaturalKs(xs, ys, ks) {\n        var n = xs.length - 1;\n        var A = this.zerosMat(n + 1, n + 2);\n\n        for (var i = 1; i < n; i++)  // rows\n        {\n            A[i][i - 1] = 1 / (xs[i] - xs[i - 1]);\n            A[i][i] = 2 * (1 / (xs[i] - xs[i - 1]) + 1 / (xs[i + 1] - xs[i]));\n            A[i][i + 1] = 1 / (xs[i + 1] - xs[i]);\n            A[i][n + 1] = 3 * ((ys[i] - ys[i - 1]) / ((xs[i] - xs[i - 1]) * (xs[i] - xs[i - 1])) + (ys[i + 1] - ys[i]) / ((xs[i + 1] - xs[i]) * (xs[i + 1] - xs[i])));\n        }\n\n        A[0][0] = 2 / (xs[1] - xs[0]);\n        A[0][1] = 1 / (xs[1] - xs[0]);\n        A[0][n + 1] = 3 * (ys[1] - ys[0]) / ((xs[1] - xs[0]) * (xs[1] - xs[0]));\n\n        A[n][n - 1] = 1 / (xs[n] - xs[n - 1]);\n        A[n][n] = 2 / (xs[n] - xs[n - 1]);\n        A[n][n + 1] = 3 * (ys[n] - ys[n - 1]) / ((xs[n] - xs[n - 1]) * (xs[n] - xs[n - 1]));\n\n        return this.solve(A, ks);\n    }\n\n    solve(A, ks) {\n        var m = A.length;\n        for (var k = 0; k < m; k++)  // column\n        {\n            // pivot for column\n            var i_max = 0; var vali = Number.NEGATIVE_INFINITY;\n            for (var i = k; i < m; i++) if (A[i][k] > vali) { i_max = i; vali = A[i][k]; }\n            this.swapRows(A, k, i_max);\n\n            // for all rows below pivot\n            for (i = k + 1; i < m; i++) {\n                for (var j = k + 1; j < m + 1; j++)\n                    A[i][j] = A[i][j] - A[k][j] * (A[i][k] / A[k][k]);\n                A[i][k] = 0;\n            }\n        }\n        for (i = m - 1; i >= 0; i--) // rows = columns\n        {\n            var v = A[i][m] / A[i][i];\n            ks[i] = v;\n            for (j = i - 1; j >= 0; j--) // rows\n            {\n                A[j][m] -= A[j][i] * v;\n                A[j][i] = 0;\n            }\n        }\n        console.log(A)\n        return ks;\n    }\n\n    zerosMat(r, c) {\n        var A = [];\n        for (var i = 0; i < r; i++) {\n            A.push([]);\n            for (var j = 0; j < c; j++) A[i].push(0);\n        }\n        return A;\n    }\n\n    swapRows(m, k, l) {\n        var p = m[k]; m[k] = m[l]; m[l] = p;\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return (\n            <Router>\n                <Layout>\n                    <Content\n                        style={{\n                            background: '#FFCC66',\n                            padding: 24,\n                            margin: 30,\n                            minHeight: 280,\n                            fontSize: 24\n                        }}\n                        onChange={this.handleChange}\n                    >\n                        <Row gutter={[40, 40]}\n                        >\n                            <Col span={10} offset={7}>\n                                {this.state.showTableInput &&\n                                    <div>\n                                        <Table columns={columns} dataSource={tableTag} pagination={false} bordered={true} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\", overflowY: \"scroll\", minWidth: 120, maxHeight: 300 }}>\n\n                                        </Table>\n                                    </div>}\n\n                                {this.state.showInputForm &&\n                                    <div>\n                                        <h2>Number of points(n)</h2><Input size=\"large\" name=\"nPoints\"></Input>\n                                        <h2>X</h2><Input size=\"large\" name=\"X\"></Input>\n                                    </div>\n                                }\n                                <br></br>\n                                {this.state.showInputButton &&\n                                    <Button id=\"dimention_button\" onClick={\n                                        () => { this.createTableInput(parseInt(this.state.nPoints)) }\n                                    }\n                                        style={{ fontSize: \"20px\" }}>\n                                        Submit<br></br>\n                                    </Button>\n                                }\n                                {this.state.showTableButton &&\n                                    <Button\n                                        id=\"matrix_button\"\n                                        style={{ fontSize: \"20px\" }}\n                                        onClick={() => this.initialValue(parseFloat(this.state.X))}>\n                                        Submit\n                            </Button>\n                                }\n                            </Col>\n\n                        </Row>\n                        {/*-----------------------------------------ปุ่มINPUTสมการ----------------------------------------------------*/}\n\n                        <br></br>\n\n                        {/*---------------------------------------------------------------------------------------------*/}\n                        <Row>\n                            <Col span={10} offset={7}>\n                                <Card\n                                    title={\"Output\"}\n                                    bordered={true}\n                                    style={{ width: \"100%\", float: \"inline-start\", marginBlockStart: \"2%\" }}\n                                    id=\"outputCard\"\n                                >\n                                    <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>X = {answer}</p>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Content>\n                </Layout>\n            </Router>\n        );\n    }\n}\nexport default Appc;","C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Interpolation\\Lagrange.js",[],"C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Leastsqaures\\PolynomialRegression.js",[],"C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Leastsqaures\\LinearRegression.js",[],"C:\\Users\\first\\Desktop\\numerpj\\numerpj\\src\\code\\Leastsqaures\\Multiple_LinearRegression.js",[],{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","severity":1,"message":"268","line":2,"column":8,"nodeType":"269","messageId":"270","endLine":2,"endColumn":16},{"ruleId":"267","severity":1,"message":"271","line":6,"column":28,"nodeType":"269","messageId":"270","endLine":6,"endColumn":40},{"ruleId":"267","severity":1,"message":"272","line":9,"column":3,"nodeType":"269","messageId":"270","endLine":9,"endColumn":9},{"ruleId":"267","severity":1,"message":"273","line":3,"column":10,"nodeType":"269","messageId":"270","endLine":3,"endColumn":14},{"ruleId":"267","severity":1,"message":"274","line":3,"column":47,"nodeType":"269","messageId":"270","endLine":3,"endColumn":52},{"ruleId":"267","severity":1,"message":"275","line":4,"column":10,"nodeType":"269","messageId":"270","endLine":4,"endColumn":18},{"ruleId":"267","severity":1,"message":"276","line":5,"column":18,"nodeType":"269","messageId":"270","endLine":5,"endColumn":28},{"ruleId":"267","severity":1,"message":"277","line":6,"column":10,"nodeType":"269","messageId":"270","endLine":6,"endColumn":15},{"ruleId":"267","severity":1,"message":"278","line":6,"column":17,"nodeType":"269","messageId":"270","endLine":6,"endColumn":24},{"ruleId":"267","severity":1,"message":"279","line":6,"column":26,"nodeType":"269","messageId":"270","endLine":6,"endColumn":33},{"ruleId":"267","severity":1,"message":"280","line":6,"column":35,"nodeType":"269","messageId":"270","endLine":6,"endColumn":41},{"ruleId":"267","severity":1,"message":"281","line":7,"column":10,"nodeType":"269","messageId":"270","endLine":7,"endColumn":19},{"ruleId":"267","severity":1,"message":"282","line":7,"column":21,"nodeType":"269","messageId":"270","endLine":7,"endColumn":25},{"ruleId":"267","severity":1,"message":"283","line":7,"column":27,"nodeType":"269","messageId":"270","endLine":7,"endColumn":40},{"ruleId":"267","severity":1,"message":"284","line":7,"column":42,"nodeType":"269","messageId":"270","endLine":7,"endColumn":47},{"ruleId":"267","severity":1,"message":"285","line":7,"column":49,"nodeType":"269","messageId":"270","endLine":7,"endColumn":54},{"ruleId":"267","severity":1,"message":"286","line":7,"column":56,"nodeType":"269","messageId":"270","endLine":7,"endColumn":63},{"ruleId":"267","severity":1,"message":"287","line":7,"column":65,"nodeType":"269","messageId":"270","endLine":7,"endColumn":71},{"ruleId":"267","severity":1,"message":"288","line":8,"column":35,"nodeType":"269","messageId":"270","endLine":8,"endColumn":40},{"ruleId":"267","severity":1,"message":"289","line":8,"column":42,"nodeType":"269","messageId":"270","endLine":8,"endColumn":46},{"ruleId":"267","severity":1,"message":"290","line":9,"column":9,"nodeType":"269","messageId":"270","endLine":9,"endColumn":15},{"ruleId":"267","severity":1,"message":"291","line":9,"column":26,"nodeType":"269","messageId":"270","endLine":9,"endColumn":32},{"ruleId":"267","severity":1,"message":"292","line":9,"column":34,"nodeType":"269","messageId":"270","endLine":9,"endColumn":39},{"ruleId":"267","severity":1,"message":"293","line":10,"column":7,"nodeType":"269","messageId":"270","endLine":10,"endColumn":17},{"ruleId":"267","severity":1,"message":"273","line":3,"column":10,"nodeType":"269","messageId":"270","endLine":3,"endColumn":14},{"ruleId":"267","severity":1,"message":"274","line":3,"column":47,"nodeType":"269","messageId":"270","endLine":3,"endColumn":52},{"ruleId":"267","severity":1,"message":"275","line":4,"column":10,"nodeType":"269","messageId":"270","endLine":4,"endColumn":18},{"ruleId":"267","severity":1,"message":"276","line":5,"column":18,"nodeType":"269","messageId":"270","endLine":5,"endColumn":28},{"ruleId":"267","severity":1,"message":"277","line":6,"column":10,"nodeType":"269","messageId":"270","endLine":6,"endColumn":15},{"ruleId":"267","severity":1,"message":"278","line":6,"column":17,"nodeType":"269","messageId":"270","endLine":6,"endColumn":24},{"ruleId":"267","severity":1,"message":"279","line":6,"column":26,"nodeType":"269","messageId":"270","endLine":6,"endColumn":33},{"ruleId":"267","severity":1,"message":"280","line":6,"column":35,"nodeType":"269","messageId":"270","endLine":6,"endColumn":41},{"ruleId":"267","severity":1,"message":"294","line":6,"column":43,"nodeType":"269","messageId":"270","endLine":6,"endColumn":46},{"ruleId":"267","severity":1,"message":"281","line":7,"column":10,"nodeType":"269","messageId":"270","endLine":7,"endColumn":19},{"ruleId":"267","severity":1,"message":"282","line":7,"column":21,"nodeType":"269","messageId":"270","endLine":7,"endColumn":25},{"ruleId":"267","severity":1,"message":"283","line":7,"column":27,"nodeType":"269","messageId":"270","endLine":7,"endColumn":40},{"ruleId":"267","severity":1,"message":"284","line":7,"column":42,"nodeType":"269","messageId":"270","endLine":7,"endColumn":47},{"ruleId":"267","severity":1,"message":"285","line":7,"column":49,"nodeType":"269","messageId":"270","endLine":7,"endColumn":54},{"ruleId":"267","severity":1,"message":"286","line":7,"column":56,"nodeType":"269","messageId":"270","endLine":7,"endColumn":63},{"ruleId":"267","severity":1,"message":"287","line":7,"column":65,"nodeType":"269","messageId":"270","endLine":7,"endColumn":71},{"ruleId":"267","severity":1,"message":"288","line":8,"column":35,"nodeType":"269","messageId":"270","endLine":8,"endColumn":40},{"ruleId":"267","severity":1,"message":"289","line":8,"column":42,"nodeType":"269","messageId":"270","endLine":8,"endColumn":46},{"ruleId":"267","severity":1,"message":"290","line":9,"column":9,"nodeType":"269","messageId":"270","endLine":9,"endColumn":15},{"ruleId":"267","severity":1,"message":"291","line":9,"column":26,"nodeType":"269","messageId":"270","endLine":9,"endColumn":32},{"ruleId":"267","severity":1,"message":"292","line":9,"column":34,"nodeType":"269","messageId":"270","endLine":9,"endColumn":39},{"ruleId":"267","severity":1,"message":"293","line":10,"column":7,"nodeType":"269","messageId":"270","endLine":10,"endColumn":17},{"ruleId":"267","severity":1,"message":"273","line":3,"column":10,"nodeType":"269","messageId":"270","endLine":3,"endColumn":14},{"ruleId":"267","severity":1,"message":"274","line":3,"column":47,"nodeType":"269","messageId":"270","endLine":3,"endColumn":52},{"ruleId":"267","severity":1,"message":"275","line":4,"column":10,"nodeType":"269","messageId":"270","endLine":4,"endColumn":18},{"ruleId":"267","severity":1,"message":"276","line":5,"column":18,"nodeType":"269","messageId":"270","endLine":5,"endColumn":28},{"ruleId":"267","severity":1,"message":"277","line":6,"column":10,"nodeType":"269","messageId":"270","endLine":6,"endColumn":15},{"ruleId":"267","severity":1,"message":"278","line":6,"column":17,"nodeType":"269","messageId":"270","endLine":6,"endColumn":24},{"ruleId":"267","severity":1,"message":"279","line":6,"column":26,"nodeType":"269","messageId":"270","endLine":6,"endColumn":33},{"ruleId":"267","severity":1,"message":"280","line":6,"column":35,"nodeType":"269","messageId":"270","endLine":6,"endColumn":41},{"ruleId":"267","severity":1,"message":"294","line":6,"column":43,"nodeType":"269","messageId":"270","endLine":6,"endColumn":46},{"ruleId":"267","severity":1,"message":"295","line":6,"column":48,"nodeType":"269","messageId":"270","endLine":6,"endColumn":56},{"ruleId":"267","severity":1,"message":"296","line":6,"column":58,"nodeType":"269","messageId":"270","endLine":6,"endColumn":66},{"ruleId":"267","severity":1,"message":"297","line":6,"column":68,"nodeType":"269","messageId":"270","endLine":6,"endColumn":77},{"ruleId":"267","severity":1,"message":"298","line":6,"column":79,"nodeType":"269","messageId":"270","endLine":6,"endColumn":82},{"ruleId":"267","severity":1,"message":"299","line":6,"column":83,"nodeType":"269","messageId":"270","endLine":6,"endColumn":86},{"ruleId":"267","severity":1,"message":"300","line":6,"column":87,"nodeType":"269","messageId":"270","endLine":6,"endColumn":95},{"ruleId":"267","severity":1,"message":"281","line":7,"column":10,"nodeType":"269","messageId":"270","endLine":7,"endColumn":19},{"ruleId":"267","severity":1,"message":"282","line":7,"column":21,"nodeType":"269","messageId":"270","endLine":7,"endColumn":25},{"ruleId":"267","severity":1,"message":"283","line":7,"column":27,"nodeType":"269","messageId":"270","endLine":7,"endColumn":40},{"ruleId":"267","severity":1,"message":"284","line":7,"column":42,"nodeType":"269","messageId":"270","endLine":7,"endColumn":47},{"ruleId":"267","severity":1,"message":"285","line":7,"column":49,"nodeType":"269","messageId":"270","endLine":7,"endColumn":54},{"ruleId":"267","severity":1,"message":"286","line":7,"column":56,"nodeType":"269","messageId":"270","endLine":7,"endColumn":63},{"ruleId":"267","severity":1,"message":"287","line":7,"column":65,"nodeType":"269","messageId":"270","endLine":7,"endColumn":71},{"ruleId":"267","severity":1,"message":"288","line":8,"column":35,"nodeType":"269","messageId":"270","endLine":8,"endColumn":40},{"ruleId":"267","severity":1,"message":"289","line":8,"column":42,"nodeType":"269","messageId":"270","endLine":8,"endColumn":46},{"ruleId":"267","severity":1,"message":"290","line":9,"column":9,"nodeType":"269","messageId":"270","endLine":9,"endColumn":15},{"ruleId":"267","severity":1,"message":"291","line":9,"column":26,"nodeType":"269","messageId":"270","endLine":9,"endColumn":32},{"ruleId":"267","severity":1,"message":"292","line":9,"column":34,"nodeType":"269","messageId":"270","endLine":9,"endColumn":39},{"ruleId":"267","severity":1,"message":"293","line":10,"column":7,"nodeType":"269","messageId":"270","endLine":10,"endColumn":17},{"ruleId":"267","severity":1,"message":"273","line":3,"column":10,"nodeType":"269","messageId":"270","endLine":3,"endColumn":14},{"ruleId":"267","severity":1,"message":"274","line":3,"column":47,"nodeType":"269","messageId":"270","endLine":3,"endColumn":52},{"ruleId":"267","severity":1,"message":"275","line":4,"column":10,"nodeType":"269","messageId":"270","endLine":4,"endColumn":18},{"ruleId":"267","severity":1,"message":"276","line":5,"column":18,"nodeType":"269","messageId":"270","endLine":5,"endColumn":28},{"ruleId":"267","severity":1,"message":"277","line":6,"column":10,"nodeType":"269","messageId":"270","endLine":6,"endColumn":15},{"ruleId":"267","severity":1,"message":"278","line":6,"column":17,"nodeType":"269","messageId":"270","endLine":6,"endColumn":24},{"ruleId":"267","severity":1,"message":"281","line":7,"column":10,"nodeType":"269","messageId":"270","endLine":7,"endColumn":19},{"ruleId":"267","severity":1,"message":"282","line":7,"column":21,"nodeType":"269","messageId":"270","endLine":7,"endColumn":25},{"ruleId":"267","severity":1,"message":"283","line":7,"column":27,"nodeType":"269","messageId":"270","endLine":7,"endColumn":40},{"ruleId":"267","severity":1,"message":"284","line":7,"column":42,"nodeType":"269","messageId":"270","endLine":7,"endColumn":47},{"ruleId":"267","severity":1,"message":"285","line":7,"column":49,"nodeType":"269","messageId":"270","endLine":7,"endColumn":54},{"ruleId":"267","severity":1,"message":"286","line":7,"column":56,"nodeType":"269","messageId":"270","endLine":7,"endColumn":63},{"ruleId":"267","severity":1,"message":"287","line":7,"column":65,"nodeType":"269","messageId":"270","endLine":7,"endColumn":71},{"ruleId":"267","severity":1,"message":"288","line":8,"column":35,"nodeType":"269","messageId":"270","endLine":8,"endColumn":40},{"ruleId":"267","severity":1,"message":"289","line":8,"column":42,"nodeType":"269","messageId":"270","endLine":8,"endColumn":46},{"ruleId":"267","severity":1,"message":"290","line":9,"column":9,"nodeType":"269","messageId":"270","endLine":9,"endColumn":15},{"ruleId":"267","severity":1,"message":"291","line":9,"column":26,"nodeType":"269","messageId":"270","endLine":9,"endColumn":32},{"ruleId":"267","severity":1,"message":"292","line":9,"column":34,"nodeType":"269","messageId":"270","endLine":9,"endColumn":39},{"ruleId":"267","severity":1,"message":"293","line":10,"column":7,"nodeType":"269","messageId":"270","endLine":10,"endColumn":17},{"ruleId":"267","severity":1,"message":"273","line":3,"column":10,"nodeType":"269","messageId":"270","endLine":3,"endColumn":14},{"ruleId":"267","severity":1,"message":"274","line":3,"column":47,"nodeType":"269","messageId":"270","endLine":3,"endColumn":52},{"ruleId":"267","severity":1,"message":"275","line":4,"column":10,"nodeType":"269","messageId":"270","endLine":4,"endColumn":18},{"ruleId":"267","severity":1,"message":"276","line":5,"column":18,"nodeType":"269","messageId":"270","endLine":5,"endColumn":28},{"ruleId":"267","severity":1,"message":"277","line":6,"column":10,"nodeType":"269","messageId":"270","endLine":6,"endColumn":15},{"ruleId":"267","severity":1,"message":"278","line":6,"column":17,"nodeType":"269","messageId":"270","endLine":6,"endColumn":24},{"ruleId":"267","severity":1,"message":"294","line":6,"column":43,"nodeType":"269","messageId":"270","endLine":6,"endColumn":46},{"ruleId":"267","severity":1,"message":"281","line":7,"column":10,"nodeType":"269","messageId":"270","endLine":7,"endColumn":19},{"ruleId":"267","severity":1,"message":"282","line":7,"column":21,"nodeType":"269","messageId":"270","endLine":7,"endColumn":25},{"ruleId":"267","severity":1,"message":"283","line":7,"column":27,"nodeType":"269","messageId":"270","endLine":7,"endColumn":40},{"ruleId":"267","severity":1,"message":"284","line":7,"column":42,"nodeType":"269","messageId":"270","endLine":7,"endColumn":47},{"ruleId":"267","severity":1,"message":"285","line":7,"column":49,"nodeType":"269","messageId":"270","endLine":7,"endColumn":54},{"ruleId":"267","severity":1,"message":"286","line":7,"column":56,"nodeType":"269","messageId":"270","endLine":7,"endColumn":63},{"ruleId":"267","severity":1,"message":"287","line":7,"column":65,"nodeType":"269","messageId":"270","endLine":7,"endColumn":71},{"ruleId":"267","severity":1,"message":"288","line":8,"column":35,"nodeType":"269","messageId":"270","endLine":8,"endColumn":40},{"ruleId":"267","severity":1,"message":"289","line":8,"column":42,"nodeType":"269","messageId":"270","endLine":8,"endColumn":46},{"ruleId":"267","severity":1,"message":"290","line":9,"column":9,"nodeType":"269","messageId":"270","endLine":9,"endColumn":15},{"ruleId":"267","severity":1,"message":"291","line":9,"column":26,"nodeType":"269","messageId":"270","endLine":9,"endColumn":32},{"ruleId":"267","severity":1,"message":"292","line":9,"column":34,"nodeType":"269","messageId":"270","endLine":9,"endColumn":39},{"ruleId":"267","severity":1,"message":"293","line":10,"column":7,"nodeType":"269","messageId":"270","endLine":10,"endColumn":17},{"ruleId":"267","severity":1,"message":"273","line":3,"column":10,"nodeType":"269","messageId":"270","endLine":3,"endColumn":14},{"ruleId":"267","severity":1,"message":"275","line":4,"column":10,"nodeType":"269","messageId":"270","endLine":4,"endColumn":18},{"ruleId":"267","severity":1,"message":"276","line":5,"column":18,"nodeType":"269","messageId":"270","endLine":5,"endColumn":28},{"ruleId":"267","severity":1,"message":"277","line":6,"column":10,"nodeType":"269","messageId":"270","endLine":6,"endColumn":15},{"ruleId":"267","severity":1,"message":"278","line":6,"column":17,"nodeType":"269","messageId":"270","endLine":6,"endColumn":24},{"ruleId":"267","severity":1,"message":"279","line":6,"column":26,"nodeType":"269","messageId":"270","endLine":6,"endColumn":33},{"ruleId":"267","severity":1,"message":"280","line":6,"column":35,"nodeType":"269","messageId":"270","endLine":6,"endColumn":41},{"ruleId":"267","severity":1,"message":"294","line":6,"column":43,"nodeType":"269","messageId":"270","endLine":6,"endColumn":46},{"ruleId":"267","severity":1,"message":"295","line":6,"column":48,"nodeType":"269","messageId":"270","endLine":6,"endColumn":56},{"ruleId":"267","severity":1,"message":"296","line":6,"column":58,"nodeType":"269","messageId":"270","endLine":6,"endColumn":66},{"ruleId":"267","severity":1,"message":"297","line":6,"column":68,"nodeType":"269","messageId":"270","endLine":6,"endColumn":77},{"ruleId":"267","severity":1,"message":"298","line":6,"column":79,"nodeType":"269","messageId":"270","endLine":6,"endColumn":82},{"ruleId":"267","severity":1,"message":"299","line":6,"column":83,"nodeType":"269","messageId":"270","endLine":6,"endColumn":86},{"ruleId":"267","severity":1,"message":"300","line":6,"column":87,"nodeType":"269","messageId":"270","endLine":6,"endColumn":95},{"ruleId":"267","severity":1,"message":"281","line":7,"column":10,"nodeType":"269","messageId":"270","endLine":7,"endColumn":19},{"ruleId":"267","severity":1,"message":"282","line":7,"column":21,"nodeType":"269","messageId":"270","endLine":7,"endColumn":25},{"ruleId":"267","severity":1,"message":"283","line":7,"column":27,"nodeType":"269","messageId":"270","endLine":7,"endColumn":40},{"ruleId":"267","severity":1,"message":"284","line":7,"column":42,"nodeType":"269","messageId":"270","endLine":7,"endColumn":47},{"ruleId":"267","severity":1,"message":"285","line":7,"column":49,"nodeType":"269","messageId":"270","endLine":7,"endColumn":54},{"ruleId":"267","severity":1,"message":"286","line":7,"column":56,"nodeType":"269","messageId":"270","endLine":7,"endColumn":63},{"ruleId":"267","severity":1,"message":"287","line":7,"column":65,"nodeType":"269","messageId":"270","endLine":7,"endColumn":71},{"ruleId":"267","severity":1,"message":"288","line":8,"column":35,"nodeType":"269","messageId":"270","endLine":8,"endColumn":40},{"ruleId":"267","severity":1,"message":"289","line":8,"column":42,"nodeType":"269","messageId":"270","endLine":8,"endColumn":46},{"ruleId":"267","severity":1,"message":"290","line":9,"column":9,"nodeType":"269","messageId":"270","endLine":9,"endColumn":15},{"ruleId":"267","severity":1,"message":"291","line":9,"column":26,"nodeType":"269","messageId":"270","endLine":9,"endColumn":32},{"ruleId":"267","severity":1,"message":"292","line":9,"column":34,"nodeType":"269","messageId":"270","endLine":9,"endColumn":39},{"ruleId":"267","severity":1,"message":"293","line":10,"column":7,"nodeType":"269","messageId":"270","endLine":10,"endColumn":17},{"ruleId":"267","severity":1,"message":"273","line":2,"column":10,"nodeType":"269","messageId":"270","endLine":2,"endColumn":14},{"ruleId":"267","severity":1,"message":"275","line":3,"column":10,"nodeType":"269","messageId":"270","endLine":3,"endColumn":18},{"ruleId":"267","severity":1,"message":"277","line":4,"column":10,"nodeType":"269","messageId":"270","endLine":4,"endColumn":15},{"ruleId":"267","severity":1,"message":"278","line":4,"column":17,"nodeType":"269","messageId":"270","endLine":4,"endColumn":24},{"ruleId":"267","severity":1,"message":"279","line":4,"column":26,"nodeType":"269","messageId":"270","endLine":4,"endColumn":33},{"ruleId":"267","severity":1,"message":"280","line":4,"column":35,"nodeType":"269","messageId":"270","endLine":4,"endColumn":41},{"ruleId":"267","severity":1,"message":"281","line":5,"column":10,"nodeType":"269","messageId":"270","endLine":5,"endColumn":19},{"ruleId":"267","severity":1,"message":"282","line":5,"column":21,"nodeType":"269","messageId":"270","endLine":5,"endColumn":25},{"ruleId":"267","severity":1,"message":"283","line":5,"column":27,"nodeType":"269","messageId":"270","endLine":5,"endColumn":40},{"ruleId":"267","severity":1,"message":"284","line":5,"column":42,"nodeType":"269","messageId":"270","endLine":5,"endColumn":47},{"ruleId":"267","severity":1,"message":"285","line":5,"column":49,"nodeType":"269","messageId":"270","endLine":5,"endColumn":54},{"ruleId":"267","severity":1,"message":"286","line":5,"column":56,"nodeType":"269","messageId":"270","endLine":5,"endColumn":63},{"ruleId":"267","severity":1,"message":"287","line":5,"column":65,"nodeType":"269","messageId":"270","endLine":5,"endColumn":71},{"ruleId":"267","severity":1,"message":"276","line":6,"column":18,"nodeType":"269","messageId":"270","endLine":6,"endColumn":28},{"ruleId":"267","severity":1,"message":"288","line":7,"column":35,"nodeType":"269","messageId":"270","endLine":7,"endColumn":40},{"ruleId":"267","severity":1,"message":"289","line":7,"column":42,"nodeType":"269","messageId":"270","endLine":7,"endColumn":46},{"ruleId":"267","severity":1,"message":"290","line":8,"column":9,"nodeType":"269","messageId":"270","endLine":8,"endColumn":15},{"ruleId":"267","severity":1,"message":"291","line":8,"column":26,"nodeType":"269","messageId":"270","endLine":8,"endColumn":32},{"ruleId":"267","severity":1,"message":"292","line":8,"column":34,"nodeType":"269","messageId":"270","endLine":8,"endColumn":39},{"ruleId":"267","severity":1,"message":"293","line":9,"column":7,"nodeType":"269","messageId":"270","endLine":9,"endColumn":17},{"ruleId":"267","severity":1,"message":"301","line":76,"column":13,"nodeType":"269","messageId":"270","endLine":76,"endColumn":19},{"ruleId":"267","severity":1,"message":"278","line":4,"column":10,"nodeType":"269","messageId":"270","endLine":4,"endColumn":17},{"ruleId":"267","severity":1,"message":"276","line":5,"column":18,"nodeType":"269","messageId":"270","endLine":5,"endColumn":28},{"ruleId":"267","severity":1,"message":"288","line":6,"column":35,"nodeType":"269","messageId":"270","endLine":6,"endColumn":40},{"ruleId":"267","severity":1,"message":"289","line":6,"column":42,"nodeType":"269","messageId":"270","endLine":6,"endColumn":46},{"ruleId":"267","severity":1,"message":"290","line":7,"column":9,"nodeType":"269","messageId":"270","endLine":7,"endColumn":15},{"ruleId":"267","severity":1,"message":"291","line":7,"column":26,"nodeType":"269","messageId":"270","endLine":7,"endColumn":32},{"ruleId":"267","severity":1,"message":"292","line":7,"column":34,"nodeType":"269","messageId":"270","endLine":7,"endColumn":39},{"ruleId":"267","severity":1,"message":"293","line":8,"column":7,"nodeType":"269","messageId":"270","endLine":8,"endColumn":17},"no-native-reassign",["302"],"no-negated-in-lhs",["303"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'MailOutlined' is defined but never used.","'Switch' is defined but never used.","'Menu' is defined but never used.","'Table' is defined but never used.","'Carousel' is defined but never used.","'Breadcrumb' is defined but never used.","'range' is defined but never used.","'compile' is defined but never used.","'lusolve' is defined but never used.","'format' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'CartesianGrid' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'Tooltip' is defined but never used.","'Legend' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'InputStyle' is assigned a value but never used.","'det' is defined but never used.","'subtract' is defined but never used.","'multiply' is defined but never used.","'transpose' is defined but never used.","'add' is defined but never used.","'inv' is defined but never used.","'fraction' is defined but never used.","'output' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]