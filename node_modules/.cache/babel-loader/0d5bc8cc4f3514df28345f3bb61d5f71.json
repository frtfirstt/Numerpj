{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\big49\\\\Desktop\\\\clone2\\\\Numerpj\\\\src\\\\code\\\\Leastsqaures\\\\LinearRegression.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport { sum, inv, multiply } from 'mathjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputColor = {\n  background: \"\",\n  color: \"#003a8c\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\",\n  width: 300,\n  height: 50\n};\nvar table = [{\n  title: \"No.\",\n  dataIndex: \"no\",\n  key: \"no\"\n}, {\n  title: \"X\",\n  dataIndex: \"x\",\n  key: \"x\"\n}, {\n  title: \"Y\",\n  dataIndex: \"y\",\n  key: \"y\"\n}];\nvar x, y, tableinput, answer;\n\nclass LinearRegression extends Component {\n  constructor() {\n    super();\n    x = [];\n    y = [];\n    tableinput = [];\n    this.state = {\n      Points: 0,\n      m: 0,\n      showinput: false,\n      showbutton: false,\n      showAnswer: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  createTableInput(n) {\n    for (var i = 1; i <= n; i++) {\n      x.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"40%\",\n          height: \"50%\",\n          backgroundColor: \"#003a8c\",\n          color: \"white\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"x\" + i,\n        placeholder: \"x\" + i\n      }, \"x\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this));\n      y.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"40%\",\n          height: \"50%\",\n          backgroundColor: \"#003a8c\",\n          color: \"white\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"y\" + i,\n        placeholder: \"y\" + i\n      }, \"y\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 20\n      }, this));\n      tableinput.push({\n        no: i,\n        x: x[i - 1],\n        y: y[i - 1]\n      });\n    }\n\n    this.setState({\n      showinput: true,\n      showbutton: true\n    });\n  }\n\n  Valueinarray(n) {\n    x = [];\n    y = [];\n\n    for (var i = 1; i <= n; i++) {\n      x[i] = parseInt(document.getElementById(\"x\" + i).value);\n    }\n\n    for (i = 1; i <= n; i++) {\n      y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n    }\n  }\n\n  LinearRegression(n) {\n    var Xmatrix = [2],\n        Ymatrix = [2];\n\n    for (var i = 0; i < 2; i++) {\n      Xmatrix[i] = [];\n\n      for (var j = 0; j < 2; j++) {\n        if (i === 0 && j === 0) {\n          Xmatrix[i][j] = n;\n        } else if (i === 0 && j === 1) {\n          Xmatrix[i][j] = this.sumxpow(x, 1);\n        } else if (i === 1 && j === 0) {\n          Xmatrix[i][j] = this.sumxpow(x, 1);\n        } else {\n          Xmatrix[i][j] = this.sumxpow(x, 2);\n        }\n      }\n    }\n\n    Ymatrix[0] = sum(y);\n    Ymatrix[1] = this.sumXY(x, y);\n    Xmatrix = inv(Xmatrix);\n    answer = JSON.stringify(multiply(Xmatrix, Ymatrix));\n    this.setState({\n      showAnswer: true\n    });\n  }\n\n  sumxpow(A, Powers) {\n    var sum = 0;\n\n    for (var i = 1; i < A.length; i++) {\n      sum = sum + Math.pow(A[i], Powers);\n    }\n\n    return sum;\n  }\n\n  sumXY(A, B) {\n    var sum = 0;\n\n    for (var i = 1; i < A.length; i++) {\n      sum = sum + A[i] * B[i];\n    }\n\n    return sum;\n  }\n\n  async dataapi() {\n    await axios({\n      method: \"get\",\n      url: \"http://localhost:5000/database/linear\"\n    }).then(response => {\n      console.log(\"response: \", response.data);\n      api = response.data;\n    });\n    await this.setState({\n      fx: api.fx,\n      xl: api.xl,\n      xr: api.xr\n    });\n    this.bisection(this.state.xl, this.state.xr);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      style: {\n        background: \"#ebe18d\",\n        padding: \"90px\",\n        float: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"#003a8c\",\n          fontWeight: \"bold\",\n          fontSize: \"35px\",\n          textAlign: \"center\"\n        },\n        children: \"Linear Regression\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          bordered: true,\n          style: {\n            width: 1500,\n            height: 600,\n            background: \"#ebe18d\",\n            color: \"#FFFFFFFF\",\n            float: \"Auto\"\n          },\n          onChange: this.handleChange,\n          id: \"inputCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Number of points(n)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            size: \"large\",\n            name: \"Points\",\n            style: InputColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 114\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 119\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"dimention_button\",\n            onClick: () => this.createTableInput(parseInt(this.state.Points), parseInt(this.state.m)),\n            style: {\n              width: 100,\n              height: 50,\n              background: \"#003a8c\",\n              color: \"white\",\n              fontSize: \"25px\"\n            },\n            children: [\"Submit\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), this.state.showinput && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              columns: table,\n              dataSource: tableinput,\n              pagination: false,\n              bordered: true,\n              bodyStyle: {\n                fontWeight: \"bold\",\n                fontSize: \"18px\",\n                color: \"white\",\n                overflowY: \"scroll\",\n                minWidth: 120,\n                maxHeight: 300\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), this.state.showbutton && /*#__PURE__*/_jsxDEV(Button, {\n            id: \"matrix_button\",\n            style: {\n              width: 150,\n              height: 50,\n              background: \"#4caf50\",\n              color: \"white\",\n              fontSize: \"30px\"\n            },\n            onClick: () => {\n              this.Valueinarray(parseInt(this.state.Points));\n              this.LinearRegression(parseInt(this.state.Points));\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), this.state.showAnswer && /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Output\",\n          bordered: true,\n          style: {\n            width: 700,\n            height: 600,\n            background: \"#40a9ff\",\n            color: \"#FFFFFFFF\",\n            float: \"Auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"24px\",\n              fontWeight: \"bold\"\n            },\n            children: [\"x = \", JSON.stringify(answer)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LinearRegression;","map":{"version":3,"sources":["C:/Users/big49/Desktop/clone2/Numerpj/src/code/Leastsqaures/LinearRegression.js"],"names":["React","Component","Card","Input","Button","Table","sum","inv","multiply","InputColor","background","color","fontWeight","fontSize","width","height","table","title","dataIndex","key","x","y","tableinput","answer","LinearRegression","constructor","state","Points","m","showinput","showbutton","showAnswer","handleChange","bind","createTableInput","n","i","push","backgroundColor","no","setState","Valueinarray","parseInt","document","getElementById","value","parseFloat","Xmatrix","Ymatrix","j","sumxpow","sumXY","JSON","stringify","A","Powers","length","Math","pow","B","dataapi","axios","method","url","then","response","console","log","data","api","fx","xl","xr","bisection","event","target","name","render","padding","float","textAlign","overflowY","minWidth","maxHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {Card, Input, Button, Table} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {  sum,inv,multiply } from 'mathjs';\r\n\r\nconst InputColor = {\r\n    background: \"\",\r\n    color: \"#003a8c\", \r\n    fontWeight: \"bold\", \r\n    fontSize: \"24px\",\r\n    width: 300 ,\r\n    height:50\r\n    \r\n\r\n};\r\nvar table = [\r\n    {\r\n        title: \"No.\",\r\n        dataIndex: \"no\",\r\n        key: \"no\"\r\n    },\r\n    {\r\n        title: \"X\",\r\n        dataIndex: \"x\",\r\n        key: \"x\"\r\n    },\r\n    {\r\n        title: \"Y\",\r\n        dataIndex: \"y\",\r\n        key: \"y\"\r\n    }\r\n];\r\n\r\nvar x, y, tableinput, answer\r\n\r\nclass LinearRegression extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        x = []\r\n        y = []\r\n\r\n        tableinput = []\r\n        this.state = {\r\n            Points: 0,\r\n            m: 0,\r\n            showinput: false,\r\n            showbutton: false,\r\n            showAnswer: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n      \r\n    \r\n    }  \r\n    createTableInput(n) {\r\n        for (var i=1 ; i<=n ; i++) {\r\n            x.push(<Input style={{\r\n                width: \"40%\",\r\n                height: \"50%\", \r\n                backgroundColor:\"#003a8c\", \r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\",\r\n            }}\r\n            id={\"x\"+i} key={\"x\"+i} placeholder={\"x\"+i}/>);            \r\n            y.push(<Input style={{\r\n                width: \"40%\",\r\n                height: \"50%\", \r\n                backgroundColor:\"#003a8c\", \r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n            id={\"y\"+i} key={\"y\"+i} placeholder={\"y\"+i}/>);\r\n\r\n            tableinput.push({\r\n                no: i,\r\n                x: x[i-1],\r\n                y: y[i-1]\r\n            })\r\n\r\n        }     \r\n    \r\n        this.setState({\r\n            \r\n            showinput: true,\r\n            showbutton: true\r\n        })\r\n    }\r\n    Valueinarray(n) {\r\n        x = []\r\n        y = []\r\n        for (var i=1 ; i<=n ; i++) {\r\n          x[i]= parseInt(document.getElementById(\"x\"+i).value);    \r\n  \r\n        }  \r\n        for (i=1 ; i<=n ; i++) {\r\n            y[i] = parseFloat(document.getElementById(\"y\"+i).value);\r\n        }\r\n    }\r\n    LinearRegression(n) {\r\n        var Xmatrix = [2], Ymatrix = [2]\r\n        for (var i=0 ; i<2 ; i++) {\r\n            Xmatrix[i] = []\r\n            for (var j=0 ;  j<2 ; j++) {\r\n\r\n                if (i===0 && j===0) {\r\n                    Xmatrix[i][j] = n\r\n                }\r\n                else if (i===0 && j===1){\r\n                    Xmatrix[i][j] = this.sumxpow(x, 1)\r\n                }\r\n                else if (i===1 && j===0){\r\n                    Xmatrix[i][j] = this.sumxpow(x, 1)\r\n                }\r\n                else {\r\n                    Xmatrix[i][j] = this.sumxpow(x, 2)\r\n                }\r\n            }\r\n            \r\n        }\r\n        Ymatrix[0] = sum(y)\r\n        Ymatrix[1] = this.sumXY(x, y)\r\n        Xmatrix = inv(Xmatrix)\r\n        answer = JSON.stringify(multiply(Xmatrix, Ymatrix))\r\n\r\n        this.setState({\r\n            showAnswer: true\r\n        })        \r\n    }\r\n    sumxpow(A ,Powers) {\r\n        var sum = 0\r\n        for (var i=1 ; i<A.length ; i++) {\r\n            sum = sum + Math.pow(A[i], Powers)\r\n        }\r\n        return sum       \r\n    }\r\n    sumXY(A, B) {\r\n        var sum = 0\r\n        for (var i=1 ; i<A.length ; i++) {\r\n            sum = sum + A[i]*B[i]\r\n        }\r\n        return sum\r\n    }\r\n\r\n    async dataapi() {\r\n        await axios({method: \"get\",url: \"http://localhost:5000/database/linear\",}).then((response) => {console.log(\"response: \", response.data);api = response.data;});\r\n        await this.setState({\r\n            fx:api.fx,\r\n          xl:api.xl,\r\n          xr:api.xr\r\n        })\r\n        this.bisection(this.state.xl,this.state.xr)\r\n      }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return(\r\n            <body style={{ background: \"#ebe18d\", padding: \"90px\" , float:\"left\"}}>\r\n                <h2 style={{color: \"#003a8c\", fontWeight: \"bold\",fontSize: \"35px\",textAlign:\"center\"}}>Linear Regression</h2>\r\n                <div style={{textAlign:\"center\"}}>\r\n                    <Card\r\n                      bordered={true}\r\n                      style={{ width: 1500 ,height:600, background: \"#ebe18d\", color: \"#FFFFFFFF\", float:\"Auto\"}}\r\n                      onChange={this.handleChange}\r\n                      id=\"inputCard\"\r\n                    >\r\n                        \r\n                        <h2>Number of points(n)</h2><Input size=\"large\" name=\"Points\" style={InputColor}></Input><br/><br/>\r\n                        <Button id=\"dimention_button\" onClick= {\r\n                                ()=> this.createTableInput(parseInt(this.state.Points), parseInt(this.state.m))}\r\n                                style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}>\r\n                                Submit<br></br>\r\n                            </Button>\r\n                                                \r\n                        {this.state.showinput && \r\n                        \r\n                        <div><br></br>\r\n                            <Table columns={table} dataSource={tableinput} pagination={false} bordered={true} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"white\" , overflowY: \"scroll\", minWidth: 120, maxHeight: 300}}></Table>\r\n                        </div>\r\n                        }\r\n                        <br></br>\r\n                        \r\n                        {this.state.showbutton && \r\n                            <Button \r\n                                id=\"matrix_button\"  \r\n                                style={{width: 150 , height:50,background: \"#4caf50\", color: \"white\", fontSize: \"30px\"}}\r\n                                onClick= {()=> {this.Valueinarray(parseInt(this.state.Points)); \r\n                                                this.LinearRegression(parseInt(this.state.Points))}}\r\n                                >\r\n                                Submit\r\n                            </Button>\r\n                        }\r\n                        \r\n                    </Card>\r\n                    \r\n\r\n                    {this.state.showAnswer &&\r\n                        <Card\r\n                        title={\"Output\"}\r\n                        bordered={true}\r\n                        style={{ width: 700 ,height:600, background: \"#40a9ff\", color: \"#FFFFFFFF\", float:\"Auto\"}}\r\n                        >\r\n                            <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>x = {JSON.stringify(answer)}</p> \r\n                        </Card>                        \r\n                    }\r\n\r\n                   \r\n                </div>\r\n\r\n                \r\n            </body>\r\n        );\r\n    }\r\n}\r\nexport default LinearRegression;"]},"metadata":{},"sourceType":"module"}