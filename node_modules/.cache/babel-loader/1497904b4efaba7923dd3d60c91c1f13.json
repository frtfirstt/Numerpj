{"ast":null,"code":"import { clone as objectClone } from '../../utils/object.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'clone';\nvar dependencies = ['typed'];\nexport var createClone = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\r\n   * Clone an object. Will make a deep copy of the data.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *     math.clone(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.clone(3.5)                   // returns number 3.5\r\n   *    math.clone(math.complex('2-4i') // returns Complex 2 - 4i\r\n   *    math.clone(math.unit(45, 'deg'))  // returns Unit 45 deg\r\n   *    math.clone([[1, 2], [3, 4]])      // returns Array [[1, 2], [3, 4]]\r\n   *    math.clone(\"hello world\")         // returns string \"hello world\"\r\n   *\r\n   * @param {*} x   Object to be cloned\r\n   * @return {*} A clone of object x\r\n   */\n\n  return typed(name, {\n    any: objectClone\n  });\n});","map":{"version":3,"sources":["C:/Users/big49/Desktop/clone2/Numerpj/node_modules/mathjs/lib/esm/function/utils/clone.js"],"names":["clone","objectClone","factory","name","dependencies","createClone","_ref","typed","any"],"mappings":"AAAA,SAASA,KAAK,IAAIC,WAAlB,QAAqC,uBAArC;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,IAAIC,IAAI,GAAG,OAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,CAAnB;AACA,OAAO,IAAIC,WAAW,GAAG,eAAeH,OAAO,CAACC,IAAD,EAAOC,YAAP,EAAsBE,IAAD,IAAU;AAC5E,MAAI;AACFC,IAAAA;AADE,MAEAD,IAFJ;AAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,SAAOC,KAAK,CAACJ,IAAD,EAAO;AACjBK,IAAAA,GAAG,EAAEP;AADY,GAAP,CAAZ;AAGD,CA1B8C,CAAxC","sourcesContent":["import { clone as objectClone } from '../../utils/object.js';\r\nimport { factory } from '../../utils/factory.js';\r\nvar name = 'clone';\r\nvar dependencies = ['typed'];\r\nexport var createClone = /* #__PURE__ */factory(name, dependencies, (_ref) => {\r\n  var {\r\n    typed\r\n  } = _ref;\r\n\r\n  /**\r\n   * Clone an object. Will make a deep copy of the data.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *     math.clone(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.clone(3.5)                   // returns number 3.5\r\n   *    math.clone(math.complex('2-4i') // returns Complex 2 - 4i\r\n   *    math.clone(math.unit(45, 'deg'))  // returns Unit 45 deg\r\n   *    math.clone([[1, 2], [3, 4]])      // returns Array [[1, 2], [3, 4]]\r\n   *    math.clone(\"hello world\")         // returns string \"hello world\"\r\n   *\r\n   * @param {*} x   Object to be cloned\r\n   * @return {*} A clone of object x\r\n   */\r\n  return typed(name, {\r\n    any: objectClone\r\n  });\r\n});"]},"metadata":{},"sourceType":"module"}