{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\first\\\\Desktop\\\\numer\\\\Numerpj\\\\src\\\\code\\\\Linear\\\\Cramerrule.js\";\nimport React, { Component } from 'react';\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd'; // import { Carousel } from 'antd';\n\nimport { Layout, Breadcrumb } from 'antd';\nimport { range, compile, lusolve, format, det } from 'mathjs'; // import { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\n\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content,\n  Footer,\n  Sider\n} = Layout;\nconst InputColor = {\n  background: \"\",\n  color: \"#003a8c\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\",\n  width: 300,\n  height: 50\n};\nvar api;\nvar A = [],\n    B = [],\n    answer = [],\n    matrixA = [],\n    matrixB = [];\n\nclass Cramerrule extends Component {\n  constructor() {\n    super();\n    this.state = {\n      row: parseInt(0),\n      column: parseInt(0),\n      // showDimentionForm: true,\n      showDimentionButton: true,\n      showMatrixForm: false,\n      showMatrixButton: false // showOutputCard: false\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.cramer = this.cramer.bind(this);\n  }\n\n  cramer() {\n    this.initMatrix();\n    var counter = 0; // eslint-disable-next-line eqeqeq\n\n    while (counter != this.state.row) {\n      var transformMatrix = JSON.parse(JSON.stringify(A)); //เก็บmatrix json\n      // console.log(JSON.parse(JSON.stringify(A)))\n      // console.log(A)\n\n      for (var i = 0; i < this.state.row; i++) {\n        for (var j = 0; j < this.state.column; j++) {\n          if (j === counter) {\n            transformMatrix[i][j] = B[i]; // console.log(transformMatrix)\n\n            break;\n          }\n        }\n      }\n\n      counter++;\n      answer.push( /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n          children: counter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 30\n        }, this), \"=\\xA0\\xA0\", Math.round(det(transformMatrix)) / Math.round(det(A))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this));\n      answer.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this));\n    } // this.setState({\n    //     showOutputCard: true\n    // });\n\n  }\n\n  createMatrix(row, column) {\n    for (var i = 1; i <= row; i++) {\n      for (var j = 1; j <= column; j++) {\n        matrixA.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"black\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"a\" + i + \"\" + j,\n          placeholder: \"a\" + i + \"\" + j\n        }, \"a\" + i + \"\" + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 30\n        }, this));\n      }\n\n      matrixA.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 26\n      }, this));\n      matrixB.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"18%\",\n          height: \"50%\",\n          marginInlineEnd: \"5%\",\n          marginBlockEnd: \"5%\",\n          color: \"black\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"b\" + i,\n        placeholder: \"b\" + i\n      }, \"b\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 26\n      }, this));\n    }\n\n    this.setState({\n      // showDimentionForm: false,\n      showDimentionButton: false,\n      showMatrixForm: true,\n      showMatrixButton: true\n    });\n  }\n\n  initMatrix() {\n    for (var i = 0; i < this.state.row; i++) {\n      A[i] = [];\n\n      for (var j = 0; j < this.state.column; j++) {\n        A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n      }\n\n      B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n    }\n  }\n\n  async dataapi() {\n    await axios({\n      method: \"get\",\n      url: \"http://localhost:5000/data/cramer\"\n    }).then(response => {\n      console.log(\"response: \", response.data);\n      api = response.data;\n    });\n    await this.setState({\n      row: api.row,\n      column: api.row //เท่ากัน\n\n    });\n    matrixA = [];\n    matrixB = [];\n    await this.createMatrix(api.row, api.row);\n\n    for (let i = 1; i <= api.row; i++) {\n      for (let j = 1; j <= api.row; j++) {\n        document.getElementById(\"a\" + i + \"\" + j).value = api.A[i - 1][j - 1];\n      }\n\n      document.getElementById(\"b\" + i).value = api.B[i - 1];\n    }\n\n    this.cramer();\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"body\", {\n          style: {\n            background: \"#ebe18d\",\n            padding: \"90px\",\n            float: \"left\"\n          },\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: \"#003a8c\",\n              fontWeight: \"bold\",\n              fontSize: \"35px\",\n              textAlign: \"center\"\n            },\n            children: \"Cramer's rule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [40, 40],\n            bordered: true,\n            onChange: this.handleChange,\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 10,\n              offset: 7,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  value: this.state.row,\n                  name: \"row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  value: this.state.column,\n                  name: \"column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this), this.state.showDimentionButton && /*#__PURE__*/_jsxDEV(Button, {\n                id: \"dimention_button\",\n                onClick: () => this.createMatrix(this.state.row, this.state.column),\n                style: {\n                  width: 100,\n                  height: 50,\n                  background: \"#003a8c\",\n                  color: \"white\",\n                  fontSize: \"25px\"\n                },\n                children: [\"Submit\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 1\n              }, this), this.state.showMatrixButton && /*#__PURE__*/_jsxDEV(Button, {\n                id: \"matrix_button\",\n                onClick: () => this.cramer(),\n                style: {\n                  width: 100,\n                  height: 50,\n                  background: \"#003a8c\",\n                  color: \"white\",\n                  fontSize: \"25px\"\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this) //2\n              , /*#__PURE__*/_jsxDEV(Button, {\n                id: \"submit_button\",\n                onClick: () => this.dataapi(),\n                style: {\n                  width: 100,\n                  height: 50,\n                  background: \"#003a8c\",\n                  color: \"white\",\n                  fontSize: \"25px\"\n                },\n                children: \"API\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [40, 40],\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              offset: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Matrix\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 44\n                }, this),\n                children: this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: matrixA\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Vector\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 44\n                }, this),\n                children: this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: matrixB\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [2, 2],\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 10,\n              offset: 7,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Output\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 44\n                }, this),\n                bordered: true,\n                onChange: this.handleChange,\n                id: \"answerCard\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"24px\",\n                    fontWeight: \"bold\"\n                  },\n                  children: answer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Cramerrule;","map":{"version":3,"sources":["C:/Users/first/Desktop/numer/Numerpj/src/code/Linear/Cramerrule.js"],"names":["React","Component","Menu","Input","Row","Col","Button","Card","Table","Layout","Breadcrumb","range","compile","lusolve","format","det","BrowserRouter","Router","Route","Link","axios","Header","Content","Footer","Sider","InputColor","background","color","fontWeight","fontSize","width","height","api","A","B","answer","matrixA","matrixB","Cramerrule","constructor","state","row","parseInt","column","showDimentionButton","showMatrixForm","showMatrixButton","handleChange","bind","cramer","initMatrix","counter","transformMatrix","JSON","parse","stringify","i","j","push","Math","round","createMatrix","marginInlineEnd","marginBlockEnd","setState","parseFloat","document","getElementById","value","dataapi","method","url","then","response","console","log","data","event","target","name","render","padding","float","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd';\r\n// import { Carousel } from 'antd';\r\nimport { Layout, Breadcrumb } from 'antd';\r\nimport { range, compile, lusolve, format ,det} from 'mathjs';\r\n// import { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst InputColor = {\r\n    background: \"\",\r\n    color: \"#003a8c\", \r\n    fontWeight: \"bold\", \r\n    fontSize: \"24px\",\r\n    width: 300 ,\r\n    height:50\r\n    \r\n\r\n};\r\nvar api\r\nvar A = [], B = [], answer = [], matrixA = [], matrixB = []\r\nclass Cramerrule extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: parseInt(0),\r\n            column: parseInt(0),\r\n            // showDimentionForm: true,\r\n            showDimentionButton: true,\r\n            showMatrixForm: false,\r\n            showMatrixButton: false\r\n            // showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.cramer = this.cramer.bind(this);\r\n\r\n    }\r\n\r\n    cramer() {\r\n        this.initMatrix();\r\n        var counter = 0;\r\n        // eslint-disable-next-line eqeqeq\r\n        while (counter != this.state.row) {\r\n            var transformMatrix = JSON.parse(JSON.stringify(A));//เก็บmatrix json\r\n            // console.log(JSON.parse(JSON.stringify(A)))\r\n            // console.log(A)\r\n            for (var i = 0; i < this.state.row; i++) {\r\n                for (var j = 0; j < this.state.column; j++) {\r\n                    if (j === counter) {\r\n                        transformMatrix[i][j] = B[i]\r\n                        // console.log(transformMatrix)\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n            counter++;\r\n            answer.push(<h2>X<sub>{counter}</sub>=&nbsp;&nbsp;{Math.round(det(transformMatrix)) / Math.round(det(A))}</h2>)\r\n            answer.push(<br />)\r\n\r\n\r\n\r\n        }\r\n        // this.setState({\r\n        //     showOutputCard: true\r\n        // });\r\n\r\n\r\n    }\r\n    createMatrix(row, column) {\r\n        for (var i = 1; i <= row; i++) {\r\n            for (var j = 1; j <= column; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\",\r\n                    marginInlineEnd: \"5%\",\r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"black\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }}\r\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\r\n            }\r\n            matrixA.push(<br />)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\",\r\n                marginInlineEnd: \"5%\",\r\n                marginBlockEnd: \"5%\",\r\n                color: \"black\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\r\n        }\r\n\r\n        this.setState({\r\n            // showDimentionForm: false,\r\n            showDimentionButton: false,\r\n            showMatrixForm: true,\r\n            showMatrixButton: true\r\n        })\r\n\r\n\r\n    }\r\n    initMatrix() {\r\n        for (var i = 0; i < this.state.row; i++) {\r\n            A[i] = []\r\n            for (var j = 0; j < this.state.column; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\r\n        }\r\n    }\r\n    async dataapi() {\r\n        await axios({method: \"get\",url: \"http://localhost:5000/data/cramer\",}).then((response) => {console.log(\"response: \", response.data);api = response.data;});\r\n        await this.setState({\r\n            row: api.row,\r\n            column: api.row, //เท่ากัน\r\n          });\r\n          \r\n          matrixA = [];\r\n          matrixB = [];\r\n          await this.createMatrix(api.row, api.row);\r\n          for (let i = 1; i <= api.row; i++) {\r\n            for (let j = 1; j <= api.row; j++) {\r\n              document.getElementById(\"a\" + i + \"\" + j).value = api.A[i - 1][j - 1];\r\n            }\r\n            document.getElementById(\"b\" + i).value = api.B[i - 1];\r\n          }\r\n          this.cramer();\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Layout>\r\n                    <body\r\n                        style={{ background: \"#ebe18d\", padding: \"90px\" , float:\"left\" }}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                     <h2 style={{color: \"#003a8c\", fontWeight: \"bold\",fontSize: \"35px\",textAlign:\"center\"}}>Cramer's rule</h2>\r\n                        {/*-----------------------------------------ปุ่มINPUTสมการ----------------------------------------------------*/}\r\n                        <Row gutter={[40, 40]}\r\n                            bordered={true}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <Col span={10} offset={7}>\r\n\r\n                                <div>\r\n                                    <h2>Row</h2><Input size=\"large\" value={this.state.row} name=\"row\" ></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" value={this.state.column} name=\"column\" ></Input>\r\n                                </div>\r\n                                <br></br>\r\n                                {this.state.showDimentionButton &&\r\n                                    \r\n                                    <Button id=\"dimention_button\" onClick={\r\n                                        () => this.createMatrix(this.state.row, this.state.column)\r\n                                    }\r\n                                    style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}>\r\n                                        Submit<br></br>\r\n                                    </Button>\r\n                                }\r\n<br></br>\r\n                                {this.state.showMatrixButton &&\r\n                                    <Button\r\n                                        id=\"matrix_button\"\r\n                                        onClick={()=>this.cramer()} style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}>\r\n                                        Submit\r\n                                    </Button>//2\r\n                                }\r\n\r\n                                <Button id=\"submit_button\" onClick= {\r\n                                \r\n                                ()=>this.dataapi()\r\n                                 }  \r\n                                 style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}>API</Button>\r\n                                \r\n                            </Col>\r\n                        </Row>\r\n                        <br></br>\r\n                        <Row gutter={[40, 40]}>\r\n                            <Col span={8} offset={4}>\r\n                                <Card\r\n                                    title={<h3>Matrix</h3>}\r\n                                >\r\n                                    {this.state.showMatrixForm && <div>{matrixA}</div>}\r\n                                </Card>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Card\r\n                                    title={<h3>Vector</h3>}\r\n                                >\r\n                                    {this.state.showMatrixForm && <div>{matrixB}</div>}\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <br></br>\r\n                        {/*---------------------------------------------------------------------------------------------*/}\r\n                        <Row gutter={[2, 2]}>\r\n                            <Col span={10} offset={7}>\r\n                                <Card\r\n                                    title={<h3>Output</h3>}\r\n                                    bordered={true}\r\n                                    onChange={this.handleChange} id=\"answerCard\">\r\n                                    <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{answer}</p>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </body>\r\n                </Layout>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\nexport default Cramerrule;"]},"metadata":{},"sourceType":"module"}