{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createSubset } from '../../function/matrix/subset.js';\nvar name = 'subset';\nvar dependencies = ['typed', 'matrix'];\nexport var createSubsetTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix\n  } = _ref;\n  var subset = createSubset({\n    typed,\n    matrix\n  });\n  /**\r\n   * Attach a transform function to math.subset\r\n   * Adds a property transform containing the transform function.\r\n   *\r\n   * This transform creates a range which includes the end value\r\n   */\n\n  return typed('subset', {\n    '...any': function any(args) {\n      try {\n        return subset.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"sources":["C:/Users/big49/Desktop/clone2/Numerpj/node_modules/mathjs/lib/esm/expression/transform/subset.transform.js"],"names":["factory","errorTransform","createSubset","name","dependencies","createSubsetTransform","_ref","typed","matrix","subset","any","args","apply","err","isTransformFunction"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,YAAT,QAA6B,iCAA7B;AACA,IAAIC,IAAI,GAAG,QAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,QAAV,CAAnB;AACA,OAAO,IAAIC,qBAAqB,GAAG,eAAeL,OAAO,CAACG,IAAD,EAAOC,YAAP,EAAsBE,IAAD,IAAU;AACtF,MAAI;AACFC,IAAAA,KADE;AAEFC,IAAAA;AAFE,MAGAF,IAHJ;AAIA,MAAIG,MAAM,GAAGP,YAAY,CAAC;AACxBK,IAAAA,KADwB;AAExBC,IAAAA;AAFwB,GAAD,CAAzB;AAIA;AACF;AACA;AACA;AACA;AACA;;AAEE,SAAOD,KAAK,CAAC,QAAD,EAAW;AACrB,cAAU,SAASG,GAAT,CAAaC,IAAb,EAAmB;AAC3B,UAAI;AACF,eAAOF,MAAM,CAACG,KAAP,CAAa,IAAb,EAAmBD,IAAnB,CAAP;AACD,OAFD,CAEE,OAAOE,GAAP,EAAY;AACZ,cAAMZ,cAAc,CAACY,GAAD,CAApB;AACD;AACF;AAPoB,GAAX,CAAZ;AASD,CAzBwD,EAyBtD;AACDC,EAAAA,mBAAmB,EAAE;AADpB,CAzBsD,CAAlD","sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { errorTransform } from './utils/errorTransform.js';\r\nimport { createSubset } from '../../function/matrix/subset.js';\r\nvar name = 'subset';\r\nvar dependencies = ['typed', 'matrix'];\r\nexport var createSubsetTransform = /* #__PURE__ */factory(name, dependencies, (_ref) => {\r\n  var {\r\n    typed,\r\n    matrix\r\n  } = _ref;\r\n  var subset = createSubset({\r\n    typed,\r\n    matrix\r\n  });\r\n  /**\r\n   * Attach a transform function to math.subset\r\n   * Adds a property transform containing the transform function.\r\n   *\r\n   * This transform creates a range which includes the end value\r\n   */\r\n\r\n  return typed('subset', {\r\n    '...any': function any(args) {\r\n      try {\r\n        return subset.apply(null, args);\r\n      } catch (err) {\r\n        throw errorTransform(err);\r\n      }\r\n    }\r\n  });\r\n}, {\r\n  isTransformFunction: true\r\n});"]},"metadata":{},"sourceType":"module"}