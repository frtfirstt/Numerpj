{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\big49\\\\Desktop\\\\numerpj\\\\numerpj\\\\src\\\\code\\\\Linear\\\\Jacobi.js\";\nimport React, { Component } from 'react';\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd';\nimport { Carousel } from 'antd';\nimport { Layout, Breadcrumb, Empty } from 'antd';\nimport { range, compile, lusolve, format, det, subtract, multiply, transpose, add, inv, fraction } from 'mathjs';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content,\n  Footer,\n  Sider\n} = Layout;\nconst InputColor = {\n  background: \"\",\n  color: \"#003a8c\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\",\n  width: 300,\n  height: 50\n};\nvar A = [],\n    B = [],\n    matrixA = [],\n    matrixB = [],\n    x,\n    epsilon,\n    dataInTable = [],\n    count = 1;\nvar columns = [{\n  title: \"Iteration\",\n  dataIndex: \"iteration\",\n  key: \"iteration\"\n}];\n\nclass Jacobi extends Component {\n  constructor() {\n    super();\n\n    this.dataapi = async () => {\n      var response = await axios.get('http://localhost:3000/GuassElimination').then(res => {\n        return res.data;\n      });\n      console.log(response);\n      this.setState({\n        A: response['A'],\n        B: response['B'],\n        row: response['row']\n      });\n      A = this.state.A;\n      B = this.state.B;\n      this.Jacobi2(this.state.row);\n    };\n\n    this.state = {\n      row: 0,\n      column: 0,\n      showDimentionForm: true,\n      showDimentionButton: true,\n      showMatrixForm: false,\n      showMatrixButton: false,\n      showOutputCard: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.jacobi = this.jacobi.bind(this);\n  }\n\n  jacobi(n) {\n    this.initMatrix();\n    x = new Array(n);\n    var temp;\n    var stop = 0;\n    var xold = new Array(n);\n    epsilon = new Array(n);\n    x.fill(0);\n    xold.fill(0);\n\n    do {\n      temp = [];\n      xold = x;\n\n      for (var i = 0; i < n; i++) {\n        var sum = 0;\n\n        for (var j = 0; j < n; j++) {\n          if (i !== j) {\n            //else i == j That is a divide number\n            sum = sum + A[i][j] * x[j];\n          }\n        }\n\n        temp[i] = (B[i] - sum) / A[i][i]; //update x[i]\n      }\n\n      x = temp;\n      stop++;\n    } while (this.error(x, xold) && stop < 100); //if true , continue next iteration\n\n    /*\n    \n    for (i=0 ; i<x.length ; i++) {\n            output.push(x[i]);\n            output.push(<br/>);\n    }*/\n\n\n    this.setState({\n      showOutputCard: true\n    });\n  }\n\n  jacobi2(n) {\n    x = new Array(n);\n    var temp;\n    var stop = 0;\n    var xold = new Array(n);\n    epsilon = new Array(n);\n    x.fill(0);\n    xold.fill(0);\n\n    do {\n      temp = [];\n      xold = x;\n\n      for (var i = 0; i < n; i++) {\n        var sum = 0;\n\n        for (var j = 0; j < n; j++) {\n          if (i !== j) {\n            //else i == j That is a divide number\n            sum = sum + A[i][j] * x[j];\n          }\n        }\n\n        temp[i] = (B[i] - sum) / A[i][i]; //update x[i]\n      }\n\n      x = temp;\n      stop++;\n    } while (this.error(x, xold) && stop < 100); //if true , continue next iteration\n\n    /*\n    \n    for (i=0 ; i<x.length ; i++) {\n            output.push(x[i]);\n            output.push(<br/>);\n    }*/\n\n\n    this.setState({\n      showOutputCard: true\n    });\n  }\n\n  error(xnew, xold) {\n    for (var i = 0; i < xnew.length; i++) {\n      console.log(Math.abs((xnew[i] - xold[i]) / xnew[i]));\n\n      if (isNaN(Math.abs((xnew[i] - xold[i]) / xnew[i]))) {\n        epsilon[i] = 0;\n      } else {\n        epsilon[i] = Math.abs((xnew[i] - xold[i]) / xnew[i]);\n      }\n    }\n\n    this.appendTable(x, epsilon);\n\n    for (i = 0; i < epsilon.length; i++) {\n      if (epsilon[i] > 0.000001) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  createMatrix(row, column) {\n    for (var i = 1; i <= row; i++) {\n      for (var j = 1; j <= column; j++) {\n        matrixA.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"black\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"a\" + i + \"\" + j,\n          placeholder: \"a\" + i + \"\" + j\n        }, \"a\" + i + \"\" + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 30\n        }, this));\n      }\n\n      matrixA.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 26\n      }, this));\n      matrixB.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"18%\",\n          height: \"50%\",\n          marginInlineEnd: \"5%\",\n          marginBlockEnd: \"5%\",\n          color: \"black\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"b\" + i,\n        placeholder: \"b\" + i\n      }, \"b\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 26\n      }, this));\n    }\n\n    this.setState({\n      showDimentionForm: false,\n      showDimentionButton: false,\n      showMatrixForm: true,\n      showMatrixButton: true\n    });\n  }\n\n  initMatrix() {\n    for (var i = 0; i < this.state.row; i++) {\n      A[i] = [];\n\n      for (var j = 0; j < this.state.column; j++) {\n        A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n      }\n\n      B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n    }\n  }\n\n  initialSchema(n) {\n    for (var i = 1; i <= n; i++) {\n      columns.push({\n        title: \"X\" + i,\n        dataIndex: \"x\" + i,\n        key: \"x\" + i\n      });\n    }\n\n    for (i = 1; i <= n; i++) {\n      columns.push({\n        title: \"Error\" + i,\n        dataIndex: \"error\" + i,\n        key: \"error\" + i\n      });\n    }\n  }\n\n  appendTable(x, error) {\n    var tag = '';\n    tag += '{\"iteration\": ' + count++ + ',';\n\n    for (var i = 0; i < x.length; i++) {\n      tag += '\"x' + (i + 1) + '\": ' + x[i].toFixed(8) + ', \"error' + (i + 1) + '\": ' + error[i].toFixed(8);\n\n      if (i !== x.length - 1) {\n        tag += ',';\n      }\n    }\n\n    tag += '}';\n    console.log(tag);\n    dataInTable.push(JSON.parse(tag));\n    console.log(dataInTable);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"body\", {\n          style: {\n            background: \"#ebe18d\",\n            padding: \"90px\",\n            float: \"left\"\n          },\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            gutter: [40, 40],\n            onChange: this.handleChange,\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 10,\n              offset: 7,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 33\n              }, this), this.state.showDimentionButton && /*#__PURE__*/_jsxDEV(Button, {\n                id: \"dimention_button\",\n                onClick: () => {\n                  this.createMatrix(this.state.row, this.state.column);\n                  this.initialSchema(this.state.row);\n                },\n                style: {\n                  width: 100,\n                  height: 50,\n                  background: \"#003a8c\",\n                  color: \"white\",\n                  fontSize: \"25px\"\n                },\n                children: [\"Submit\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 37\n              }, this), this.state.showMatrixButton && /*#__PURE__*/_jsxDEV(Button, {\n                id: \"matrix_button\",\n                onClick: () => this.jacobi(parseInt(this.state.row)),\n                style: {\n                  width: 100,\n                  height: 50,\n                  background: \"#003a8c\",\n                  color: \"white\",\n                  fontSize: \"25px\"\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [40, 40],\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              offset: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Matrix\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 44\n                }, this),\n                children: this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: matrixA\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Vector\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 44\n                }, this),\n                children: this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: matrixB\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [2, 2],\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 10,\n              offset: 2,\n              children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n                title: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Output\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 44\n                }, this),\n                bordered: true,\n                style: {\n                  overflowX: \"scroll\",\n                  width: \"200%\"\n                },\n                onChange: this.handleChange,\n                id: \"answerCard\",\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  columns: columns,\n                  dataSource: dataInTable,\n                  bodyStyle: {\n                    fontWeight: \"bold\",\n                    fontSize: \"18px\",\n                    color: \"black\",\n                    border: \"2px solid white\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Jacobi;","map":{"version":3,"sources":["C:/Users/big49/Desktop/numerpj/numerpj/src/code/Linear/Jacobi.js"],"names":["React","Component","Menu","Input","Row","Col","Button","Card","Table","Carousel","Layout","Breadcrumb","Empty","range","compile","lusolve","format","det","subtract","multiply","transpose","add","inv","fraction","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Legend","BrowserRouter","Router","Route","Link","Header","Content","Footer","Sider","InputColor","background","color","fontWeight","fontSize","width","height","A","B","matrixA","matrixB","x","epsilon","dataInTable","count","columns","title","dataIndex","key","Jacobi","constructor","dataapi","response","axios","get","then","res","data","console","log","setState","row","state","Jacobi2","column","showDimentionForm","showDimentionButton","showMatrixForm","showMatrixButton","showOutputCard","handleChange","bind","jacobi","n","initMatrix","Array","temp","stop","xold","fill","i","sum","j","error","jacobi2","xnew","length","Math","abs","isNaN","appendTable","createMatrix","push","marginInlineEnd","marginBlockEnd","parseFloat","document","getElementById","value","initialSchema","tag","toFixed","JSON","parse","event","target","name","render","padding","float","parseInt","overflowX","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd';\nimport { Carousel } from 'antd';\nimport { Layout, Breadcrumb,Empty } from 'antd';\nimport { range, compile, lusolve, format, det, subtract, multiply, transpose, add,inv,fraction } from 'mathjs';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nconst { Header, Content, Footer, Sider } = Layout;\nconst InputColor = {\n    background: \"\",\n    color: \"#003a8c\", \n    fontWeight: \"bold\", \n    fontSize: \"24px\",\n    width: 300 ,\n    height:50\n    \n\n};\nvar A = [], B = [], matrixA = [], matrixB = [], x , epsilon, dataInTable = [], count=1;\nvar columns = [\n    {\n      title: \"Iteration\",\n      dataIndex: \"iteration\",\n      key: \"iteration\"\n    }\n];\n\nclass Jacobi extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm : true,\n            showDimentionButton: true,\n            showMatrixForm: false,\n            showMatrixButton: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.jacobi = this.jacobi.bind(this);\n    \n    }\n\n  \n    jacobi(n) {\n        this.initMatrix();\n        x = new Array(n);\n        var temp;\n        var stop = 0;\n        var xold = new Array(n);\n        epsilon = new Array(n);\n        x.fill(0)\n        xold.fill(0);\n        do {\n            temp = [];\n            xold = x;\n            for (var i=0 ; i<n ; i++) {\n                var sum = 0;\n                for (var j=0 ; j<n ; j++) {\n                    if (i !== j) { //else i == j That is a divide number\n                        sum = sum + A[i][j]*x[j];\n                    }\n                }\n                temp[i] = (B[i] - sum)/A[i][i]; //update x[i]\n                \n            }        \n            x = temp;\n            stop++;\n        } while(this.error(x, xold) && stop<100); //if true , continue next iteration\n        /*\n        \n        for (i=0 ; i<x.length ; i++) {\n                output.push(x[i]);\n                output.push(<br/>);\n        }*/\n        this.setState({\n            showOutputCard: true\n        });\n\n      \n    }\n    jacobi2(n) {\n        x = new Array(n);\n        var temp;\n        var stop = 0;\n        var xold = new Array(n);\n        epsilon = new Array(n);\n        x.fill(0)\n        xold.fill(0);\n        do {\n            temp = [];\n            xold = x;\n            for (var i=0 ; i<n ; i++) {\n                var sum = 0;\n                for (var j=0 ; j<n ; j++) {\n                    if (i !== j) { //else i == j That is a divide number\n                        sum = sum + A[i][j]*x[j];\n                    }\n                }\n                temp[i] = (B[i] - sum)/A[i][i]; //update x[i]\n                \n            }        \n            x = temp;\n            stop++;\n        } while(this.error(x, xold) && stop<100); //if true , continue next iteration\n        /*\n        \n        for (i=0 ; i<x.length ; i++) {\n                output.push(x[i]);\n                output.push(<br/>);\n        }*/\n        this.setState({\n            showOutputCard: true\n        });\n\n      \n    }\n    error(xnew, xold) {\n        for (var i=0 ; i<xnew.length ; i++) {\n            console.log(Math.abs((xnew[i]-xold[i]) / xnew[i]))\n            if(isNaN(Math.abs((xnew[i]-xold[i]) / xnew[i]))){\n                epsilon[i] = 0\n            }\n            else{\n                epsilon[i] = Math.abs((xnew[i]-xold[i]) / xnew[i])\n            }\n        }\n        \n        this.appendTable(x, epsilon);\n\n        for (i=0 ; i<epsilon.length ; i++) {\n            \n            if (epsilon[i] > 0.000001) {\n                return true;\n            }    \n        }\n        return false;  \n    }   \n    createMatrix(row, column) {\n        for (var i=1 ; i<=row ; i++) {\n            for (var j=1 ; j<=column ; j++) {\n                matrixA.push(<Input style={{\n                    width: \"18%\",\n                    height: \"50%\", \n\n                    marginInlineEnd: \"5%\", \n                    marginBlockEnd: \"5%\",\n                    color: \"black\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }} \n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \n            }\n            matrixA.push(<br/>)\n            matrixB.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\n                \n            \n        }\n\n        this.setState({\n            showDimentionForm: false,\n            showDimentionButton: false,\n            showMatrixForm: true,\n            showMatrixButton: true\n        })\n\n        \n\n    }\n    initMatrix() {\n        for(var i=0 ; i<this.state.row ; i++) {\n            A[i] = []\n            for(var j=0 ; j<this.state.column ; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\n        }\n    }\n    dataapi = async()=>{\n        var response = await axios.get('http://localhost:3000/GuassElimination').then(res => {return res.data});\n        console.log(response)\n        this.setState({\n            A:response['A'],\n            B:response['B'],\n            row:response['row']\n        })\n        A = this.state.A;\n        B = this.state.B;\n        this.Jacobi2(this.state.row);\n        \n    }\n    initialSchema(n) {\n        for (var i=1 ; i<=n ; i++) {\n            columns.push({\n                title: \"X\"+i,\n                dataIndex: \"x\"+i,\n                key: \"x\"+i\n            },)\n        }\n        for (i=1 ; i<=n ; i++) {\n            columns.push({\n                title: \"Error\"+i,\n                dataIndex: \"error\"+i,\n                key: \"error\"+i\n            },)\n        }\n    }\n    appendTable(x, error) {\n        var tag = ''\n        tag += '{\"iteration\": ' + (count++) + ',';\n        for (var i=0 ; i<x.length ; i++) {\n            tag += '\"x'+(i+1)+'\": '+x[i].toFixed(8)+', \"error'+(i+1)+'\": ' + error[i].toFixed(8);\n            if (i !== x.length-1) {\n                tag += ','\n            }\n        }\n        tag += '}';\n        console.log(tag)\n        dataInTable.push(JSON.parse(tag));\n        console.log(dataInTable)\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <Router>\n                <Layout>\n                <body\n                        style={{ background: \"#ebe18d\", padding: \"90px\" , float:\"left\" }}\n                        onChange={this.handleChange}\n                    >\n\n                        {/*-----------------------------------------ปุ่มINPUTสมการ----------------------------------------------------*/}\n                        <Row gutter={[40, 40]}\n                            \n                            onChange={this.handleChange}\n                        >\n                            <Col span={10} offset={7}>\n\n                                <div>\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" ></Input>\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" ></Input>\n                                </div>\n                                <br></br>\n                                {this.state.showDimentionButton &&\n                                    <Button id=\"dimention_button\" onClick={\n                                        ()=>{this.createMatrix(this.state.row, this.state.column);this.initialSchema(this.state.row)}\n                                    } style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}\n                                    >\n                                        Submit<br></br>\n                                    </Button>\n                                }\n\n                                {this.state.showMatrixButton &&\n                                    <Button\n                                        id=\"matrix_button\"\n                                        onClick={()=>this.jacobi(parseInt(this.state.row))} style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}>\n                                        Submit\n                                    </Button>\n                                }\n                            </Col>\n                        </Row>\n\n                        <br></br>\n                        <Row gutter={[40, 40]}>\n                            <Col span={8} offset={4}>\n                                <Card\n                                    title={<h3>Matrix</h3>}\n                                >\n                                    {this.state.showMatrixForm && <div>{matrixA}</div>}\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card\n                                    title={<h3>Vector</h3>}\n                                >\n                                    {this.state.showMatrixForm && <div>{matrixB}</div>}\n                                </Card>\n                            </Col>\n                        </Row>\n                        <br></br>\n\n                        {/*---------------------------------------------------------------------------------------------*/}\n                        \n                        <Row gutter={[2, 2]}>\n                            <Col span={10} offset={2}>\n                            {this.state.showOutputCard &&\n                                <Card\n                                    title={<h3>Output</h3>}\n                                    bordered={true}\n                                    style={{overflowX: \"scroll\" ,width: \"200%\"}}\n                                    onChange={this.handleChange} id=\"answerCard\">\n                                    <Table columns={columns} dataSource={dataInTable} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"black\", border:\"2px solid white\"}}></Table>\n                                </Card>\n                            }\n                            </Col>\n                        </Row>\n                    </body>\n                </Layout>\n            </Router>\n        );\n    }\n}\nexport default Jacobi;"]},"metadata":{},"sourceType":"module"}