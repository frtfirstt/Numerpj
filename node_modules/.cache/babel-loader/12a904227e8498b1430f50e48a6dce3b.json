{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\big49\\\\Desktop\\\\numerpj\\\\numerpj\\\\src\\\\code\\\\Root of equation\\\\Newtonraphson.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table } from 'antd';\nimport { LineChart, Line, XAxis, CartesianGrid, Tooltip, Legend, YAxis } from 'recharts';\nimport 'antd/dist/antd.css';\nimport { compile, derivative } from 'mathjs';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputColor = {\n  background: \"\",\n  color: \"#003a8c\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\",\n  width: 300,\n  height: 50\n};\nvar schedule = [];\nconst table = [{\n  title: \"Iteration\",\n  dataIndex: \"iteration\",\n  key: \"iteration\"\n}, {\n  title: \"X\",\n  dataIndex: \"x\",\n  key: \"x\"\n}, {\n  title: \"Error\",\n  dataIndex: \"error\",\n  key: \"error\"\n}];\n\nclass Newton extends Component {\n  constructor() {\n    super();\n\n    this.dataapi = async () => {\n      var response = await axios.get('http://localhost:3000/newtonraphson').then(res => {\n        return res.data;\n      });\n      this.setState({\n        fx: response['fx'],\n        x0: response['x0']\n      });\n      this.newton_raphson(this.state.x0);\n    };\n\n    this.state = {\n      x0: 0,\n      fx: \"\",\n      showtable: false,\n      showgraph: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.newton_raphson = this.newton_raphson.bind(this);\n  }\n\n  newton_raphson(xold) {\n    var xnew = 0;\n    var n = 0;\n    var Epsilon = parseFloat(0.000000);\n    var array2d = [];\n    array2d[0] = []; //x\n\n    array2d[1] = []; //error\n\n    do {\n      xnew = xold - this.func(xold) / this.funcDiff(xold);\n      Epsilon = Math.abs((xnew - xold) / xnew);\n      array2d[0][n] = xnew.toFixed(6);\n      array2d[1][n] = Math.abs(Epsilon).toFixed(6);\n      n++;\n      xold = xnew;\n    } while (Math.abs(Epsilon) > 0.000001);\n\n    for (var i = 0; i < array2d[0].length; i++) {\n      schedule.push({\n        iteration: i + 1,\n        x: array2d[0][i],\n        error: array2d[1][i]\n      });\n    }\n\n    this.setState({\n      showtable: true,\n      showgraph: true\n    });\n  }\n\n  func(datastr) {\n    var comfunc = compile(this.state.fx);\n    let data = {\n      x: parseFloat(datastr)\n    };\n    return comfunc.evaluate(data);\n  }\n\n  funcDiff(datastr) {\n    var comfunc = derivative(this.state.fx, 'x');\n    let data = {\n      x: parseFloat(datastr)\n    };\n    return comfunc.evaluate(data);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      style: {\n        background: \"#ebe18d\",\n        padding: \"90px\",\n        float: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"#003a8c\",\n          fontWeight: \"bold\",\n          fontSize: \"35px\",\n          textAlign: \"center\"\n        },\n        children: \"Newton Paphson\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"f(x)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          size: \"large\",\n          name: \"fx\",\n          style: InputColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 95\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 100\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 105\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 110\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          size: \"large\",\n          name: \"x0\",\n          style: InputColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 104\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 109\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 114\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 119\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"submit_button\",\n          onClick: () => this.newton_raphson(parseFloat(this.state.x0)),\n          style: {\n            width: 100,\n            height: 50,\n            background: \"#003a8c\",\n            color: \"white\",\n            fontSize: \"25px\"\n          },\n          children: \"GO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n          id: \"submit_button\",\n          onClick: () => this.dataapi(),\n          style: {\n            width: 100,\n            height: 50,\n            background: \"#003a8c\",\n            color: \"white\",\n            fontSize: \"25px\"\n          },\n          children: \"API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this), this.state.showtable && /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Output\",\n          bordered: true,\n          style: {\n            width: \"100%\",\n            background: \"#2196f3\",\n            color: \"#FFFFFFFF\",\n            float: \"inline-start\",\n            marginBlockStart: \"2%\"\n          },\n          id: \"outputCard\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            columns: table,\n            bordered: true,\n            dataSource: schedule,\n            bodyStyle: {\n              fontWeight: \"bold\",\n              fontSize: \"18px\",\n              color: \"black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), this.state.showgraph && /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 730,\n          height: 250,\n          data: schedule,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            verticalAlign: \"top\",\n            height: 36\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            name: \"error\",\n            type: \"monotone\",\n            dataKey: \"error\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Newton;","map":{"version":3,"sources":["C:/Users/big49/Desktop/numerpj/numerpj/src/code/Root of equation/Newtonraphson.js"],"names":["React","Component","Card","Input","Button","Table","LineChart","Line","XAxis","CartesianGrid","Tooltip","Legend","YAxis","compile","derivative","axios","InputColor","background","color","fontWeight","fontSize","width","height","schedule","table","title","dataIndex","key","Newton","constructor","dataapi","response","get","then","res","data","setState","fx","x0","newton_raphson","state","showtable","showgraph","handleChange","bind","xold","xnew","n","Epsilon","parseFloat","array2d","func","funcDiff","Math","abs","toFixed","i","length","push","iteration","x","error","datastr","comfunc","evaluate","event","target","name","value","render","padding","float","textAlign","marginBlockStart","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Card, Input, Button, Table} from 'antd';\n\nimport { LineChart, Line ,XAxis,CartesianGrid,Tooltip,Legend,YAxis} from 'recharts';\nimport 'antd/dist/antd.css';\nimport {  compile ,derivative} from 'mathjs';\nimport axios from 'axios';\n\nconst InputColor = {\n    background: \"\",\n    color: \"#003a8c\", \n    fontWeight: \"bold\", \n    fontSize: \"24px\",\n    width: 300 ,\n    height:50\n    \n\n};\nvar schedule=[];\nconst table = [\n    {\n      title: \"Iteration\",\n      dataIndex: \"iteration\",\n      key: \"iteration\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Error\",\n        dataIndex: \"error\",\n        key: \"error\",\n    }\n];\n  \nclass Newton extends Component {\n    \n    constructor() {\n        super();\n        this.state = {\n            \n            x0: 0,\n            fx: \"\",\n            showtable: false,\n            showgraph: false\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n\n        this.newton_raphson = this.newton_raphson.bind(this);\n\n\n    }\n\n    newton_raphson(xold) {\n        \n        var xnew = 0;\n        var n=0;\n        var Epsilon= parseFloat(0.000000);\n        var array2d  = []\n\n        array2d[0] = []//x\n        array2d[1] = []//error\n\n        do{ \n            xnew = xold - (this.func(xold)/this.funcDiff(xold));\n            Epsilon = Math.abs((xnew-xold) / xnew);\n            array2d[0][n] =  xnew.toFixed(6);\n            array2d[1][n] = Math.abs(Epsilon).toFixed(6);\n            n++;  \n            xold = xnew;\n\n        }while(Math.abs(Epsilon)>0.000001);\n\n        \n        \n        for (var i=0 ; i<array2d[0].length ; i++) {\n            schedule.push({\n                iteration: i+1,\n                x: array2d[0][i],\n                error: array2d[1][i]\n            });\n        }\n        \n        this.setState({\n            showtable: true,\n            showgraph: true\n        })\n\n        \n    }\n    func(datastr) {\n        \n        var comfunc = compile(this.state.fx)\n        let data = {x:parseFloat(datastr)}\n\n        return comfunc.evaluate(data)       \n    }\n\n    funcDiff(datastr) {\n        var comfunc = derivative(this.state.fx, 'x');\n        \n        let data = {x:parseFloat(datastr)};\n        return comfunc.evaluate(data); \n    }\n    \n    \n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    dataapi = async()=>{\n        var response = await axios.get('http://localhost:3000/newtonraphson').then(res => {return res.data});\n        this.setState({\n            fx:response['fx'],\n            x0:response['x0'],\n            \n        })\n        this.newton_raphson(this.state.x0);\n    }\n    render() {\n        return(\n            <body style={{ background: \"#ebe18d\", padding: \"90px\" , float:\"left\" }}>\n                <h2 style={{color: \"#003a8c\", fontWeight: \"bold\",fontSize: \"35px\",textAlign:\"center\"}}>Newton Paphson</h2>\n                <div style={{textAlign:\"center\"}}>\n                    {/* <Card\n                    \n                    bordered={true}\n                    style={{ width: 700 ,height:600, background: \"#40a9ff\", color: \"#FFFFFFFF\", float:\"Auto\"}}\n                    onChange={this.handleChange}\n                    > */}\n                        <h2>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputColor}></Input><br/><br/><br/><br/>\n                        <h2>X<sub>0</sub></h2><Input size=\"large\" name=\"x0\" style={InputColor}></Input><br/><br/><br/><br/>\n                        <Button id=\"submit_button\" onClick= {\n                                ()=>this.newton_raphson(parseFloat(this.state.x0))\n                            }  \n                            style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}>GO</Button>&nbsp;&nbsp;&nbsp;&nbsp;\n\n                        <Button id=\"submit_button\" onClick= {\n                                \n                                ()=>this.dataapi()\n                        }  \n                        style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}>API</Button>\n                        \n                    {/* </Card> */}\n                     \n                    {this.state.showtable&& \n                        <Card\n                        title={\"Output\"}\n                        bordered={true}\n                        style={{width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\", float:\"inline-start\", marginBlockStart:\"2%\"}}\n                        id=\"outputCard\"\n                        >\n                            <Table columns={table} bordered={true} dataSource={schedule} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"black\"}}\n                            ></Table>\n                        </Card>\n                    } \n                    {this.state.showgraph &&\n                        <LineChart width={730} height={250} data={schedule}\n                        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                        <XAxis dataKey=\"error\" />\n                        <YAxis />\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <Tooltip />\n                        <Legend verticalAlign=\"top\" height={36} />\n                        <Line name=\"error\" type=\"monotone\" dataKey=\"error\" stroke=\"#8884d8\" />\n                    </LineChart>                    \n                    }                   \n                </div>\n\n                \n            </body>\n        );\n    }\n}\nexport default Newton;"]},"metadata":{},"sourceType":"module"}