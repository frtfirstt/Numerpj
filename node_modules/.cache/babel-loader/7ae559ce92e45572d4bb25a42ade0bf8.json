{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\big49\\\\Desktop\\\\clone2\\\\Numerpj\\\\src\\\\code\\\\Linear\\\\Jacobi.js\";\nimport React, { Component } from 'react';\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd';\nimport { Carousel } from 'antd';\nimport { Layout, Breadcrumb, Empty } from 'antd';\nimport { range, compile, lusolve, format, det, subtract, multiply, transpose, add, inv, fraction } from 'mathjs';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content,\n  Footer,\n  Sider\n} = Layout;\nconst InputColor = {\n  background: \"\",\n  color: \"#003a8c\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\",\n  width: 300,\n  height: 50\n};\nvar api;\nvar A = [],\n    B = [],\n    matrixA = [],\n    matrixB = [],\n    x,\n    epsilon,\n    dataInTable = [],\n    count = 1;\nvar columns = [{\n  title: \"Iteration\",\n  dataIndex: \"iteration\",\n  key: \"iteration\"\n}];\n\nclass Jacobi extends Component {\n  constructor() {\n    super();\n    this.state = {\n      row: 0,\n      column: 0,\n      showDimentionForm: true,\n      showDimentionButton: true,\n      showMatrixForm: false,\n      showMatrixButton: false,\n      showOutputCard: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.jacobi = this.jacobi.bind(this);\n  }\n\n  jacobi(n) {\n    this.initMatrix();\n    x = new Array(n);\n    var temp;\n    var stop = 0;\n    var xold = new Array(n);\n    epsilon = new Array(n);\n    x.fill(0);\n    xold.fill(0);\n\n    do {\n      temp = [];\n      xold = x;\n\n      for (var i = 0; i < n; i++) {\n        var sum = 0;\n\n        for (var j = 0; j < n; j++) {\n          if (i !== j) {\n            //else i == j That is a divide number\n            sum = sum + A[i][j] * x[j];\n          }\n        }\n\n        temp[i] = (B[i] - sum) / A[i][i]; //update x[i]\n      }\n\n      x = temp;\n      stop++;\n    } while (this.error(x, xold) && stop < 100); //if true , continue next iteration\n\n    /*\r\n    \r\n    for (i=0 ; i<x.length ; i++) {\r\n            output.push(x[i]);\r\n            output.push(<br/>);\r\n    }*/\n\n\n    this.setState({\n      showOutputCard: true\n    });\n  }\n\n  error(xnew, xold) {\n    for (var i = 0; i < xnew.length; i++) {\n      console.log(Math.abs((xnew[i] - xold[i]) / xnew[i]));\n\n      if (isNaN(Math.abs((xnew[i] - xold[i]) / xnew[i]))) {\n        epsilon[i] = 0;\n      } else {\n        epsilon[i] = Math.abs((xnew[i] - xold[i]) / xnew[i]);\n      }\n    }\n\n    console.log(\"a\");\n    this.appendTable(x, epsilon);\n\n    for (i = 0; i < epsilon.length; i++) {\n      if (epsilon[i] > 0.000001) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  createMatrix(row, column) {\n    for (var i = 1; i <= row; i++) {\n      for (var j = 1; j <= column; j++) {\n        matrixA.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"black\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"a\" + i + \"\" + j,\n          placeholder: \"a\" + i + \"\" + j\n        }, \"a\" + i + \"\" + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 30\n        }, this));\n      }\n\n      matrixA.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 26\n      }, this));\n      matrixB.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"18%\",\n          height: \"50%\",\n          marginInlineEnd: \"5%\",\n          marginBlockEnd: \"5%\",\n          color: \"black\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"b\" + i,\n        placeholder: \"b\" + i\n      }, \"b\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 26\n      }, this));\n    }\n\n    this.setState({\n      showDimentionForm: false,\n      showDimentionButton: false,\n      showMatrixForm: true,\n      showMatrixButton: true\n    });\n  }\n\n  initMatrix() {\n    for (var i = 0; i < this.state.row; i++) {\n      A[i] = [];\n\n      for (var j = 0; j < this.state.column; j++) {\n        A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n      }\n\n      B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n    }\n  }\n\n  async dataapi() {\n    await axios({\n      method: \"get\",\n      url: \"http://localhost:5000/database/gauss\"\n    }).then(response => {\n      console.log(\"response: \", response.data);\n      api = response.data;\n    });\n    await this.setState({\n      row: api.row,\n      column: api.row\n    });\n    matrixA = [];\n    matrixB = [];\n    await this.createMatrix(api.row, api.row);\n\n    for (let i = 1; i <= api.row; i++) {\n      for (let j = 1; j <= api.row; j++) {\n        document.getElementById(\"a\" + i + \"\" + j).value = api.A[i - 1][j - 1];\n      }\n\n      document.getElementById(\"b\" + i).value = api.B[i - 1];\n    }\n\n    this.jacobi(api.row);\n  }\n\n  initialSchema(n) {\n    for (var i = 1; i <= n; i++) {\n      columns.push({\n        title: \"X\" + i,\n        dataIndex: \"x\" + i,\n        key: \"x\" + i\n      });\n    }\n\n    for (i = 1; i <= n; i++) {\n      columns.push({\n        title: \"Error\" + i,\n        dataIndex: \"error\" + i,\n        key: \"error\" + i\n      });\n    }\n  }\n\n  appendTable(x, error) {\n    var tag = '';\n    tag += '{\"iteration\": ' + count++ + ',';\n\n    for (var i = 0; i < x.length; i++) {\n      tag += '\"x' + (i + 1) + '\": ' + x[i].toFixed(8) + ', \"error' + (i + 1) + '\": ' + error[i].toFixed(8);\n\n      if (i !== x.length - 1) {\n        tag += ',';\n      }\n    }\n\n    tag += '}';\n    console.log(tag);\n    dataInTable.push(JSON.parse(tag));\n    console.log(dataInTable);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"body\", {\n          style: {\n            background: \"#ebe18d\",\n            padding: \"90px\",\n            float: \"left\"\n          },\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            gutter: [40, 40],\n            onChange: this.handleChange,\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 10,\n              offset: 7,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"row\",\n                  value: this.state.row\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"column\",\n                  value: this.state.column\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this), this.state.showDimentionButton && /*#__PURE__*/_jsxDEV(Button, {\n                id: \"dimention_button\",\n                onClick: () => {\n                  this.createMatrix(this.state.row, this.state.column);\n                  this.initialSchema(this.state.row);\n                },\n                style: {\n                  width: 100,\n                  height: 50,\n                  background: \"#003a8c\",\n                  color: \"white\",\n                  fontSize: \"25px\"\n                },\n                children: [\"Submit\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 37\n              }, this), this.state.showMatrixButton && /*#__PURE__*/_jsxDEV(Button, {\n                id: \"matrix_button\",\n                onClick: () => this.jacobi(parseInt(this.state.row)),\n                style: {\n                  width: 100,\n                  height: 50,\n                  background: \"#003a8c\",\n                  color: \"white\",\n                  fontSize: \"25px\"\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                id: \"submit_button\",\n                onClick: () => this.dataapi(),\n                style: {\n                  width: 100,\n                  height: 50,\n                  background: \"#003a8c\",\n                  color: \"white\",\n                  fontSize: \"25px\"\n                },\n                children: \"API\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [40, 40],\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              offset: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Matrix\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 44\n                }, this),\n                children: this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: matrixA\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Vector\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 44\n                }, this),\n                children: this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: matrixB\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [2, 2],\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 10,\n              offset: 2,\n              children: this.state.showOutputCard && /*#__PURE__*/_jsxDEV(Card, {\n                title: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Output\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 44\n                }, this),\n                bordered: true,\n                style: {\n                  overflowX: \"scroll\",\n                  width: \"200%\"\n                },\n                onChange: this.handleChange,\n                id: \"answerCard\",\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  columns: columns,\n                  dataSource: dataInTable,\n                  bodyStyle: {\n                    fontWeight: \"bold\",\n                    fontSize: \"18px\",\n                    color: \"black\",\n                    border: \"2px solid white\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Jacobi;","map":{"version":3,"sources":["C:/Users/big49/Desktop/clone2/Numerpj/src/code/Linear/Jacobi.js"],"names":["React","Component","Menu","Input","Row","Col","Button","Card","Table","Carousel","Layout","Breadcrumb","Empty","range","compile","lusolve","format","det","subtract","multiply","transpose","add","inv","fraction","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Legend","BrowserRouter","Router","Route","Link","axios","Header","Content","Footer","Sider","InputColor","background","color","fontWeight","fontSize","width","height","api","A","B","matrixA","matrixB","x","epsilon","dataInTable","count","columns","title","dataIndex","key","Jacobi","constructor","state","row","column","showDimentionForm","showDimentionButton","showMatrixForm","showMatrixButton","showOutputCard","handleChange","bind","jacobi","n","initMatrix","Array","temp","stop","xold","fill","i","sum","j","error","setState","xnew","length","console","log","Math","abs","isNaN","appendTable","createMatrix","push","marginInlineEnd","marginBlockEnd","parseFloat","document","getElementById","value","dataapi","method","url","then","response","data","initialSchema","tag","toFixed","JSON","parse","event","target","name","render","padding","float","parseInt","overflowX","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd';\r\nimport { Carousel } from 'antd';\r\nimport { Layout, Breadcrumb,Empty } from 'antd';\r\nimport { range, compile, lusolve, format, det, subtract, multiply, transpose, add,inv,fraction } from 'mathjs';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst InputColor = {\r\n    background: \"\",\r\n    color: \"#003a8c\", \r\n    fontWeight: \"bold\", \r\n    fontSize: \"24px\",\r\n    width: 300 ,\r\n    height:50\r\n    \r\n\r\n};\r\nvar api\r\nvar A = [], B = [], matrixA = [], matrixB = [], x , epsilon, dataInTable = [], count=1;\r\nvar columns = [\r\n    {\r\n      title: \"Iteration\",\r\n      dataIndex: \"iteration\",\r\n      key: \"iteration\"\r\n    }\r\n];\r\n\r\nclass Jacobi extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm : true,\r\n            showDimentionButton: true,\r\n            showMatrixForm: false,\r\n            showMatrixButton: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.jacobi = this.jacobi.bind(this);\r\n    \r\n    }\r\n\r\n  \r\n    jacobi(n) {\r\n        this.initMatrix();\r\n        x = new Array(n);\r\n        var temp;\r\n        var stop = 0;\r\n        var xold = new Array(n);\r\n        epsilon = new Array(n);\r\n        x.fill(0)\r\n        xold.fill(0);\r\n        do {\r\n            temp = [];\r\n            xold = x;\r\n            for (var i=0 ; i<n ; i++) {\r\n                var sum = 0;\r\n                for (var j=0 ; j<n ; j++) {\r\n                    if (i !== j) { //else i == j That is a divide number\r\n                        sum = sum + A[i][j]*x[j];\r\n                    }\r\n                }\r\n                temp[i] = (B[i] - sum)/A[i][i]; //update x[i]\r\n                \r\n            }        \r\n            x = temp;\r\n            stop++;\r\n        } while(this.error(x, xold) && stop<100); //if true , continue next iteration\r\n        /*\r\n        \r\n        for (i=0 ; i<x.length ; i++) {\r\n                output.push(x[i]);\r\n                output.push(<br/>);\r\n        }*/\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n      \r\n    }\r\n    error(xnew, xold) {\r\n        for (var i=0 ; i<xnew.length ; i++) {\r\n            console.log(Math.abs((xnew[i]-xold[i]) / xnew[i]))\r\n            if(isNaN(Math.abs((xnew[i]-xold[i]) / xnew[i]))){\r\n                epsilon[i] = 0\r\n            }\r\n            else{\r\n                epsilon[i] = Math.abs((xnew[i]-xold[i]) / xnew[i])\r\n            }\r\n        }\r\n        console.log(\"a\")\r\n        this.appendTable(x, epsilon);\r\n\r\n        for (i=0 ; i<epsilon.length ; i++) {\r\n            \r\n            if (epsilon[i] > 0.000001) {\r\n                return true;\r\n            }    \r\n        }\r\n        return false;  \r\n    }   \r\n    createMatrix(row, column) {\r\n        for (var i=1 ; i<=row ; i++) {\r\n            for (var j=1 ; j<=column ; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\", \r\n\r\n                    marginInlineEnd: \"5%\", \r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"black\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }} \r\n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \r\n            }\r\n            matrixA.push(<br/>)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"black\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\r\n                \r\n            \r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showDimentionButton: false,\r\n            showMatrixForm: true,\r\n            showMatrixButton: true\r\n        })\r\n\r\n        \r\n\r\n    }\r\n    initMatrix() {\r\n        for(var i=0 ; i<this.state.row ; i++) {\r\n            A[i] = []\r\n            for(var j=0 ; j<this.state.column ; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\r\n        }\r\n    }\r\n    async dataapi() {\r\n        await axios({method: \"get\",url: \"http://localhost:5000/database/gauss\",}).then((response) => {console.log(\"response: \", response.data);api = response.data;});\r\n        await this.setState({\r\n            row: api.row,\r\n            column: api.row,\r\n          });\r\n          matrixA = [];\r\n          matrixB = [];\r\n          await this.createMatrix(api.row, api.row);\r\n          for (let i = 1; i <= api.row; i++) {\r\n            for (let j = 1; j <= api.row; j++) {\r\n              document.getElementById(\"a\" + i + \"\" + j).value =\r\n                api.A[i - 1][j - 1];\r\n            }\r\n            document.getElementById(\"b\" + i).value = api.B[i - 1];\r\n          }\r\n          this.jacobi(api.row);\r\n    }\r\n    initialSchema(n) {\r\n        for (var i=1 ; i<=n ; i++) {\r\n            columns.push({\r\n                title: \"X\"+i,\r\n                dataIndex: \"x\"+i,\r\n                key: \"x\"+i\r\n            },)\r\n        }\r\n        for (i=1 ; i<=n ; i++) {\r\n            columns.push({\r\n                title: \"Error\"+i,\r\n                dataIndex: \"error\"+i,\r\n                key: \"error\"+i\r\n            },)\r\n        }\r\n    }\r\n    appendTable(x, error) {\r\n        var tag = ''\r\n        tag += '{\"iteration\": ' + (count++) + ',';\r\n        for (var i=0 ; i<x.length ; i++) {\r\n            tag += '\"x'+(i+1)+'\": '+x[i].toFixed(8)+', \"error'+(i+1)+'\": ' + error[i].toFixed(8);\r\n            if (i !== x.length-1) {\r\n                tag += ','\r\n            }\r\n        }\r\n        tag += '}';\r\n        console.log(tag)\r\n        dataInTable.push(JSON.parse(tag));\r\n        console.log(dataInTable)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Layout>\r\n                <body\r\n                        style={{ background: \"#ebe18d\", padding: \"90px\" , float:\"left\" }}\r\n                        onChange={this.handleChange}\r\n                    >\r\n\r\n                        {/*-----------------------------------------ปุ่มINPUTสมการ----------------------------------------------------*/}\r\n                        <Row gutter={[40, 40]}\r\n                            \r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <Col span={10} offset={7}>\r\n\r\n                                <div>\r\n                                <h2>Row</h2><Input size=\"large\" name=\"row\" value={this.state.row}></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" value={this.state.column}></Input>\r\n                                </div>\r\n                                <br></br>\r\n                                {this.state.showDimentionButton &&\r\n                                    <Button id=\"dimention_button\" onClick={\r\n                                        ()=>{this.createMatrix(this.state.row, this.state.column);this.initialSchema(this.state.row)}\r\n                                    } style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}\r\n                                    >\r\n                                        Submit<br></br>\r\n                                    </Button>\r\n                                }\r\n\r\n                                {this.state.showMatrixButton &&\r\n                                    <Button\r\n                                        id=\"matrix_button\"\r\n                                        onClick={()=>this.jacobi(parseInt(this.state.row))} style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}>\r\n                                        Submit\r\n                                    </Button>\r\n                                }\r\n\r\n                                <Button id=\"submit_button\" onClick= {\r\n                                \r\n                                ()=>this.dataapi()\r\n                                 }  \r\n                                 style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}>API</Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <br></br>\r\n                        <Row gutter={[40, 40]}>\r\n                            <Col span={8} offset={4}>\r\n                                <Card\r\n                                    title={<h3>Matrix</h3>}\r\n                                >\r\n                                    {this.state.showMatrixForm && <div>{matrixA}</div>}\r\n                                </Card>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Card\r\n                                    title={<h3>Vector</h3>}\r\n                                >\r\n                                    {this.state.showMatrixForm && <div>{matrixB}</div>}\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <br></br>\r\n\r\n                        {/*---------------------------------------------------------------------------------------------*/}\r\n                        \r\n                        <Row gutter={[2, 2]}>\r\n                            <Col span={10} offset={2}>\r\n                            {this.state.showOutputCard &&\r\n                                <Card\r\n                                    title={<h3>Output</h3>}\r\n                                    bordered={true}\r\n                                    style={{overflowX: \"scroll\" ,width: \"200%\"}}\r\n                                    onChange={this.handleChange} id=\"answerCard\">\r\n                                    <Table columns={columns} dataSource={dataInTable} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"black\", border:\"2px solid white\"}}></Table>\r\n                                </Card>\r\n                            }\r\n                            </Col>\r\n                        </Row>\r\n                    </body>\r\n                </Layout>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\nexport default Jacobi;"]},"metadata":{},"sourceType":"module"}