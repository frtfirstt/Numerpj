{"ast":null,"code":"import Fraction from 'fraction.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'Fraction';\nvar dependencies = [];\nexport var createFractionClass = /* #__PURE__ */factory(name, dependencies, () => {\n  /**\r\n   * Attach type information\r\n   */\n  Fraction.prototype.type = 'Fraction';\n  Fraction.prototype.isFraction = true;\n  /**\r\n   * Get a JSON representation of a Fraction containing type information\r\n   * @returns {Object} Returns a JSON object structured as:\r\n   *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\r\n   */\n\n  Fraction.prototype.toJSON = function () {\n    return {\n      mathjs: 'Fraction',\n      n: this.s * this.n,\n      d: this.d\n    };\n  };\n  /**\r\n   * Instantiate a Fraction from a JSON object\r\n   * @param {Object} json  a JSON object structured as:\r\n   *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\r\n   * @return {BigNumber}\r\n   */\n\n\n  Fraction.fromJSON = function (json) {\n    return new Fraction(json);\n  };\n\n  return Fraction;\n}, {\n  isClass: true\n});","map":{"version":3,"sources":["C:/Users/big49/Desktop/clone2/Numerpj/node_modules/mathjs/lib/esm/type/fraction/Fraction.js"],"names":["Fraction","factory","name","dependencies","createFractionClass","prototype","type","isFraction","toJSON","mathjs","n","s","d","fromJSON","json","isClass"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,IAAIC,IAAI,GAAG,UAAX;AACA,IAAIC,YAAY,GAAG,EAAnB;AACA,OAAO,IAAIC,mBAAmB,GAAG,eAAeH,OAAO,CAACC,IAAD,EAAOC,YAAP,EAAqB,MAAM;AAChF;AACF;AACA;AACEH,EAAAA,QAAQ,CAACK,SAAT,CAAmBC,IAAnB,GAA0B,UAA1B;AACAN,EAAAA,QAAQ,CAACK,SAAT,CAAmBE,UAAnB,GAAgC,IAAhC;AACA;AACF;AACA;AACA;AACA;;AAEEP,EAAAA,QAAQ,CAACK,SAAT,CAAmBG,MAAnB,GAA4B,YAAY;AACtC,WAAO;AACLC,MAAAA,MAAM,EAAE,UADH;AAELC,MAAAA,CAAC,EAAE,KAAKC,CAAL,GAAS,KAAKD,CAFZ;AAGLE,MAAAA,CAAC,EAAE,KAAKA;AAHH,KAAP;AAKD,GAND;AAOA;AACF;AACA;AACA;AACA;AACA;;;AAGEZ,EAAAA,QAAQ,CAACa,QAAT,GAAoB,UAAUC,IAAV,EAAgB;AAClC,WAAO,IAAId,QAAJ,CAAac,IAAb,CAAP;AACD,GAFD;;AAIA,SAAOd,QAAP;AACD,CAhCsD,EAgCpD;AACDe,EAAAA,OAAO,EAAE;AADR,CAhCoD,CAAhD","sourcesContent":["import Fraction from 'fraction.js';\r\nimport { factory } from '../../utils/factory.js';\r\nvar name = 'Fraction';\r\nvar dependencies = [];\r\nexport var createFractionClass = /* #__PURE__ */factory(name, dependencies, () => {\r\n  /**\r\n   * Attach type information\r\n   */\r\n  Fraction.prototype.type = 'Fraction';\r\n  Fraction.prototype.isFraction = true;\r\n  /**\r\n   * Get a JSON representation of a Fraction containing type information\r\n   * @returns {Object} Returns a JSON object structured as:\r\n   *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\r\n   */\r\n\r\n  Fraction.prototype.toJSON = function () {\r\n    return {\r\n      mathjs: 'Fraction',\r\n      n: this.s * this.n,\r\n      d: this.d\r\n    };\r\n  };\r\n  /**\r\n   * Instantiate a Fraction from a JSON object\r\n   * @param {Object} json  a JSON object structured as:\r\n   *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\r\n   * @return {BigNumber}\r\n   */\r\n\r\n\r\n  Fraction.fromJSON = function (json) {\r\n    return new Fraction(json);\r\n  };\r\n\r\n  return Fraction;\r\n}, {\r\n  isClass: true\r\n});"]},"metadata":{},"sourceType":"module"}