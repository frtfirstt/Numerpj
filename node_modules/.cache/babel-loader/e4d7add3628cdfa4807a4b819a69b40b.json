{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\big49\\\\Desktop\\\\clone2\\\\Numerpj\\\\src\\\\code\\\\Linear\\\\Cholesky.js\";\nimport React, { Component } from 'react';\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd';\nimport { Carousel } from 'antd';\nimport { Layout, Breadcrumb } from 'antd';\nimport { range, compile, lusolve, format, det } from 'mathjs';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content,\n  Footer,\n  Sider\n} = Layout;\nconst InputColor = {\n  background: \"\",\n  color: \"#003a8c\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\",\n  width: 300,\n  height: 50\n};\nvar api;\nvar A = [],\n    B = [],\n    matrixA = [],\n    matrixB = [],\n    output = [],\n    decompose;\n\nclass Cholesky extends Component {\n  constructor() {\n    super();\n    this.state = {\n      row: 0,\n      column: 0,\n      showDimentionForm: true,\n      showDimentionButton: true,\n      showMatrixForm: false,\n      showMatrixButton: false,\n      showOutputCard: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.Lu = this.Lu.bind(this);\n  }\n\n  Lu(n) {\n    this.initMatrix();\n    var x = new Array(n);\n    var y = new Array(n);\n\n    if (matrixA[0][0] === 0) {\n      for (var i = 0; i < n; i++) {\n        var temp = A[0][i];\n        matrixA[0][i] = B[i][i];\n        matrixB[0][i] = temp;\n      }\n    }\n\n    var matrixL = new Array(n);\n\n    for (i = 0; i < n; i++) {\n      matrixL[i] = new Array(n);\n\n      for (var j = 0; j < n; j++) {\n        matrixL[i][j] = 0;\n      }\n\n      x[i] = 0;\n      y[i] = 0;\n    }\n\n    this.setState({\n      showOutputCard: true\n    });\n  }\n\n  printFraction(value) {\n    return format(value, {\n      fraction: 'ratio'\n    });\n  }\n\n  createMatrix(row, column) {\n    for (var i = 1; i <= row; i++) {\n      for (var j = 1; j <= column; j++) {\n        matrixA.push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"black\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"a\" + i + \"\" + j,\n          placeholder: \"a\" + i + \"\" + j\n        }, \"a\" + i + \"\" + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 30\n        }, this));\n      }\n\n      matrixA.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 26\n      }, this));\n      matrixB.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"18%\",\n          height: \"50%\",\n          marginInlineEnd: \"5%\",\n          marginBlockEnd: \"5%\",\n          color: \"black\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"b\" + i,\n        placeholder: \"b\" + i\n      }, \"b\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 26\n      }, this));\n    }\n\n    this.setState({\n      showDimentionForm: false,\n      showDimentionButton: false,\n      showMatrixForm: true,\n      showMatrixButton: true\n    });\n  }\n\n  initMatrix() {\n    for (var i = 0; i < this.state.row; i++) {\n      A[i] = [];\n\n      for (var j = 0; j < this.state.column; j++) {\n        A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n      }\n\n      B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n    }\n  }\n\n  async dataapi() {\n    await axios({\n      method: \"get\",\n      url: \"http://localhost:5000/database/gauss\"\n    }).then(response => {\n      console.log(\"response: \", response.data);\n      api = response.data;\n    });\n    await this.setState({\n      row: api.row,\n      column: api.row\n    });\n    matrixA = [];\n    matrixB = [];\n    await this.createMatrix(api.row, api.row);\n\n    for (let i = 1; i <= api.row; i++) {\n      for (let j = 1; j <= api.row; j++) {\n        document.getElementById(\"a\" + i + \"\" + j).value = api.A[i - 1][j - 1];\n      }\n\n      document.getElementById(\"b\" + i).value = api.B[i - 1];\n    }\n\n    this.Lu(api.row);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"body\", {\n          style: {\n            background: \"#ebe18d\",\n            padding: \"90px\",\n            float: \"left\"\n          },\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            gutter: [40, 40],\n            bordered: true,\n            onChange: this.handleChange,\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 10,\n              offset: 7,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"row\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  name: \"column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this), this.state.showDimentionButton && /*#__PURE__*/_jsxDEV(Button, {\n                id: \"dimention_button\",\n                onClick: () => this.createMatrix(this.state.row, this.state.column),\n                style: {\n                  width: 100,\n                  height: 50,\n                  background: \"#003a8c\",\n                  color: \"white\",\n                  fontSize: \"25px\"\n                },\n                children: [\"Submit\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                id: \"submit_button\",\n                onClick: () => this.dataapi(),\n                style: {\n                  width: 100,\n                  height: 50,\n                  background: \"#003a8c\",\n                  color: \"white\",\n                  fontSize: \"25px\"\n                },\n                children: \"API\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), this.state.showMatrixButton && /*#__PURE__*/_jsxDEV(Button, {\n                id: \"matrix_button\",\n                onClick: () => this.Lu(this.state.row),\n                style: {\n                  width: 100,\n                  height: 50,\n                  background: \"#003a8c\",\n                  color: \"white\",\n                  fontSize: \"25px\"\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [40, 40],\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              offset: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Matrix\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 44\n                }, this),\n                children: this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: matrixA\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Vector\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 44\n                }, this),\n                children: this.state.showMatrixForm && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: matrixB\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [2, 2],\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 10,\n              offset: 7,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Outpot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 44\n                }, this),\n                bordered: true,\n                onChange: this.handleChange,\n                id: \"answerCard\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"24px\",\n                    fontWeight: \"bold\"\n                  },\n                  children: output\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Cholesky;","map":{"version":3,"sources":["C:/Users/big49/Desktop/clone2/Numerpj/src/code/Linear/Cholesky.js"],"names":["React","Component","Menu","Input","Row","Col","Button","Card","Table","Carousel","Layout","Breadcrumb","range","compile","lusolve","format","det","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Legend","BrowserRouter","Router","Route","Link","axios","Header","Content","Footer","Sider","InputColor","background","color","fontWeight","fontSize","width","height","api","A","B","matrixA","matrixB","output","decompose","Cholesky","constructor","state","row","column","showDimentionForm","showDimentionButton","showMatrixForm","showMatrixButton","showOutputCard","handleChange","bind","Lu","n","initMatrix","x","Array","y","i","temp","matrixL","j","setState","printFraction","value","fraction","createMatrix","push","marginInlineEnd","marginBlockEnd","parseFloat","document","getElementById","dataapi","method","url","then","response","console","log","data","event","target","name","render","padding","float"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,MAAhC,EAAwCC,IAAxC,EAA8CC,KAA9C,QAA2D,MAA3D;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,MAAnC;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,GAA1C,QAAoD,QAApD;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,aAA1B,EAAyCC,KAAzC,EAAgDC,KAAhD,EAAuDC,OAAvD,EAAgEC,MAAhE,QAA8E,UAA9E;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA;AAA3B,IAAqCtB,MAA3C;AACA,MAAMuB,UAAU,GAAG;AACfC,EAAAA,UAAU,EAAE,EADG;AAEfC,EAAAA,KAAK,EAAE,SAFQ;AAGfC,EAAAA,UAAU,EAAE,MAHG;AAIfC,EAAAA,QAAQ,EAAE,MAJK;AAKfC,EAAAA,KAAK,EAAE,GALQ;AAMfC,EAAAA,MAAM,EAAC;AANQ,CAAnB;AAUA,IAAIC,GAAJ;AACA,IAAIC,CAAC,GAAG,EAAR;AAAA,IAAYC,CAAC,GAAG,EAAhB;AAAA,IAAoBC,OAAO,GAAG,EAA9B;AAAA,IAAkCC,OAAO,GAAG,EAA5C;AAAA,IAAgDC,MAAM,GAAG,EAAzD;AAAA,IAA6DC,SAA7D;;AACA,MAAMC,QAAN,SAAuB9C,SAAvB,CAAiC;AAC7B+C,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,CADI;AAETC,MAAAA,MAAM,EAAE,CAFC;AAGTC,MAAAA,iBAAiB,EAAG,IAHX;AAITC,MAAAA,mBAAmB,EAAE,IAJZ;AAKTC,MAAAA,cAAc,EAAE,KALP;AAMTC,MAAAA,gBAAgB,EAAE,KANT;AAOTC,MAAAA,cAAc,EAAE;AAPP,KAAb;AASA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,EAAL,GAAU,KAAKA,EAAL,CAAQD,IAAR,CAAa,IAAb,CAAV;AAEH;;AAEDC,EAAAA,EAAE,CAACC,CAAD,EAAI;AACF,SAAKC,UAAL;AACA,QAAKC,CAAC,GAAI,IAAIC,KAAJ,CAAUH,CAAV,CAAV;AACA,QAAKI,CAAC,GAAI,IAAID,KAAJ,CAAUH,CAAV,CAAV;;AAEA,QAAIjB,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,MAAkB,CAAtB,EAAyB;AACrB,WAAK,IAAIsB,CAAC,GAAC,CAAX,EAAeA,CAAC,GAACL,CAAjB,EAAqBK,CAAC,EAAtB,EAA0B;AACtB,YAAIC,IAAI,GAAGzB,CAAC,CAAC,CAAD,CAAD,CAAKwB,CAAL,CAAX;AACAtB,QAAAA,OAAO,CAAC,CAAD,CAAP,CAAWsB,CAAX,IAAgBvB,CAAC,CAACuB,CAAD,CAAD,CAAKA,CAAL,CAAhB;AACArB,QAAAA,OAAO,CAAC,CAAD,CAAP,CAAWqB,CAAX,IAAgBC,IAAhB;AACH;AACJ;;AACD,QAAIC,OAAO,GAAG,IAAIJ,KAAJ,CAAUH,CAAV,CAAd;;AACA,SAAIK,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACL,CAAV,EAAYK,CAAC,EAAb,EAAgB;AACZE,MAAAA,OAAO,CAACF,CAAD,CAAP,GAAc,IAAIF,KAAJ,CAAUH,CAAV,CAAd;;AACA,WAAI,IAAIQ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACR,CAAd,EAAgBQ,CAAC,EAAjB,EAAoB;AAChBD,QAAAA,OAAO,CAACF,CAAD,CAAP,CAAWG,CAAX,IAAgB,CAAhB;AACH;;AACDN,MAAAA,CAAC,CAACG,CAAD,CAAD,GAAO,CAAP;AACAD,MAAAA,CAAC,CAACC,CAAD,CAAD,GAAO,CAAP;AACH;;AACD,SAAKI,QAAL,CAAc;AACVb,MAAAA,cAAc,EAAE;AADN,KAAd;AAGH;;AAEDc,EAAAA,aAAa,CAAEC,KAAF,EAAS;AAClB,WAAOxD,MAAM,CAACwD,KAAD,EAAQ;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAR,CAAb;AACH;;AAEDC,EAAAA,YAAY,CAACvB,GAAD,EAAMC,MAAN,EAAc;AACtB,SAAK,IAAIc,CAAC,GAAC,CAAX,EAAeA,CAAC,IAAEf,GAAlB,EAAwBe,CAAC,EAAzB,EAA6B;AACzB,WAAK,IAAIG,CAAC,GAAC,CAAX,EAAeA,CAAC,IAAEjB,MAAlB,EAA2BiB,CAAC,EAA5B,EAAgC;AAC5BzB,QAAAA,OAAO,CAAC+B,IAAR,eAAa,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AACvBpC,YAAAA,KAAK,EAAE,KADgB;AAEvBC,YAAAA,MAAM,EAAE,KAFe;AAGvBoC,YAAAA,eAAe,EAAE,IAHM;AAIvBC,YAAAA,cAAc,EAAE,IAJO;AAKvBzC,YAAAA,KAAK,EAAE,OALgB;AAMvBE,YAAAA,QAAQ,EAAE,MANa;AAOvBD,YAAAA,UAAU,EAAE;AAPW,WAAd;AASb,UAAA,EAAE,EAAE,MAAI6B,CAAJ,GAAM,EAAN,GAASG,CATA;AASoB,UAAA,WAAW,EAAE,MAAIH,CAAJ,GAAM,EAAN,GAASG;AAT1C,WASQ,MAAIH,CAAJ,GAAM,EAAN,GAASG,CATjB;AAAA;AAAA;AAAA;AAAA,gBAAb;AAUH;;AACDzB,MAAAA,OAAO,CAAC+B,IAAR,eAAa;AAAA;AAAA;AAAA;AAAA,cAAb;AACA9B,MAAAA,OAAO,CAAC8B,IAAR,eAAa,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AACvBpC,UAAAA,KAAK,EAAE,KADgB;AAEvBC,UAAAA,MAAM,EAAE,KAFe;AAGvBoC,UAAAA,eAAe,EAAE,IAHM;AAIvBC,UAAAA,cAAc,EAAE,IAJO;AAKvBzC,UAAAA,KAAK,EAAE,OALgB;AAMvBE,UAAAA,QAAQ,EAAE,MANa;AAOvBD,UAAAA,UAAU,EAAE;AAPW,SAAd;AASb,QAAA,EAAE,EAAE,MAAI6B,CATK;AASU,QAAA,WAAW,EAAE,MAAIA;AAT3B,SASG,MAAIA,CATP;AAAA;AAAA;AAAA;AAAA,cAAb;AAYH;;AAED,SAAKI,QAAL,CAAc;AACVjB,MAAAA,iBAAiB,EAAE,KADT;AAEVC,MAAAA,mBAAmB,EAAE,KAFX;AAGVC,MAAAA,cAAc,EAAE,IAHN;AAIVC,MAAAA,gBAAgB,EAAE;AAJR,KAAd;AAQH;;AACDM,EAAAA,UAAU,GAAG;AACT,SAAI,IAAII,CAAC,GAAC,CAAV,EAAcA,CAAC,GAAC,KAAKhB,KAAL,CAAWC,GAA3B,EAAiCe,CAAC,EAAlC,EAAsC;AAClCxB,MAAAA,CAAC,CAACwB,CAAD,CAAD,GAAO,EAAP;;AACA,WAAI,IAAIG,CAAC,GAAC,CAAV,EAAcA,CAAC,GAAC,KAAKnB,KAAL,CAAWE,MAA3B,EAAoCiB,CAAC,EAArC,EAAyC;AACrC3B,QAAAA,CAAC,CAACwB,CAAD,CAAD,CAAKG,CAAL,IAAWS,UAAU,CAACC,QAAQ,CAACC,cAAT,CAAwB,OAAKd,CAAC,GAAC,CAAP,IAAU,EAAV,IAAcG,CAAC,GAAC,CAAhB,CAAxB,EAA4CG,KAA7C,CAArB;AACH;;AACD7B,MAAAA,CAAC,CAACgC,IAAF,CAAOG,UAAU,CAACC,QAAQ,CAACC,cAAT,CAAwB,OAAKd,CAAC,GAAC,CAAP,CAAxB,EAAmCM,KAApC,CAAjB;AACH;AACJ;;AAEY,QAAPS,OAAO,GAAG;AACZ,UAAMpD,KAAK,CAAC;AAACqD,MAAAA,MAAM,EAAE,KAAT;AAAeC,MAAAA,GAAG,EAAE;AAApB,KAAD,CAAL,CAAoEC,IAApE,CAA0EC,QAAD,IAAc;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAAQ,CAACG,IAAnC;AAAyC/C,MAAAA,GAAG,GAAG4C,QAAQ,CAACG,IAAf;AAAqB,KAAtJ,CAAN;AACA,UAAM,KAAKlB,QAAL,CAAc;AAChBnB,MAAAA,GAAG,EAAEV,GAAG,CAACU,GADO;AAEhBC,MAAAA,MAAM,EAAEX,GAAG,CAACU;AAFI,KAAd,CAAN;AAIEP,IAAAA,OAAO,GAAG,EAAV;AACAC,IAAAA,OAAO,GAAG,EAAV;AACA,UAAM,KAAK6B,YAAL,CAAkBjC,GAAG,CAACU,GAAtB,EAA2BV,GAAG,CAACU,GAA/B,CAAN;;AACA,SAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIzB,GAAG,CAACU,GAAzB,EAA8Be,CAAC,EAA/B,EAAmC;AACjC,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI5B,GAAG,CAACU,GAAzB,EAA8BkB,CAAC,EAA/B,EAAmC;AACjCU,QAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAMd,CAAN,GAAU,EAAV,GAAeG,CAAvC,EAA0CG,KAA1C,GACE/B,GAAG,CAACC,CAAJ,CAAMwB,CAAC,GAAG,CAAV,EAAaG,CAAC,GAAG,CAAjB,CADF;AAED;;AACDU,MAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAMd,CAA9B,EAAiCM,KAAjC,GAAyC/B,GAAG,CAACE,CAAJ,CAAMuB,CAAC,GAAG,CAAV,CAAzC;AACD;;AACD,SAAKN,EAAL,CAAQnB,GAAG,CAACU,GAAZ;AACL;;AAEDO,EAAAA,YAAY,CAAC+B,KAAD,EAAQ;AAChB,SAAKnB,QAAL,CAAc;AACV,OAACmB,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAalB;AADxB,KAAd;AAGH;;AAEDoB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,MAAD;AAAA,6BACI,QAAC,MAAD;AAAA,+BACA;AACQ,UAAA,KAAK,EAAE;AAAEzD,YAAAA,UAAU,EAAE,SAAd;AAAyB0D,YAAAA,OAAO,EAAE,MAAlC;AAA2CC,YAAAA,KAAK,EAAC;AAAjD,WADf;AAEQ,UAAA,QAAQ,EAAE,KAAKpC,YAFvB;AAAA,kCAKQ,QAAC,GAAD;AAAK,YAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AACI,YAAA,QAAQ,EAAE,IADd;AAEI,YAAA,QAAQ,EAAE,KAAKA,YAFnB;AAAA,mCAII,QAAC,GAAD;AAAK,cAAA,IAAI,EAAE,EAAX;AAAe,cAAA,MAAM,EAAE,CAAvB;AAAA,sCAEI;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eACgB,QAAC,KAAD;AAAO,kBAAA,IAAI,EAAC,OAAZ;AAAoB,kBAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,wBADhB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAEmB,QAAC,KAAD;AAAO,kBAAA,IAAI,EAAC,OAAZ;AAAoB,kBAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,wBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAMI;AAAA;AAAA;AAAA;AAAA,sBANJ,EAOK,KAAKR,KAAL,CAAWI,mBAAX,iBACG,QAAC,MAAD;AAAQ,gBAAA,EAAE,EAAC,kBAAX;AAA8B,gBAAA,OAAO,EACjC,MAAI,KAAKoB,YAAL,CAAkB,KAAKxB,KAAL,CAAWC,GAA7B,EAAkC,KAAKD,KAAL,CAAWE,MAA7C,CADR;AAEE,gBAAA,KAAK,EAAE;AAACb,kBAAAA,KAAK,EAAE,GAAR;AAAcC,kBAAAA,MAAM,EAAC,EAArB;AAAwBL,kBAAAA,UAAU,EAAE,SAApC;AAA+CC,kBAAAA,KAAK,EAAE,OAAtD;AAA+DE,kBAAAA,QAAQ,EAAE;AAAzE,iBAFT;AAAA,kDAIU;AAAA;AAAA;AAAA;AAAA,wBAJV;AAAA;AAAA;AAAA;AAAA;AAAA,sBARR,eAeI,QAAC,MAAD;AAAQ,gBAAA,EAAE,EAAC,eAAX;AAA2B,gBAAA,OAAO,EAElC,MAAI,KAAK2C,OAAL,EAFJ;AAIC,gBAAA,KAAK,EAAE;AAAC1C,kBAAAA,KAAK,EAAE,GAAR;AAAcC,kBAAAA,MAAM,EAAC,EAArB;AAAwBL,kBAAAA,UAAU,EAAE,SAApC;AAA+CC,kBAAAA,KAAK,EAAE,OAAtD;AAA+DE,kBAAAA,QAAQ,EAAE;AAAzE,iBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfJ,EAqBK,KAAKY,KAAL,CAAWM,gBAAX,iBACG,QAAC,MAAD;AACI,gBAAA,EAAE,EAAC,eADP;AAEI,gBAAA,OAAO,EAAE,MAAI,KAAKI,EAAL,CAAQ,KAAKV,KAAL,CAAWC,GAAnB,CAFjB;AAE0C,gBAAA,KAAK,EAAE;AAACZ,kBAAAA,KAAK,EAAE,GAAR;AAAcC,kBAAAA,MAAM,EAAC,EAArB;AAAwBL,kBAAAA,UAAU,EAAE,SAApC;AAA+CC,kBAAAA,KAAK,EAAE,OAAtD;AAA+DE,kBAAAA,QAAQ,EAAE;AAAzE,iBAFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBALR,eAuCQ;AAAA;AAAA;AAAA;AAAA,kBAvCR,eAwCQ,QAAC,GAAD;AAAK,YAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA,oCACI,QAAC,GAAD;AAAK,cAAA,IAAI,EAAE,CAAX;AAAc,cAAA,MAAM,EAAE,CAAtB;AAAA,qCACI,QAAC,IAAD;AACI,gBAAA,KAAK,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADX;AAAA,0BAGK,KAAKY,KAAL,CAAWK,cAAX,iBAA6B;AAAA,4BAAMX;AAAN;AAAA;AAAA;AAAA;AAAA;AAHlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,GAAD;AAAK,cAAA,IAAI,EAAE,CAAX;AAAA,qCACI,QAAC,IAAD;AACI,gBAAA,KAAK,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADX;AAAA,0BAGK,KAAKM,KAAL,CAAWK,cAAX,iBAA6B;AAAA,4BAAMV;AAAN;AAAA;AAAA;AAAA;AAAA;AAHlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxCR,eAwDQ;AAAA;AAAA;AAAA;AAAA,kBAxDR,eA0DQ,QAAC,GAAD;AAAK,YAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAb;AAAA,mCACI,QAAC,GAAD;AAAK,cAAA,IAAI,EAAE,EAAX;AAAe,cAAA,MAAM,EAAE,CAAvB;AAAA,qCACI,QAAC,IAAD;AACI,gBAAA,KAAK,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADX;AAEI,gBAAA,QAAQ,EAAE,IAFd;AAGI,gBAAA,QAAQ,EAAE,KAAKa,YAHnB;AAGiC,gBAAA,EAAE,EAAC,YAHpC;AAAA,uCAII;AAAG,kBAAA,KAAK,EAAE;AAACpB,oBAAAA,QAAQ,EAAE,MAAX;AAAmBD,oBAAAA,UAAU,EAAE;AAA/B,mBAAV;AAAA,4BAAmDS;AAAnD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA1DR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA2EH;;AApM4B;;AAsMjC,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Menu, Input, Row, Col, Button, Card, Table } from 'antd';\r\nimport { Carousel } from 'antd';\r\nimport { Layout, Breadcrumb } from 'antd';\r\nimport { range, compile, lusolve, format ,det} from 'mathjs';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst InputColor = {\r\n    background: \"\",\r\n    color: \"#003a8c\", \r\n    fontWeight: \"bold\", \r\n    fontSize: \"24px\",\r\n    width: 300 ,\r\n    height:50\r\n    \r\n\r\n};\r\nvar api\r\nvar A = [], B = [], matrixA = [], matrixB = [], output = [], decompose;\r\nclass Cholesky extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm : true,\r\n            showDimentionButton: true,\r\n            showMatrixForm: false,\r\n            showMatrixButton: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.Lu = this.Lu.bind(this);\r\n    \r\n    }\r\n\r\n    Lu(n) {\r\n        this.initMatrix();\r\n        var  x  = new Array(n);\r\n        var  y  = new Array(n)\r\n\r\n        if (matrixA[0][0] === 0) {\r\n            for (var i=0 ; i<n ; i++) {\r\n                var temp = A[0][i];\r\n                matrixA[0][i] = B[i][i];\r\n                matrixB[0][i] = temp;\r\n            }\r\n        }\r\n        var matrixL = new Array(n);\r\n        for(i=0;i<n;i++){\r\n            matrixL[i]  = new Array(n); \r\n            for(var j=0;j<n;j++){\r\n                matrixL[i][j] = 0;\r\n            }\r\n            x[i] = 0;\r\n            y[i] = 0;\r\n        }\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n    }\r\n    \r\n    printFraction (value) {\r\n        return format(value, { fraction: 'ratio' })\r\n    }\r\n\r\n    createMatrix(row, column) {\r\n        for (var i=1 ; i<=row ; i++) {\r\n            for (var j=1 ; j<=column ; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\", \r\n                    marginInlineEnd: \"5%\", \r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"black\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }} \r\n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \r\n            }\r\n            matrixA.push(<br/>)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"black\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\r\n                \r\n            \r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showDimentionButton: false,\r\n            showMatrixForm: true,\r\n            showMatrixButton: true\r\n        })\r\n        \r\n\r\n    }\r\n    initMatrix() {\r\n        for(var i=0 ; i<this.state.row ; i++) {\r\n            A[i] = []\r\n            for(var j=0 ; j<this.state.column ; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\r\n        }\r\n    }\r\n\r\n    async dataapi() {\r\n        await axios({method: \"get\",url: \"http://localhost:5000/database/gauss\",}).then((response) => {console.log(\"response: \", response.data);api = response.data;});\r\n        await this.setState({\r\n            row: api.row,\r\n            column: api.row,\r\n          });\r\n          matrixA = [];\r\n          matrixB = [];\r\n          await this.createMatrix(api.row, api.row);\r\n          for (let i = 1; i <= api.row; i++) {\r\n            for (let j = 1; j <= api.row; j++) {\r\n              document.getElementById(\"a\" + i + \"\" + j).value =\r\n                api.A[i - 1][j - 1];\r\n            }\r\n            document.getElementById(\"b\" + i).value = api.B[i - 1];\r\n          }\r\n          this.Lu(api.row);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Layout>\r\n                <body\r\n                        style={{ background: \"#ebe18d\", padding: \"90px\" , float:\"left\" }}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        {/*-----------------------------------------ปุ่มINPUTสมการ----------------------------------------------------*/}\r\n                        <Row gutter={[40, 40]}\r\n                            bordered={true}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            <Col span={10} offset={7}>\r\n\r\n                                <div>\r\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" ></Input>\r\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" ></Input>\r\n                                </div>\r\n                                <br></br>\r\n                                {this.state.showDimentionButton &&\r\n                                    <Button id=\"dimention_button\" onClick={\r\n                                        ()=>this.createMatrix(this.state.row, this.state.column)\r\n                                    } style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}\r\n                                    >\r\n                                        Submit<br></br>\r\n                                    </Button>\r\n                                }\r\n                                <Button id=\"submit_button\" onClick= {\r\n                                \r\n                                ()=>this.dataapi()\r\n                                 }  \r\n                                 style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}>API</Button>\r\n\r\n                                {this.state.showMatrixButton &&\r\n                                    <Button\r\n                                        id=\"matrix_button\"\r\n                                        onClick={()=>this.Lu(this.state.row)} style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}>\r\n                                        Submit\r\n                                    </Button>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                        <br></br>\r\n                        <Row gutter={[40, 40]}>\r\n                            <Col span={8} offset={4}>\r\n                                <Card\r\n                                    title={<h3>Matrix</h3>}\r\n                                >\r\n                                    {this.state.showMatrixForm && <div>{matrixA}</div>}\r\n                                </Card>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Card\r\n                                    title={<h3>Vector</h3>}\r\n                                >\r\n                                    {this.state.showMatrixForm && <div>{matrixB}</div>}\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <br></br>\r\n                        {/*---------------------------------------------------------------------------------------------*/}\r\n                        <Row gutter={[2, 2]}>\r\n                            <Col span={10} offset={7}>\r\n                                <Card\r\n                                    title={<h3>Outpot</h3>}\r\n                                    bordered={true}\r\n                                    onChange={this.handleChange} id=\"answerCard\">\r\n                                    <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{output}</p>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </body>\r\n                </Layout>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\nexport default Cholesky;"]},"metadata":{},"sourceType":"module"}