{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\big49\\\\Desktop\\\\clone2\\\\Numerpj\\\\src\\\\code\\\\Root of equation\\\\Newtonraphson.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table } from 'antd';\nimport { LineChart, Line, XAxis, CartesianGrid, Tooltip, Legend, YAxis } from 'recharts';\nimport 'antd/dist/antd.css';\nimport { compile, derivative } from 'mathjs';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar api;\nconst InputColor = {\n  background: \"\",\n  color: \"#003a8c\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\",\n  width: 300,\n  height: 50\n};\nvar schedule = [];\nconst table = [{\n  title: \"Iteration\",\n  dataIndex: \"iteration\",\n  key: \"iteration\"\n}, {\n  title: \"X\",\n  dataIndex: \"x\",\n  key: \"x\"\n}, {\n  title: \"Error\",\n  dataIndex: \"error\",\n  key: \"error\"\n}];\n\nclass Newton extends Component {\n  constructor() {\n    super();\n\n    this.funcDiff = X => {\n      var expr = derivative(this.state.fx, 'x');\n      let scope = {\n        x: parseFloat(X)\n      };\n      return expr.evaluate(scope);\n    };\n\n    this.state = {\n      x0: 0,\n      fx: \"\",\n      showtable: false,\n      showgraph: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.newton_raphson = this.newton_raphson.bind(this);\n  }\n\n  newton_raphson(xold) {\n    var xnew = 0;\n    var n = 0;\n    var Epsilon = parseFloat(0.000000);\n    var array2d = [];\n    array2d[0] = []; //x\n\n    array2d[1] = []; //error\n\n    do {\n      xnew = xold - this.func(xold) / this.funcDiff(xold);\n      Epsilon = Math.abs((xnew - xold) / xnew);\n      array2d[0][n] = xnew.toFixed(6);\n      array2d[1][n] = Math.abs(Epsilon).toFixed(6);\n      n++;\n      xold = xnew;\n    } while (Math.abs(Epsilon) > 0.000001);\n\n    for (var i = 0; i < array2d[0].length; i++) {\n      schedule.push({\n        iteration: i + 1,\n        x: array2d[0][i],\n        error: array2d[1][i]\n      });\n    }\n\n    this.setState({\n      showtable: true,\n      showgraph: true\n    });\n  }\n\n  func(datastr) {\n    var comfunc = compile(this.state.fx);\n    let data = {\n      x: parseFloat(datastr)\n    };\n    return comfunc.evaluate(data);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async dataapi() {\n    await axios({\n      method: \"get\",\n      url: \"http://localhost:5000/database/newtonraphson\"\n    }).then(response => {\n      console.log(\"response: \", response.data);\n      api = response.data;\n    });\n    await this.setState({\n      fx: api.fx,\n      x0: api.x0\n    });\n    this.newton_raphson(this.state.x0);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      style: {\n        background: \"#ebe18d\",\n        padding: \"90px\",\n        float: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"#003a8c\",\n          fontWeight: \"bold\",\n          fontSize: \"35px\",\n          textAlign: \"center\"\n        },\n        children: \"Newton Paphson\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          bordered: true,\n          style: {\n            width: 1500,\n            height: 600,\n            background: \"#ebe18d\",\n            color: \"#FFFFFFFF\",\n            float: \"Auto\"\n          },\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"f(x)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            size: \"large\",\n            name: \"fx\",\n            value: this.state.fx,\n            style: InputColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 116\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 121\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 126\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 131\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            size: \"large\",\n            name: \"x0\",\n            value: this.state.x0,\n            style: InputColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 125\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 130\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 135\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 140\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"submit_button\",\n            onClick: () => this.newton_raphson(parseFloat(this.state.x0)),\n            style: {\n              width: 100,\n              height: 50,\n              background: \"#003a8c\",\n              color: \"white\",\n              fontSize: \"25px\"\n            },\n            children: \"GO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n            id: \"submit_button\",\n            onClick: () => this.dataapi(),\n            style: {\n              width: 100,\n              height: 50,\n              background: \"#003a8c\",\n              color: \"white\",\n              fontSize: \"25px\"\n            },\n            children: \"API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), this.state.showtable && /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Output\",\n          bordered: true,\n          style: {\n            width: \"100%\",\n            background: \"#2196f3\",\n            color: \"#FFFFFFFF\",\n            float: \"inline-start\",\n            marginBlockStart: \"2%\"\n          },\n          id: \"outputCard\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            columns: table,\n            bordered: true,\n            dataSource: schedule,\n            bodyStyle: {\n              fontWeight: \"bold\",\n              fontSize: \"18px\",\n              color: \"black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), this.state.showgraph && /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 730,\n          height: 250,\n          data: schedule,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            verticalAlign: \"top\",\n            height: 36\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            name: \"error\",\n            type: \"monotone\",\n            dataKey: \"error\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Newton;","map":{"version":3,"sources":["C:/Users/big49/Desktop/clone2/Numerpj/src/code/Root of equation/Newtonraphson.js"],"names":["React","Component","Card","Input","Button","Table","LineChart","Line","XAxis","CartesianGrid","Tooltip","Legend","YAxis","compile","derivative","axios","api","InputColor","background","color","fontWeight","fontSize","width","height","schedule","table","title","dataIndex","key","Newton","constructor","funcDiff","X","expr","state","fx","scope","x","parseFloat","evaluate","x0","showtable","showgraph","handleChange","bind","newton_raphson","xold","xnew","n","Epsilon","array2d","func","Math","abs","toFixed","i","length","push","iteration","error","setState","datastr","comfunc","data","event","target","name","value","dataapi","method","url","then","response","console","log","render","padding","float","textAlign","marginBlockStart","top","right","left","bottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,EAA6BC,KAA7B,QAAyC,MAAzC;AAEA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAgCC,aAAhC,EAA8CC,OAA9C,EAAsDC,MAAtD,EAA6DC,KAA7D,QAAyE,UAAzE;AACA,OAAO,oBAAP;AACA,SAAUC,OAAV,EAAmBC,UAAnB,QAAoC,QAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAIC,GAAJ;AACA,MAAMC,UAAU,GAAG;AACfC,EAAAA,UAAU,EAAE,EADG;AAEfC,EAAAA,KAAK,EAAE,SAFQ;AAGfC,EAAAA,UAAU,EAAE,MAHG;AAIfC,EAAAA,QAAQ,EAAE,MAJK;AAKfC,EAAAA,KAAK,EAAE,GALQ;AAMfC,EAAAA,MAAM,EAAC;AANQ,CAAnB;AAUA,IAAIC,QAAQ,GAAC,EAAb;AACA,MAAMC,KAAK,GAAG,CACV;AACEC,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,SAAS,EAAE,WAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CADU,EAMV;AACIF,EAAAA,KAAK,EAAE,GADX;AAEIC,EAAAA,SAAS,EAAE,GAFf;AAGIC,EAAAA,GAAG,EAAE;AAHT,CANU,EAWV;AACIF,EAAAA,KAAK,EAAE,OADX;AAEIC,EAAAA,SAAS,EAAE,OAFf;AAGIC,EAAAA,GAAG,EAAE;AAHT,CAXU,CAAd;;AAkBA,MAAMC,MAAN,SAAqB5B,SAArB,CAA+B;AAE3B6B,EAAAA,WAAW,GAAG;AACV;;AADU,SA4DdC,QA5Dc,GA4DFC,CAAD,IAAO;AACd,UAAIC,IAAI,GAAGnB,UAAU,CAAC,KAAKoB,KAAL,CAAWC,EAAZ,EAAgB,GAAhB,CAArB;AACA,UAAIC,KAAK,GAAG;AAACC,QAAAA,CAAC,EAACC,UAAU,CAACN,CAAD;AAAb,OAAZ;AACA,aAAOC,IAAI,CAACM,QAAL,CAAcH,KAAd,CAAP;AACH,KAhEa;;AAEV,SAAKF,KAAL,GAAa;AAETM,MAAAA,EAAE,EAAE,CAFK;AAGTL,MAAAA,EAAE,EAAE,EAHK;AAITM,MAAAA,SAAS,EAAE,KAJF;AAKTC,MAAAA,SAAS,EAAE;AALF,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AAGH;;AAEDC,EAAAA,cAAc,CAACC,IAAD,EAAO;AAEjB,QAAIC,IAAI,GAAG,CAAX;AACA,QAAIC,CAAC,GAAC,CAAN;AACA,QAAIC,OAAO,GAAEX,UAAU,CAAC,QAAD,CAAvB;AACA,QAAIY,OAAO,GAAI,EAAf;AAEAA,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,EAAb,CAPiB,CAOF;;AACfA,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,EAAb,CARiB,CAQF;;AACf,OAAE;AACEH,MAAAA,IAAI,GAAGD,IAAI,GAAI,KAAKK,IAAL,CAAUL,IAAV,IAAgB,KAAKf,QAAL,CAAce,IAAd,CAA/B;AACAG,MAAAA,OAAO,GAAGG,IAAI,CAACC,GAAL,CAAS,CAACN,IAAI,GAACD,IAAN,IAAcC,IAAvB,CAAV;AACAG,MAAAA,OAAO,CAAC,CAAD,CAAP,CAAWF,CAAX,IAAiBD,IAAI,CAACO,OAAL,CAAa,CAAb,CAAjB;AACAJ,MAAAA,OAAO,CAAC,CAAD,CAAP,CAAWF,CAAX,IAAgBI,IAAI,CAACC,GAAL,CAASJ,OAAT,EAAkBK,OAAlB,CAA0B,CAA1B,CAAhB;AACAN,MAAAA,CAAC;AACDF,MAAAA,IAAI,GAAGC,IAAP;AAEH,KARD,QAQOK,IAAI,CAACC,GAAL,CAASJ,OAAT,IAAkB,QARzB;;AAWA,SAAK,IAAIM,CAAC,GAAC,CAAX,EAAeA,CAAC,GAACL,OAAO,CAAC,CAAD,CAAP,CAAWM,MAA5B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC/B,MAAAA,QAAQ,CAACiC,IAAT,CAAc;AACVC,QAAAA,SAAS,EAAEH,CAAC,GAAC,CADH;AAEVlB,QAAAA,CAAC,EAAEa,OAAO,CAAC,CAAD,CAAP,CAAWK,CAAX,CAFO;AAGVI,QAAAA,KAAK,EAAET,OAAO,CAAC,CAAD,CAAP,CAAWK,CAAX;AAHG,OAAd;AAKH;;AAED,SAAKK,QAAL,CAAc;AACVnB,MAAAA,SAAS,EAAE,IADD;AAEVC,MAAAA,SAAS,EAAE;AAFD,KAAd;AAMH;;AACDS,EAAAA,IAAI,CAACU,OAAD,EAAU;AAEV,QAAIC,OAAO,GAAGjD,OAAO,CAAC,KAAKqB,KAAL,CAAWC,EAAZ,CAArB;AACA,QAAI4B,IAAI,GAAG;AAAC1B,MAAAA,CAAC,EAACC,UAAU,CAACuB,OAAD;AAAb,KAAX;AAEA,WAAOC,OAAO,CAACvB,QAAR,CAAiBwB,IAAjB,CAAP;AACH;;AASDpB,EAAAA,YAAY,CAACqB,KAAD,EAAQ;AAChB,SAAKJ,QAAL,CAAc;AACV,OAACI,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AADxB,KAAd;AAGH;;AACY,QAAPC,OAAO,GAAG;AACZ,UAAMrD,KAAK,CAAC;AAACsD,MAAAA,MAAM,EAAE,KAAT;AAAeC,MAAAA,GAAG,EAAE;AAApB,KAAD,CAAL,CAA4EC,IAA5E,CAAkFC,QAAD,IAAc;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAAQ,CAACT,IAAnC;AAAyC/C,MAAAA,GAAG,GAAGwD,QAAQ,CAACT,IAAf;AAAqB,KAA9J,CAAN;AACA,UAAM,KAAKH,QAAL,CAAc;AAChBzB,MAAAA,EAAE,EAACnB,GAAG,CAACmB,EADS;AAElBK,MAAAA,EAAE,EAACxB,GAAG,CAACwB;AAFW,KAAd,CAAN;AAKA,SAAKK,cAAL,CAAoB,KAAKX,KAAL,CAAWM,EAA/B;AACD;;AACHmC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,KAAK,EAAE;AAAEzD,QAAAA,UAAU,EAAE,SAAd;AAAyB0D,QAAAA,OAAO,EAAE,MAAlC;AAA2CC,QAAAA,KAAK,EAAC;AAAjD,OAAb;AAAA,8BACI;AAAI,QAAA,KAAK,EAAE;AAAC1D,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,UAAU,EAAE,MAA/B;AAAsCC,UAAAA,QAAQ,EAAE,MAAhD;AAAuDyD,UAAAA,SAAS,EAAC;AAAjE,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,KAAK,EAAE;AAACA,UAAAA,SAAS,EAAC;AAAX,SAAZ;AAAA,gCACI,QAAC,IAAD;AAEA,UAAA,QAAQ,EAAE,IAFV;AAGA,UAAA,KAAK,EAAE;AAAExD,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAC,GAAtB;AAA2BL,YAAAA,UAAU,EAAE,SAAvC;AAAkDC,YAAAA,KAAK,EAAE,WAAzD;AAAsE0D,YAAAA,KAAK,EAAC;AAA5E,WAHP;AAIA,UAAA,QAAQ,EAAE,KAAKlC,YAJf;AAAA,kCAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAMiB,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,IAAI,EAAC,IAAzB;AAA6B,YAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,EAA/C;AAAmD,YAAA,KAAK,EAAElB;AAA1D;AAAA;AAAA;AAAA;AAAA,kBANjB,eAM+F;AAAA;AAAA;AAAA;AAAA,kBAN/F,eAMoG;AAAA;AAAA;AAAA;AAAA,kBANpG,eAMyG;AAAA;AAAA;AAAA;AAAA,kBANzG,eAM8G;AAAA;AAAA;AAAA;AAAA,kBAN9G,eAOI;AAAA,yCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAO0B,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,IAAI,EAAC,IAAzB;AAA8B,YAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWM,EAAhD;AAAmD,YAAA,KAAK,EAAEvB;AAA1D;AAAA;AAAA;AAAA;AAAA,kBAP1B,eAOwG;AAAA;AAAA;AAAA;AAAA,kBAPxG,eAO6G;AAAA;AAAA;AAAA;AAAA,kBAP7G,eAOkH;AAAA;AAAA;AAAA;AAAA,kBAPlH,eAOuH;AAAA;AAAA;AAAA;AAAA,kBAPvH,eAQI,QAAC,MAAD;AAAQ,YAAA,EAAE,EAAC,eAAX;AAA2B,YAAA,OAAO,EAC1B,MAAI,KAAK4B,cAAL,CAAoBP,UAAU,CAAC,KAAKJ,KAAL,CAAWM,EAAZ,CAA9B,CADZ;AAGI,YAAA,KAAK,EAAE;AAAClB,cAAAA,KAAK,EAAE,GAAR;AAAcC,cAAAA,MAAM,EAAC,EAArB;AAAwBL,cAAAA,UAAU,EAAE,SAApC;AAA+CC,cAAAA,KAAK,EAAE,OAAtD;AAA+DE,cAAAA,QAAQ,EAAE;AAAzE,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,mCAaI,QAAC,MAAD;AAAQ,YAAA,EAAE,EAAC,eAAX;AAA2B,YAAA,OAAO,EAE1B,MAAI,KAAK+C,OAAL,EAFZ;AAIA,YAAA,KAAK,EAAE;AAAC9C,cAAAA,KAAK,EAAE,GAAR;AAAcC,cAAAA,MAAM,EAAC,EAArB;AAAwBL,cAAAA,UAAU,EAAE,SAApC;AAA+CC,cAAAA,KAAK,EAAE,OAAtD;AAA+DE,cAAAA,QAAQ,EAAE;AAAzE,aAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAsBK,KAAKa,KAAL,CAAWO,SAAX,iBACG,QAAC,IAAD;AACA,UAAA,KAAK,EAAE,QADP;AAEA,UAAA,QAAQ,EAAE,IAFV;AAGA,UAAA,KAAK,EAAE;AAACnB,YAAAA,KAAK,EAAE,MAAR;AAAgBJ,YAAAA,UAAU,EAAE,SAA5B;AAAuCC,YAAAA,KAAK,EAAE,WAA9C;AAA2D0D,YAAAA,KAAK,EAAC,cAAjE;AAAiFE,YAAAA,gBAAgB,EAAC;AAAlG,WAHP;AAIA,UAAA,EAAE,EAAC,YAJH;AAAA,iCAMI,QAAC,KAAD;AAAO,YAAA,OAAO,EAAEtD,KAAhB;AAAuB,YAAA,QAAQ,EAAE,IAAjC;AAAuC,YAAA,UAAU,EAAED,QAAnD;AAA6D,YAAA,SAAS,EAAE;AAACJ,cAAAA,UAAU,EAAE,MAAb;AAAqBC,cAAAA,QAAQ,EAAE,MAA/B;AAAuCF,cAAAA,KAAK,EAAE;AAA9C;AAAxE;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,gBAvBR,EAiCK,KAAKe,KAAL,CAAWQ,SAAX,iBACG,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE,GAAlB;AAAuB,UAAA,MAAM,EAAE,GAA/B;AAAoC,UAAA,IAAI,EAAElB,QAA1C;AACA,UAAA,MAAM,EAAE;AAAEwD,YAAAA,GAAG,EAAE,CAAP;AAAUC,YAAAA,KAAK,EAAE,EAAjB;AAAqBC,YAAAA,IAAI,EAAE,EAA3B;AAA+BC,YAAAA,MAAM,EAAE;AAAvC,WADR;AAAA,kCAEA,QAAC,KAAD;AAAO,YAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA,QAAC,aAAD;AAAe,YAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAJA,eAKA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBALA,eAMA,QAAC,MAAD;AAAQ,YAAA,aAAa,EAAC,KAAtB;AAA4B,YAAA,MAAM,EAAE;AAApC;AAAA;AAAA;AAAA;AAAA,kBANA,eAOA,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,OAAX;AAAmB,YAAA,IAAI,EAAC,UAAxB;AAAmC,YAAA,OAAO,EAAC,OAA3C;AAAmD,YAAA,MAAM,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,kBAPA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCR;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoDH;;AAxI0B;;AA0I/B,eAAetD,MAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {Card, Input, Button, Table} from 'antd';\r\n\r\nimport { LineChart, Line ,XAxis,CartesianGrid,Tooltip,Legend,YAxis} from 'recharts';\r\nimport 'antd/dist/antd.css';\r\nimport {  compile ,derivative} from 'mathjs';\r\nimport axios from 'axios';\r\nvar api\r\nconst InputColor = {\r\n    background: \"\",\r\n    color: \"#003a8c\", \r\n    fontWeight: \"bold\", \r\n    fontSize: \"24px\",\r\n    width: 300 ,\r\n    height:50\r\n    \r\n\r\n};\r\nvar schedule=[];\r\nconst table = [\r\n    {\r\n      title: \"Iteration\",\r\n      dataIndex: \"iteration\",\r\n      key: \"iteration\"\r\n    },\r\n    {\r\n        title: \"X\",\r\n        dataIndex: \"x\",\r\n        key: \"x\"\r\n    },\r\n    {\r\n        title: \"Error\",\r\n        dataIndex: \"error\",\r\n        key: \"error\",\r\n    }\r\n];\r\n  \r\nclass Newton extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            \r\n            x0: 0,\r\n            fx: \"\",\r\n            showtable: false,\r\n            showgraph: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.newton_raphson = this.newton_raphson.bind(this);\r\n\r\n\r\n    }\r\n\r\n    newton_raphson(xold) {\r\n        \r\n        var xnew = 0;\r\n        var n=0;\r\n        var Epsilon= parseFloat(0.000000);\r\n        var array2d  = []\r\n        \r\n        array2d[0] = []//x\r\n        array2d[1] = []//error\r\n        do{ \r\n            xnew = xold - (this.func(xold)/this.funcDiff(xold));\r\n            Epsilon = Math.abs((xnew-xold) / xnew);\r\n            array2d[0][n] =  xnew.toFixed(6);\r\n            array2d[1][n] = Math.abs(Epsilon).toFixed(6);\r\n            n++;  \r\n            xold = xnew;\r\n\r\n        }while(Math.abs(Epsilon)>0.000001);\r\n        \r\n        \r\n        for (var i=0 ; i<array2d[0].length ; i++) {\r\n            schedule.push({\r\n                iteration: i+1,\r\n                x: array2d[0][i],\r\n                error: array2d[1][i]\r\n            });\r\n        }\r\n        \r\n        this.setState({\r\n            showtable: true,\r\n            showgraph: true\r\n        })\r\n\r\n        \r\n    }\r\n    func(datastr) {\r\n        \r\n        var comfunc = compile(this.state.fx)\r\n        let data = {x:parseFloat(datastr)}\r\n\r\n        return comfunc.evaluate(data)       \r\n    }\r\n\r\n    funcDiff = (X) => {\r\n        var expr = derivative(this.state.fx, 'x');\r\n        let scope = {x:parseFloat(X)};\r\n        return expr.evaluate(scope); \r\n    }\r\n    \r\n    \r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    async dataapi() {\r\n        await axios({method: \"get\",url: \"http://localhost:5000/database/newtonraphson\",}).then((response) => {console.log(\"response: \", response.data);api = response.data;});\r\n        await this.setState({\r\n            fx:api.fx,\r\n          x0:api.x0\r\n        })\r\n        \r\n        this.newton_raphson(this.state.x0)\r\n      }\r\n    render() {\r\n        return(\r\n            <body style={{ background: \"#ebe18d\", padding: \"90px\" , float:\"left\" }}>\r\n                <h2 style={{color: \"#003a8c\", fontWeight: \"bold\",fontSize: \"35px\",textAlign:\"center\"}}>Newton Paphson</h2>\r\n                <div style={{textAlign:\"center\"}}>\r\n                    <Card\r\n                    \r\n                    bordered={true}\r\n                    style={{ width: 1500 ,height:600, background: \"#ebe18d\", color: \"#FFFFFFFF\", float:\"Auto\"}}\r\n                    onChange={this.handleChange}\r\n                    >\r\n                        <h2>f(x)</h2><Input size=\"large\" name=\"fx\"value={this.state.fx} style={InputColor}></Input><br/><br/><br/><br/>\r\n                        <h2>X<sub>0</sub></h2><Input size=\"large\" name=\"x0\" value={this.state.x0}style={InputColor}></Input><br/><br/><br/><br/>\r\n                        <Button id=\"submit_button\" onClick= {\r\n                                ()=>this.newton_raphson(parseFloat(this.state.x0))\r\n                            }  \r\n                            style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}>GO</Button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                        <Button id=\"submit_button\" onClick= {\r\n                                \r\n                                ()=>this.dataapi()\r\n                        }  \r\n                        style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}>API</Button>\r\n                        \r\n                    </Card>\r\n                     \r\n                    {this.state.showtable&& \r\n                        <Card\r\n                        title={\"Output\"}\r\n                        bordered={true}\r\n                        style={{width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\", float:\"inline-start\", marginBlockStart:\"2%\"}}\r\n                        id=\"outputCard\"\r\n                        >\r\n                            <Table columns={table} bordered={true} dataSource={schedule} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"black\"}}\r\n                            ></Table>\r\n                        </Card>\r\n                    } \r\n                    {this.state.showgraph &&\r\n                        <LineChart width={730} height={250} data={schedule}\r\n                        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                        <XAxis dataKey=\"error\" />\r\n                        <YAxis />\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <Tooltip />\r\n                        <Legend verticalAlign=\"top\" height={36} />\r\n                        <Line name=\"error\" type=\"monotone\" dataKey=\"error\" stroke=\"#8884d8\" />\r\n                    </LineChart>                    \r\n                    }                   \r\n                </div>\r\n\r\n                \r\n            </body>\r\n        );\r\n    }\r\n}\r\nexport default Newton;"]},"metadata":{},"sourceType":"module"}