{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\big49\\\\Desktop\\\\numerpj\\\\numerpj\\\\src\\\\code\\\\Leastsqaures\\\\Multiple_LinearRegression.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { Input, Table, Button } from \"antd\";\nimport { addStyles, EditableMathField } from \"react-mathquill\";\nimport { Card, Col, Row } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  regression\n} = require(\"multiregress\");\n\naddStyles();\n\nconst axios = require(\"axios\");\n\nlet api;\nconst initialState = {\n  Numberofpoint: 0,\n  numberx: 0\n};\nlet data = [];\nvar columns2 = [{\n  title: \"A author\",\n  dataIndex: \"a\",\n  key: \"a\"\n}, {\n  title: \"Value A\",\n  dataIndex: \"value\",\n  key: \"value\"\n}];\nvar columns = [{\n  title: \"No.\",\n  dataIndex: \"no\",\n  key: \"no\"\n}, {\n  title: \"X\",\n  dataIndex: \"x\",\n  key: \"x\"\n}, {\n  title: \"Y\",\n  dataIndex: \"y\",\n  key: \"y\"\n}];\nlet x = [],\n    y = [],\n    tableTag = [],\n    valueans = [];\nexport default function Multiple() {\n  _s();\n\n  const [variable, setVariable] = useState(initialState);\n  const [showtable, setshowtable] = useState(false);\n  const [showans, setshowans] = useState(false);\n\n  const handlechange = e => {\n    setVariable({ ...variable,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const clearState = () => {\n    setshowans(false);\n    setshowtable(false);\n    setVariable({ ...initialState\n    });\n    valueans = [];\n    x = [];\n    y = [];\n    tableTag = [];\n  };\n\n  function createTable(n, X) {\n    for (var i = 1; i <= n; i++) {\n      x[i] = [];\n\n      for (var j = 1; j <= X; j++) {\n        x[i].push( /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            width: \"50%\",\n            height: \"30%\",\n            marginInlineEnd: \"2%\",\n            marginBlockEnd: \"2%\",\n            fontSize: \"12px\",\n            fontWeight: \"bold\"\n          },\n          id: \"x\" + i + \"\" + j,\n          placeholder: \"x\" + i + \"\" + j\n        }, \"x\" + i + \"\" + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this));\n      }\n\n      y.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"50%\",\n          height: \"30%\",\n          marginInlineEnd: \"2%\",\n          marginBlockEnd: \"2%\",\n          fontSize: \"12px\",\n          fontWeight: \"bold\"\n        },\n        id: \"y\" + i,\n        placeholder: \"y\" + i\n      }, \"y\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this));\n      tableTag.push({\n        no: i,\n        x: x[i],\n        y: y[i - 1]\n      });\n    }\n\n    setshowtable(true);\n  }\n\n  function inputvalue(n, X) {\n    for (var i = 1; i <= n; i++) {\n      valueans[i - 1] = [];\n\n      for (var j = 1; j <= X; j++) {\n        valueans[i - 1][j - 1] = parseInt(document.getElementById(\"x\" + i + \"\" + j).value);\n      }\n\n      valueans[i - 1].push(parseFloat(document.getElementById(\"y\" + i).value));\n    }\n  }\n\n  function multiplelinear(n, X) {\n    inputvalue(n, X);\n    let answer = regression(valueans);\n    console.log(valueans);\n    console.log(answer);\n\n    for (let i = 0; i <= variable.numberx; i++) {\n      data[i] = {\n        key: i,\n        a: \"a\" + i,\n        value: answer[i]\n      }; // console.log(answer[i]);\n    }\n\n    setshowans(true);\n  }\n\n  async function example() {\n    await axios({\n      method: \"get\",\n      url: \"http://localhost:5000/database/multiple\"\n    }).then(response => {\n      console.log(\"response: \", response.data);\n      api = response.data;\n    });\n    await setVariable({\n      Numberofpoint: api.numberpoint,\n      numberx: api.numberx\n    });\n    await createTable(api.numberpoint, api.numberx);\n\n    for (let i = 1; i <= api.numberpoint; i++) {\n      for (let j = 1; j <= api.numberx; j++) {\n        document.getElementById(\"x\" + i + \"\" + j).value = api.arrayX[i - 1][j - 1];\n      }\n\n      document.getElementById(\"y\" + i).value = api.arrayY[i - 1];\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"MultipleLinear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        justifyContent: \"right\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => clearState(),\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          marginLeft: \"5px\"\n        },\n        onClick: () => example(),\n        children: \"Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 10,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: \"20px\"\n              },\n              children: \"Number of point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Numberofpoint\",\n              name: \"Numberofpoint\",\n              value: variable.Numberofpoint,\n              style: {\n                width: \"90%\"\n              },\n              onChange: handlechange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: \"20px\"\n              },\n              children: \"Number of X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"number of x\",\n              name: \"numberx\",\n              value: variable.numberx,\n              style: {\n                width: \"90%\"\n              },\n              onChange: handlechange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: \"1vh\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                onClick: () => {\n                  createTable(parseFloat(variable.Numberofpoint), parseFloat(variable.numberx));\n                },\n                children: \"Submit button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), showans && /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                columns: columns2,\n                dataSource: data,\n                pagination: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 18,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              justifyContent: \"left\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: \"20px\"\n              },\n              children: \"Table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), showtable && /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Table, {\n                columns: columns,\n                dataSource: tableTag,\n                pagination: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  multiplelinear(parseFloat(variable.Numberofpoint), parseFloat(variable.numberx));\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Multiple, \"DOiYnfhL1YYwBD8WDGAcsojjqWc=\");\n\n_c = Multiple;\n\nvar _c;\n\n$RefreshReg$(_c, \"Multiple\");","map":{"version":3,"sources":["C:/Users/big49/Desktop/numerpj/numerpj/src/code/Leastsqaures/Multiple_LinearRegression.js"],"names":["React","useState","Input","Table","Button","addStyles","EditableMathField","Card","Col","Row","regression","require","axios","api","initialState","Numberofpoint","numberx","data","columns2","title","dataIndex","key","columns","x","y","tableTag","valueans","Multiple","variable","setVariable","showtable","setshowtable","showans","setshowans","handlechange","e","target","name","value","clearState","createTable","n","X","i","j","push","width","height","marginInlineEnd","marginBlockEnd","fontSize","fontWeight","no","inputvalue","parseInt","document","getElementById","parseFloat","multiplelinear","answer","console","log","a","example","method","url","then","response","numberpoint","arrayX","arrayY","justifyContent","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import { React, useState } from \"react\";\nimport { Input, Table, Button } from \"antd\";\nimport { addStyles, EditableMathField } from \"react-mathquill\";\nimport { Card, Col, Row } from \"antd\";\nconst { regression } = require(\"multiregress\");\naddStyles();\nconst axios = require(\"axios\");\nlet api;\nconst initialState = {\n  Numberofpoint: 0,\n  numberx: 0,\n};\nlet data = [];\nvar columns2 = [\n  {\n    title: \"A author\",\n    dataIndex: \"a\",\n    key: \"a\",\n  },\n  {\n    title: \"Value A\",\n    dataIndex: \"value\",\n    key: \"value\",\n  },\n];\nvar columns = [\n  {\n    title: \"No.\",\n    dataIndex: \"no\",\n    key: \"no\",\n  },\n  {\n    title: \"X\",\n    dataIndex: \"x\",\n    key: \"x\",\n  },\n  {\n    title: \"Y\",\n    dataIndex: \"y\",\n    key: \"y\",\n  },\n];\nlet x = [],\n  y = [],\n  tableTag = [],\n  valueans = [];\nexport default function Multiple() {\n  const [variable, setVariable] = useState(initialState);\n  const [showtable, setshowtable] = useState(false);\n  const [showans, setshowans] = useState(false);\n  const handlechange = (e) => {\n    setVariable({ ...variable, [e.target.name]: e.target.value });\n  };\n  const clearState = () => {\n    setshowans(false);\n    setshowtable(false);\n    setVariable({ ...initialState });\n    valueans = [];\n    x = [];\n    y = [];\n    tableTag = [];\n  };\n\n  function createTable(n, X) {\n    for (var i = 1; i <= n; i++) {\n      x[i] = [];\n      for (var j = 1; j <= X; j++) {\n        x[i].push(\n          <Input\n            style={{\n              width: \"50%\",\n              height: \"30%\",\n              marginInlineEnd: \"2%\",\n              marginBlockEnd: \"2%\",\n              fontSize: \"12px\",\n              fontWeight: \"bold\",\n            }}\n            id={\"x\" + i + \"\" + j}\n            key={\"x\" + i + \"\" + j}\n            placeholder={\"x\" + i + \"\" + j}\n          />\n        );\n      }\n      y.push(\n        <Input\n          style={{\n            width: \"50%\",\n            height: \"30%\",\n            marginInlineEnd: \"2%\",\n            marginBlockEnd: \"2%\",\n            fontSize: \"12px\",\n            fontWeight: \"bold\",\n          }}\n          id={\"y\" + i}\n          key={\"y\" + i}\n          placeholder={\"y\" + i}\n        />\n      );\n      tableTag.push({\n        no: i,\n        x: x[i],\n        y: y[i - 1],\n      });\n    }\n    setshowtable(true);\n  }\n  function inputvalue(n, X) {\n    for (var i = 1; i <= n; i++) {\n      valueans[i - 1] = [];\n      for (var j = 1; j <= X; j++) {\n        valueans[i - 1][j - 1] = parseInt(\n          document.getElementById(\"x\" + i + \"\" + j).value\n        );\n      }\n      valueans[i - 1].push(parseFloat(document.getElementById(\"y\" + i).value));\n    }\n  }\n\n  function multiplelinear(n, X) {\n    inputvalue(n, X);\n    let answer = regression(valueans);\n    console.log(valueans);\n    console.log(answer);\n    for (let i = 0; i <= variable.numberx; i++) {\n      data[i] = {\n        key: i,\n        a: \"a\" + i,\n        value: answer[i],\n      };\n      // console.log(answer[i]);\n    }\n    setshowans(true);\n  }\n  async function example() {\n    await axios({\n      method: \"get\",\n      url: \"http://localhost:5000/database/multiple\",\n    }).then((response) => {\n      console.log(\"response: \", response.data);\n      api = response.data;\n    });\n    await setVariable({\n      Numberofpoint:api.numberpoint,\n      numberx:api.numberx\n    })\n    await createTable(api.numberpoint,api.numberx)\n    for (let i = 1; i <= api.numberpoint; i++) {\n      for (let j = 1; j <= api.numberx; j++) {\n        document.getElementById(\"x\" + i + \"\" + j).value = api.arrayX[i-1][j-1]\n      }\n      document.getElementById(\"y\" + i).value = api.arrayY[i-1]\n    }\n  }\n  return (\n    <div>\n      <p>MultipleLinear</p>\n      <Card style={{ justifyContent: \"right\" }}>\n        <Button type=\"primary\" onClick={() => clearState()}>\n          Clear\n        </Button>\n        <Button\n          type=\"primary\"\n          style={{ marginLeft: \"5px\" }}\n          onClick={() => example()}\n        >\n          Example\n        </Button>\n      </Card>\n      <div>\n        <Row gutter={10}>\n          <Col span={6}>\n            <Card>\n              <p style={{ fontSize: \"20px\" }}>Number of point</p>\n              <Input\n                placeholder=\"Numberofpoint\"\n                name=\"Numberofpoint\"\n                value={variable.Numberofpoint}\n                style={{ width: \"90%\" }}\n                onChange={handlechange}\n              />\n              <p style={{ fontSize: \"20px\" }}>Number of X</p>\n              <Input\n                placeholder=\"number of x\"\n                name=\"numberx\"\n                value={variable.numberx}\n                style={{ width: \"90%\" }}\n                onChange={handlechange}\n              />\n              <div style={{ marginTop: \"1vh\" }}>\n                <Button\n                  type=\"primary\"\n                  onClick={() => {\n                    createTable(\n                      parseFloat(variable.Numberofpoint),\n                      parseFloat(variable.numberx)\n                    );\n                  }}\n                >\n                  Submit button\n                </Button>\n              </div>\n              <br />\n              {showans && (\n                <Card>\n                  <Table\n                    columns={columns2}\n                    dataSource={data}\n                    pagination={false}\n                  />\n                </Card>\n              )}\n            </Card>\n          </Col>\n          <Col span={18}>\n            <Card style={{ justifyContent: \"left\" }}>\n              <p style={{ fontSize: \"20px\" }}>Table</p>\n\n              {showtable && (\n                <Card>\n                  <Table\n                    columns={columns}\n                    dataSource={tableTag}\n                    pagination={false}\n                  />\n                  <br />\n                  <p></p>\n                  <Button\n                    onClick={() => {\n                      multiplelinear(\n                        parseFloat(variable.Numberofpoint),\n                        parseFloat(variable.numberx)\n                      );\n                    }}\n                  >\n                    Submit\n                  </Button>\n                </Card>\n              )}\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}