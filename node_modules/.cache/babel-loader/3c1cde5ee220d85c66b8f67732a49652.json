{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\big49\\\\Desktop\\\\numerpj\\\\numerpj\\\\src\\\\code\\\\Interpolation\\\\Lagrange.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputColor = {\n  background: \"\",\n  color: \"#003a8c\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\",\n  width: 300,\n  height: 50\n};\nvar table = [{\n  title: \"No.\",\n  dataIndex: \"no\",\n  key: \"no\"\n}, {\n  title: \"X\",\n  dataIndex: \"x\",\n  key: \"x\"\n}, {\n  title: \"Y\",\n  dataIndex: \"y\",\n  key: \"y\"\n}];\nvar x, y, schedul, fx;\n\nclass Lagrange extends Component {\n  constructor() {\n    super();\n    x = [];\n    y = [];\n    schedul = [];\n    this.state = {\n      interpolatePoint: 0,\n      showMatrix: true,\n      showButton: true,\n      showMatrixinput: false,\n      showMatrixButton: false,\n      showanswer: false,\n      Point: 0,\n      X: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.lagrange = this.lagrange.bind(this);\n  }\n\n  createTableInput(n) {\n    for (var i = 1; i <= n; i++) {\n      x.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"100%\",\n          height: \"50%\",\n          backgroundColor: \"#003a8c\",\n          color: \"white\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"x\" + i,\n        placeholder: \"x\" + i\n      }, \"x\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }, this));\n      y.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"100%\",\n          height: \"50%\",\n          backgroundColor: \"#003a8c\",\n          color: \"white\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"y\" + i,\n        placeholder: \"y\" + i\n      }, \"y\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this));\n      schedul.push({\n        no: i,\n        x: x[i - 1],\n        y: y[i - 1]\n      });\n    }\n\n    this.setState({\n      showMatrix: false,\n      showButton: false,\n      showMatrixinput: true,\n      showTableButton: true\n    });\n  }\n\n  datainValue() {\n    x = [];\n    y = [];\n\n    for (var i = 1; i <= this.state.Point; i++) {\n      x[i] = parseFloat(document.getElementById(\"x\" + i).value);\n      y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n    }\n  }\n\n  llagrangeI(X, nn, n) {\n    var fraction1 = 1;\n    var fraction2 = 1;\n\n    for (var i = 1; i <= n; i++) {\n      if (i !== nn) {\n        fraction1 = fraction1 * (x[i] - X);\n        fraction2 = fraction2 * (x[i] - x[nn]);\n      }\n    }\n\n    return parseFloat(fraction1 / fraction2);\n  }\n\n  lagrange(n, X) {\n    fx = 0;\n    this.datainValue();\n\n    for (var i = 1; i <= n; i++) {\n      fx = fx + this.llagrangeI(X, i, n) * y[i];\n    }\n\n    this.setState({\n      showanswer: true\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      style: {\n        background: \"#ebe18d\",\n        padding: \"90px\",\n        float: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"#003a8c\",\n          fontWeight: \"bold\",\n          fontSize: \"35px\",\n          textAlign: \"center\"\n        },\n        children: \"Lagrange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [this.state.showMatrixinput && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            columns: table,\n            dataSource: schedul,\n            pagination: false,\n            bordered: true,\n            bodyStyle: {\n              fontWeight: \"bold\",\n              fontSize: \"18px\",\n              color: \"white\",\n              overflowY: \"scroll\",\n              minWidth: 120,\n              maxHeight: 300\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), this.state.showMatrix && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Number of points(n)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            size: \"large\",\n            name: \"Point\",\n            style: InputColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 121\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 126\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            size: \"large\",\n            name: \"X\",\n            style: InputColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 99\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 104\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"interpolatePoint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            size: \"large\",\n            name: \"interpolatePoint\",\n            style: InputColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 58\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 129\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), this.state.showButton && /*#__PURE__*/_jsxDEV(Button, {\n          id: \"dimention_button\",\n          onClick: () => {\n            this.createTableInput(parseInt(this.state.Point));\n          },\n          style: {\n            width: 100,\n            height: 50,\n            background: \"#003a8c\",\n            color: \"white\",\n            fontSize: \"25px\"\n          },\n          children: \"GO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }, this), this.state.showTableButton && /*#__PURE__*/_jsxDEV(Button, {\n          id: \"matrix_button\",\n          style: {\n            width: 150,\n            height: 50,\n            background: \"#4caf50\",\n            color: \"white\",\n            fontSize: \"30px\"\n          },\n          onClick: () => this.lagrange(parseInt(this.state.interpolatePoint), parseFloat(this.state.X)),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }, this), this.state.showanswer && /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Output\",\n          bordered: true,\n          style: {\n            width: 700,\n            height: 600,\n            background: \"#40a9ff\",\n            color: \"#FFFFFFFF\",\n            float: \"Auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"24px\",\n              fontWeight: \"bold\"\n            },\n            children: fx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Lagrange;","map":{"version":3,"sources":["C:/Users/big49/Desktop/numerpj/numerpj/src/code/Interpolation/Lagrange.js"],"names":["React","Component","Card","Input","Button","Table","InputColor","background","color","fontWeight","fontSize","width","height","table","title","dataIndex","key","x","y","schedul","fx","Lagrange","constructor","state","interpolatePoint","showMatrix","showButton","showMatrixinput","showMatrixButton","showanswer","Point","X","handleChange","bind","lagrange","createTableInput","n","i","push","backgroundColor","no","setState","showTableButton","datainValue","parseFloat","document","getElementById","value","llagrangeI","nn","fraction1","fraction2","event","target","name","render","padding","float","textAlign","overflowY","minWidth","maxHeight","parseInt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Card, Input, Button, Table} from 'antd';\n\nimport 'antd/dist/antd.css';\nconst InputColor = {\n    background: \"\",\n    color: \"#003a8c\", \n    fontWeight: \"bold\", \n    fontSize: \"24px\",\n    width: 300 ,\n    height:50\n    \n\n};\nvar table = [\n    {\n      title: \"No.\",\n      dataIndex: \"no\",\n      key: \"no\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    }\n];\nvar x, y, schedul,  fx\n\nclass Lagrange extends Component {\n    \n    constructor() {\n        super();\n        x = []\n        y = []\n        \n        schedul = []\n        this.state = {\n            \n            interpolatePoint: 0,\n            showMatrix : true,\n            showButton: true,\n            showMatrixinput: false,\n            showMatrixButton: false,\n            showanswer: false,\n            Point: 0,\n            X: 0\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.lagrange = this.lagrange.bind(this);\n    \n    }  \n    createTableInput(n) {\n        for (var i=1 ; i<=n ; i++) {\n            x.push(<Input style={{\n\n                width: \"100%\",\n                height: \"50%\", \n                backgroundColor:\"#003a8c\", \n                \n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n            id={\"x\"+i} key={\"x\"+i} placeholder={\"x\"+i}/>);\n            y.push(<Input style={{\n\n                width: \"100%\",\n                height: \"50%\", \n                backgroundColor:\"#003a8c\", \n                \n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"y\"+i} key={\"y\"+i} placeholder={\"y\"+i}/>);   \n            schedul.push({\n                no: i,\n                x: x[i-1],\n                y: y[i-1]\n            });\n        }\n\n\n        this.setState({\n            showMatrix : false,\n            showButton : false,\n            showMatrixinput : true,\n            showTableButton : true\n        })\n    }\n    \n    datainValue() {\n        x = []\n        y = []\n        for (var i=1 ; i<=this.state.Point ; i++) {\n            x[i] = parseFloat(document.getElementById(\"x\"+i).value);\n            y[i] = parseFloat(document.getElementById(\"y\"+i).value);\n        }\n    }\n    llagrangeI(X, nn, n) {\n        var fraction1 = 1;\n        var fraction2 = 1;\n        for (var i=1 ; i<=n ; i++) {\n            if (i !== nn) {\n                fraction1 =fraction1 * (x[i]-X);\n\n                fraction2 = fraction2 *(x[i] - x[nn]);\n            }\n        } \n        \n        return parseFloat(fraction1/fraction2);\n    }\n\n    lagrange(n, X) {\n        fx = 0\n        this.datainValue()\n        for (var i=1 ; i<=n ; i++) {\n            fx =fx + this.llagrangeI(X, i, n)*y[i];\n        }\n        this.setState({\n            showanswer: true\n        })\n\n    } \n\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        return(\n            <body style={{ background: \"#ebe18d\", padding: \"90px\" , float:\"left\"}}>\n                     <h2 style={{color: \"#003a8c\", fontWeight: \"bold\",fontSize: \"35px\",textAlign:\"center\"}}>Lagrange</h2>\n                <div style={{textAlign:\"center\"}}>\n                    {/* <Card\n                      bordered={true}\n                      style={{ width: 700 ,height:600, background: \"#40a9ff\", color: \"#FFFFFFFF\", float:\"Auto\"}}\n                      onChange={this.handleChange}\n                    > */}\n                        {this.state.showMatrixinput && \n                        <div>\n                            <Table columns={table} dataSource={schedul} pagination={false} bordered={true} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"white\" , overflowY: \"scroll\", minWidth: 120, maxHeight: 300}}></Table>\n                            \n                        </div>}\n                        \n                        {this.state.showMatrix && \n                            <div>\n                                <h2>Number of points(n)</h2><Input size=\"large\" name=\"Point\" style={InputColor}></Input><br/><br/>\n                                <h2>X</h2><Input size=\"large\" name=\"X\" style={InputColor}></Input><br/><br/>\n                                <h2>interpolatePoint</h2><Input size=\"large\" name=\"interpolatePoint\" style={InputColor}></Input><br/>\n                            </div> \n                        }\n                        <br></br>\n                        {this.state.showButton && \n                            <Button id=\"dimention_button\" onClick= {\n                                ()=>{this.createTableInput(parseInt(this.state.Point));\n                                }\n                            }  \n                            style={{width: 100 , height:50,background: \"#003a8c\", color: \"white\", fontSize: \"25px\"}}>GO</Button>\n                            \n                        }\n                        {this.state.showTableButton && \n                            <Button \n                                id=\"matrix_button\"  \n                                style={{width: 150 , height:50,background: \"#4caf50\", color: \"white\", fontSize: \"30px\"}}\n                                onClick={()=>this.lagrange(parseInt(this.state.interpolatePoint), parseFloat(this.state.X))}>\n                                Submit\n                            </Button>\n                        }\n                        \n                    {/* </Card> */}\n                    \n\n                    {this.state.showanswer &&\n                        <Card\n                        title={\"Output\"}\n                        bordered={true}\n                        style={{width: 700 ,height:600, background: \"#40a9ff\", color: \"#FFFFFFFF\", float:\"Auto\"}}\n                        >\n                        <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{fx}</p>\n                            \n                        </Card>                        \n                    }\n\n                   \n                </div>\n\n                \n            </body>\n        );\n    }\n}\n\nexport default Lagrange;\n"]},"metadata":{},"sourceType":"module"}